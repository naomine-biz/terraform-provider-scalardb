// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/scalardb/scalardb-cluster.proto

package scalardb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data type in ScalarDB.
type DataType int32

const (
	// The default / unset value.
	DataType_DATA_TYPE_UNSPECIFIED DataType = 0
	// Boolean type.
	DataType_DATA_TYPE_BOOLEAN DataType = 1
	// Int type.
	DataType_DATA_TYPE_INT DataType = 2
	// BigInt type.
	DataType_DATA_TYPE_BIGINT DataType = 3
	// Float type.
	DataType_DATA_TYPE_FLOAT DataType = 4
	// Double type.
	DataType_DATA_TYPE_DOUBLE DataType = 5
	// Text type.
	DataType_DATA_TYPE_TEXT DataType = 6
	// Blob type.
	DataType_DATA_TYPE_BLOB DataType = 7
	// Date type.
	DataType_DATA_TYPE_DATE DataType = 8
	// Time type.
	DataType_DATA_TYPE_TIME DataType = 9
	// Timestamp type.
	DataType_DATA_TYPE_TIMESTAMP DataType = 10
	// TimestampTZ type.
	DataType_DATA_TYPE_TIMESTAMPTZ DataType = 11
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "DATA_TYPE_UNSPECIFIED",
		1:  "DATA_TYPE_BOOLEAN",
		2:  "DATA_TYPE_INT",
		3:  "DATA_TYPE_BIGINT",
		4:  "DATA_TYPE_FLOAT",
		5:  "DATA_TYPE_DOUBLE",
		6:  "DATA_TYPE_TEXT",
		7:  "DATA_TYPE_BLOB",
		8:  "DATA_TYPE_DATE",
		9:  "DATA_TYPE_TIME",
		10: "DATA_TYPE_TIMESTAMP",
		11: "DATA_TYPE_TIMESTAMPTZ",
	}
	DataType_value = map[string]int32{
		"DATA_TYPE_UNSPECIFIED": 0,
		"DATA_TYPE_BOOLEAN":     1,
		"DATA_TYPE_INT":         2,
		"DATA_TYPE_BIGINT":      3,
		"DATA_TYPE_FLOAT":       4,
		"DATA_TYPE_DOUBLE":      5,
		"DATA_TYPE_TEXT":        6,
		"DATA_TYPE_BLOB":        7,
		"DATA_TYPE_DATE":        8,
		"DATA_TYPE_TIME":        9,
		"DATA_TYPE_TIMESTAMP":   10,
		"DATA_TYPE_TIMESTAMPTZ": 11,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0}
}

// Clustering order.
type ClusteringOrder int32

const (
	// The default / unset value.
	ClusteringOrder_CLUSTERING_ORDER_UNSPECIFIED ClusteringOrder = 0
	// Ascending order.
	ClusteringOrder_CLUSTERING_ORDER_ASC ClusteringOrder = 1
	// Descending order.
	ClusteringOrder_CLUSTERING_ORDER_DESC ClusteringOrder = 2
)

// Enum value maps for ClusteringOrder.
var (
	ClusteringOrder_name = map[int32]string{
		0: "CLUSTERING_ORDER_UNSPECIFIED",
		1: "CLUSTERING_ORDER_ASC",
		2: "CLUSTERING_ORDER_DESC",
	}
	ClusteringOrder_value = map[string]int32{
		"CLUSTERING_ORDER_UNSPECIFIED": 0,
		"CLUSTERING_ORDER_ASC":         1,
		"CLUSTERING_ORDER_DESC":        2,
	}
)

func (x ClusteringOrder) Enum() *ClusteringOrder {
	p := new(ClusteringOrder)
	*p = x
	return p
}

func (x ClusteringOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusteringOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[1].Descriptor()
}

func (ClusteringOrder) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[1]
}

func (x ClusteringOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusteringOrder.Descriptor instead.
func (ClusteringOrder) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{1}
}

// A user option.
type UserOption int32

const (
	// The default / unset value.
	UserOption_USER_OPTION_UNSPECIFIED UserOption = 0
	// If specified, the user is created as a superuser
	UserOption_USER_OPTION_SUPERUSER UserOption = 1
	// If specified, the user is created as a non-superuser. If neither USER_OPTION_SUPERUSER nor
	// USER_OPTION_NO_SUPERUSER is specified, the user is created as a non-superuser.
	UserOption_USER_OPTION_NO_SUPERUSER UserOption = 2
)

// Enum value maps for UserOption.
var (
	UserOption_name = map[int32]string{
		0: "USER_OPTION_UNSPECIFIED",
		1: "USER_OPTION_SUPERUSER",
		2: "USER_OPTION_NO_SUPERUSER",
	}
	UserOption_value = map[string]int32{
		"USER_OPTION_UNSPECIFIED":  0,
		"USER_OPTION_SUPERUSER":    1,
		"USER_OPTION_NO_SUPERUSER": 2,
	}
)

func (x UserOption) Enum() *UserOption {
	p := new(UserOption)
	*p = x
	return p
}

func (x UserOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserOption) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[2].Descriptor()
}

func (UserOption) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[2]
}

func (x UserOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserOption.Descriptor instead.
func (UserOption) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{2}
}

// A privilege.
type Privilege int32

const (
	// The default / unset value.
	Privilege_PRIVILEGE_UNSPECIFIED Privilege = 0
	// The privilege for read (Get and Scan) operations.
	Privilege_PRIVILEGE_READ Privilege = 1
	// The privilege for write (Put, Insert, Upsert, and Update) operations.
	Privilege_PRIVILEGE_WRITE Privilege = 2
	// The privilege for delete (Delete) operations.
	Privilege_PRIVILEGE_DELETE Privilege = 3
	// The privilege for creating tables and indexes.
	Privilege_PRIVILEGE_CREATE Privilege = 4
	// The privilege for dropping tables and indexes.
	Privilege_PRIVILEGE_DROP Privilege = 5
	// The privilege for truncating tables.
	Privilege_PRIVILEGE_TRUNCATE Privilege = 6
	// The privilege for altering tables.
	Privilege_PRIVILEGE_ALTER Privilege = 7
	// The privilege for granting and revoking privileges to other users.
	Privilege_PRIVILEGE_GRANT Privilege = 8
)

// Enum value maps for Privilege.
var (
	Privilege_name = map[int32]string{
		0: "PRIVILEGE_UNSPECIFIED",
		1: "PRIVILEGE_READ",
		2: "PRIVILEGE_WRITE",
		3: "PRIVILEGE_DELETE",
		4: "PRIVILEGE_CREATE",
		5: "PRIVILEGE_DROP",
		6: "PRIVILEGE_TRUNCATE",
		7: "PRIVILEGE_ALTER",
		8: "PRIVILEGE_GRANT",
	}
	Privilege_value = map[string]int32{
		"PRIVILEGE_UNSPECIFIED": 0,
		"PRIVILEGE_READ":        1,
		"PRIVILEGE_WRITE":       2,
		"PRIVILEGE_DELETE":      3,
		"PRIVILEGE_CREATE":      4,
		"PRIVILEGE_DROP":        5,
		"PRIVILEGE_TRUNCATE":    6,
		"PRIVILEGE_ALTER":       7,
		"PRIVILEGE_GRANT":       8,
	}
)

func (x Privilege) Enum() *Privilege {
	p := new(Privilege)
	*p = x
	return p
}

func (x Privilege) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Privilege) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[3].Descriptor()
}

func (Privilege) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[3]
}

func (x Privilege) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Privilege.Descriptor instead.
func (Privilege) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{3}
}

// A state of a policy.
type PolicyState int32

const (
	// The default / unset value.
	PolicyState_POLICY_STATE_UNSPECIFIED PolicyState = 0
	// The policy is enabled.
	PolicyState_POLICY_STATE_ENABLED PolicyState = 1
	// The policy is disabled.
	PolicyState_POLICY_STATE_DISABLED PolicyState = 2
)

// Enum value maps for PolicyState.
var (
	PolicyState_name = map[int32]string{
		0: "POLICY_STATE_UNSPECIFIED",
		1: "POLICY_STATE_ENABLED",
		2: "POLICY_STATE_DISABLED",
	}
	PolicyState_value = map[string]int32{
		"POLICY_STATE_UNSPECIFIED": 0,
		"POLICY_STATE_ENABLED":     1,
		"POLICY_STATE_DISABLED":    2,
	}
)

func (x PolicyState) Enum() *PolicyState {
	p := new(PolicyState)
	*p = x
	return p
}

func (x PolicyState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[4].Descriptor()
}

func (PolicyState) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[4]
}

func (x PolicyState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyState.Descriptor instead.
func (PolicyState) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{4}
}

// An access mode.
type AccessMode int32

const (
	// The default / unset value.
	AccessMode_ACCESS_MODE_UNSPECIFIED AccessMode = 0
	// The access mode for read only.
	AccessMode_ACCESS_MODE_READ_ONLY AccessMode = 1
	// The access mode for read and write.
	AccessMode_ACCESS_MODE_READ_WRITE AccessMode = 2
)

// Enum value maps for AccessMode.
var (
	AccessMode_name = map[int32]string{
		0: "ACCESS_MODE_UNSPECIFIED",
		1: "ACCESS_MODE_READ_ONLY",
		2: "ACCESS_MODE_READ_WRITE",
	}
	AccessMode_value = map[string]int32{
		"ACCESS_MODE_UNSPECIFIED": 0,
		"ACCESS_MODE_READ_ONLY":   1,
		"ACCESS_MODE_READ_WRITE":  2,
	}
)

func (x AccessMode) Enum() *AccessMode {
	p := new(AccessMode)
	*p = x
	return p
}

func (x AccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[5].Descriptor()
}

func (AccessMode) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[5]
}

func (x AccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessMode.Descriptor instead.
func (AccessMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{5}
}

// Get type.
type Get_GetType int32

const (
	// The default / unset value.
	Get_GET_TYPE_UNSPECIFIED Get_GetType = 0
	// Regular get.
	Get_GET_TYPE_GET Get_GetType = 1
	// Get with index.
	Get_GET_TYPE_GET_WITH_INDEX Get_GetType = 2
)

// Enum value maps for Get_GetType.
var (
	Get_GetType_name = map[int32]string{
		0: "GET_TYPE_UNSPECIFIED",
		1: "GET_TYPE_GET",
		2: "GET_TYPE_GET_WITH_INDEX",
	}
	Get_GetType_value = map[string]int32{
		"GET_TYPE_UNSPECIFIED":    0,
		"GET_TYPE_GET":            1,
		"GET_TYPE_GET_WITH_INDEX": 2,
	}
)

func (x Get_GetType) Enum() *Get_GetType {
	p := new(Get_GetType)
	*p = x
	return p
}

func (x Get_GetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Get_GetType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[6].Descriptor()
}

func (Get_GetType) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[6]
}

func (x Get_GetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Get_GetType.Descriptor instead.
func (Get_GetType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{3, 0}
}

// Scan type.
type Scan_ScanType int32

const (
	// The default / unset value.
	Scan_SCAN_TYPE_UNSPECIFIED Scan_ScanType = 0
	// Regular scan.
	Scan_SCAN_TYPE_SCAN Scan_ScanType = 1
	// Scan with index.
	Scan_SCAN_TYPE_SCAN_WITH_INDEX Scan_ScanType = 2
	// Scan all (scanning records in all partitions).
	Scan_SCAN_TYPE_SCAN_ALL Scan_ScanType = 3
)

// Enum value maps for Scan_ScanType.
var (
	Scan_ScanType_name = map[int32]string{
		0: "SCAN_TYPE_UNSPECIFIED",
		1: "SCAN_TYPE_SCAN",
		2: "SCAN_TYPE_SCAN_WITH_INDEX",
		3: "SCAN_TYPE_SCAN_ALL",
	}
	Scan_ScanType_value = map[string]int32{
		"SCAN_TYPE_UNSPECIFIED":     0,
		"SCAN_TYPE_SCAN":            1,
		"SCAN_TYPE_SCAN_WITH_INDEX": 2,
		"SCAN_TYPE_SCAN_ALL":        3,
	}
)

func (x Scan_ScanType) Enum() *Scan_ScanType {
	p := new(Scan_ScanType)
	*p = x
	return p
}

func (x Scan_ScanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scan_ScanType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[7].Descriptor()
}

func (Scan_ScanType) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[7]
}

func (x Scan_ScanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scan_ScanType.Descriptor instead.
func (Scan_ScanType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{4, 0}
}

// Scan order.
type Scan_Ordering_Order int32

const (
	// The default / unset value.
	Scan_Ordering_ORDER_UNSPECIFIED Scan_Ordering_Order = 0
	// Ascending order.
	Scan_Ordering_ORDER_ASC Scan_Ordering_Order = 1
	// Descending order.
	Scan_Ordering_ORDER_DESC Scan_Ordering_Order = 2
)

// Enum value maps for Scan_Ordering_Order.
var (
	Scan_Ordering_Order_name = map[int32]string{
		0: "ORDER_UNSPECIFIED",
		1: "ORDER_ASC",
		2: "ORDER_DESC",
	}
	Scan_Ordering_Order_value = map[string]int32{
		"ORDER_UNSPECIFIED": 0,
		"ORDER_ASC":         1,
		"ORDER_DESC":        2,
	}
)

func (x Scan_Ordering_Order) Enum() *Scan_Ordering_Order {
	p := new(Scan_Ordering_Order)
	*p = x
	return p
}

func (x Scan_Ordering_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Scan_Ordering_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[8].Descriptor()
}

func (Scan_Ordering_Order) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[8]
}

func (x Scan_Ordering_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Scan_Ordering_Order.Descriptor instead.
func (Scan_Ordering_Order) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{4, 0, 0}
}

// A operator for conditional expression.
type ConditionalExpression_Operator int32

const (
	// The default / unset value.
	ConditionalExpression_OPERATOR_UNSPECIFIED ConditionalExpression_Operator = 0
	// Operator for `Equal`.
	ConditionalExpression_OPERATOR_EQ ConditionalExpression_Operator = 1
	// Operator for `Not Equal`.
	ConditionalExpression_OPERATOR_NE ConditionalExpression_Operator = 2
	// Operator for `Greater Than`.
	ConditionalExpression_OPERATOR_GT ConditionalExpression_Operator = 3
	// Operator for `Greater Than or Equal`.
	ConditionalExpression_OPERATOR_GTE ConditionalExpression_Operator = 4
	// Operator for `Less Than`.
	ConditionalExpression_OPERATOR_LT ConditionalExpression_Operator = 5
	// Operator for `Less Than or Equal`.
	ConditionalExpression_OPERATOR_LTE ConditionalExpression_Operator = 6
	// Operator for `Is Null`.
	ConditionalExpression_OPERATOR_IS_NULL ConditionalExpression_Operator = 7
	// Operator for `Is Not Null`.
	ConditionalExpression_OPERATOR_IS_NOT_NULL ConditionalExpression_Operator = 8
	// Operator for `Like`.
	ConditionalExpression_OPERATOR_LIKE ConditionalExpression_Operator = 9
	// Operator for `Not Like`.
	ConditionalExpression_OPERATOR_NOT_LIKE ConditionalExpression_Operator = 10
)

// Enum value maps for ConditionalExpression_Operator.
var (
	ConditionalExpression_Operator_name = map[int32]string{
		0:  "OPERATOR_UNSPECIFIED",
		1:  "OPERATOR_EQ",
		2:  "OPERATOR_NE",
		3:  "OPERATOR_GT",
		4:  "OPERATOR_GTE",
		5:  "OPERATOR_LT",
		6:  "OPERATOR_LTE",
		7:  "OPERATOR_IS_NULL",
		8:  "OPERATOR_IS_NOT_NULL",
		9:  "OPERATOR_LIKE",
		10: "OPERATOR_NOT_LIKE",
	}
	ConditionalExpression_Operator_value = map[string]int32{
		"OPERATOR_UNSPECIFIED": 0,
		"OPERATOR_EQ":          1,
		"OPERATOR_NE":          2,
		"OPERATOR_GT":          3,
		"OPERATOR_GTE":         4,
		"OPERATOR_LT":          5,
		"OPERATOR_LTE":         6,
		"OPERATOR_IS_NULL":     7,
		"OPERATOR_IS_NOT_NULL": 8,
		"OPERATOR_LIKE":        9,
		"OPERATOR_NOT_LIKE":    10,
	}
)

func (x ConditionalExpression_Operator) Enum() *ConditionalExpression_Operator {
	p := new(ConditionalExpression_Operator)
	*p = x
	return p
}

func (x ConditionalExpression_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionalExpression_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[9].Descriptor()
}

func (ConditionalExpression_Operator) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[9]
}

func (x ConditionalExpression_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionalExpression_Operator.Descriptor instead.
func (ConditionalExpression_Operator) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{5, 0}
}

// A condition type for the put operation.
type Put_PutCondition_PutConditionType int32

const (
	// The default / unset value.
	Put_PutCondition_PUT_CONDITION_TYPE_UNSPECIFIED Put_PutCondition_PutConditionType = 0
	// Condition type for `PutIf`.
	Put_PutCondition_PUT_CONDITION_TYPE_IF Put_PutCondition_PutConditionType = 1
	// Condition type for `PutIfExists`.
	Put_PutCondition_PUT_CONDITION_TYPE_IF_EXISTS Put_PutCondition_PutConditionType = 2
	// Condition type for `PutIfNotExists`.
	Put_PutCondition_PUT_CONDITION_TYPE_IF_NOT_EXISTS Put_PutCondition_PutConditionType = 3
)

// Enum value maps for Put_PutCondition_PutConditionType.
var (
	Put_PutCondition_PutConditionType_name = map[int32]string{
		0: "PUT_CONDITION_TYPE_UNSPECIFIED",
		1: "PUT_CONDITION_TYPE_IF",
		2: "PUT_CONDITION_TYPE_IF_EXISTS",
		3: "PUT_CONDITION_TYPE_IF_NOT_EXISTS",
	}
	Put_PutCondition_PutConditionType_value = map[string]int32{
		"PUT_CONDITION_TYPE_UNSPECIFIED":   0,
		"PUT_CONDITION_TYPE_IF":            1,
		"PUT_CONDITION_TYPE_IF_EXISTS":     2,
		"PUT_CONDITION_TYPE_IF_NOT_EXISTS": 3,
	}
)

func (x Put_PutCondition_PutConditionType) Enum() *Put_PutCondition_PutConditionType {
	p := new(Put_PutCondition_PutConditionType)
	*p = x
	return p
}

func (x Put_PutCondition_PutConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Put_PutCondition_PutConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[10].Descriptor()
}

func (Put_PutCondition_PutConditionType) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[10]
}

func (x Put_PutCondition_PutConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Put_PutCondition_PutConditionType.Descriptor instead.
func (Put_PutCondition_PutConditionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{6, 0, 0}
}

// A condition type for the update operation.
type Update_UpdateCondition_UpdateConditionType int32

const (
	// The default / unset value.
	Update_UpdateCondition_UPDATE_CONDITION_TYPE_UNSPECIFIED Update_UpdateCondition_UpdateConditionType = 0
	// Condition type for `UpdateIf`.
	Update_UpdateCondition_UPDATE_CONDITION_TYPE_IF Update_UpdateCondition_UpdateConditionType = 1
	// Condition type for `UpdateIfExists`.
	Update_UpdateCondition_UPDATE_CONDITION_TYPE_IF_EXISTS Update_UpdateCondition_UpdateConditionType = 2
)

// Enum value maps for Update_UpdateCondition_UpdateConditionType.
var (
	Update_UpdateCondition_UpdateConditionType_name = map[int32]string{
		0: "UPDATE_CONDITION_TYPE_UNSPECIFIED",
		1: "UPDATE_CONDITION_TYPE_IF",
		2: "UPDATE_CONDITION_TYPE_IF_EXISTS",
	}
	Update_UpdateCondition_UpdateConditionType_value = map[string]int32{
		"UPDATE_CONDITION_TYPE_UNSPECIFIED": 0,
		"UPDATE_CONDITION_TYPE_IF":          1,
		"UPDATE_CONDITION_TYPE_IF_EXISTS":   2,
	}
)

func (x Update_UpdateCondition_UpdateConditionType) Enum() *Update_UpdateCondition_UpdateConditionType {
	p := new(Update_UpdateCondition_UpdateConditionType)
	*p = x
	return p
}

func (x Update_UpdateCondition_UpdateConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Update_UpdateCondition_UpdateConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[11].Descriptor()
}

func (Update_UpdateCondition_UpdateConditionType) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[11]
}

func (x Update_UpdateCondition_UpdateConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Update_UpdateCondition_UpdateConditionType.Descriptor instead.
func (Update_UpdateCondition_UpdateConditionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{9, 0, 0}
}

// A condition type for the delete operation.
type Delete_DeleteCondition_DeleteConditionType int32

const (
	// The default / unset value.
	Delete_DeleteCondition_DELETE_CONDITION_TYPE_UNSPECIFIED Delete_DeleteCondition_DeleteConditionType = 0
	// Condition type for `DeleteIf`.
	Delete_DeleteCondition_DELETE_CONDITION_TYPE_IF Delete_DeleteCondition_DeleteConditionType = 1
	// Condition type for `DeleteIfExists`.
	Delete_DeleteCondition_DELETE_CONDITION_TYPE_IF_EXISTS Delete_DeleteCondition_DeleteConditionType = 2
)

// Enum value maps for Delete_DeleteCondition_DeleteConditionType.
var (
	Delete_DeleteCondition_DeleteConditionType_name = map[int32]string{
		0: "DELETE_CONDITION_TYPE_UNSPECIFIED",
		1: "DELETE_CONDITION_TYPE_IF",
		2: "DELETE_CONDITION_TYPE_IF_EXISTS",
	}
	Delete_DeleteCondition_DeleteConditionType_value = map[string]int32{
		"DELETE_CONDITION_TYPE_UNSPECIFIED": 0,
		"DELETE_CONDITION_TYPE_IF":          1,
		"DELETE_CONDITION_TYPE_IF_EXISTS":   2,
	}
)

func (x Delete_DeleteCondition_DeleteConditionType) Enum() *Delete_DeleteCondition_DeleteConditionType {
	p := new(Delete_DeleteCondition_DeleteConditionType)
	*p = x
	return p
}

func (x Delete_DeleteCondition_DeleteConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Delete_DeleteCondition_DeleteConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scalardb_scalardb_cluster_proto_enumTypes[12].Descriptor()
}

func (Delete_DeleteCondition_DeleteConditionType) Type() protoreflect.EnumType {
	return &file_proto_scalardb_scalardb_cluster_proto_enumTypes[12]
}

func (x Delete_DeleteCondition_DeleteConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Delete_DeleteCondition_DeleteConditionType.Descriptor instead.
func (Delete_DeleteCondition_DeleteConditionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{10, 0, 0}
}

// A column of a record that has a name and a value.
// See also: https://github.com/scalar-labs/scalardb/blob/master/docs/design.md#data-model
type Column struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The column name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The column value. It's a oneof value for each data type.
	//
	// Types that are valid to be assigned to Value:
	//
	//	*Column_BooleanValue_
	//	*Column_IntValue_
	//	*Column_BigintValue
	//	*Column_FloatValue_
	//	*Column_DoubleValue_
	//	*Column_TextValue_
	//	*Column_BlobValue_
	//	*Column_DateValue_
	//	*Column_TimeValue_
	//	*Column_TimestampValue_
	//	*Column_TimestamptzValue
	Value         isColumn_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Column) GetValue() isColumn_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Column) GetBooleanValue() *Column_BooleanValue {
	if x != nil {
		if x, ok := x.Value.(*Column_BooleanValue_); ok {
			return x.BooleanValue
		}
	}
	return nil
}

func (x *Column) GetIntValue() *Column_IntValue {
	if x != nil {
		if x, ok := x.Value.(*Column_IntValue_); ok {
			return x.IntValue
		}
	}
	return nil
}

func (x *Column) GetBigintValue() *Column_BigIntValue {
	if x != nil {
		if x, ok := x.Value.(*Column_BigintValue); ok {
			return x.BigintValue
		}
	}
	return nil
}

func (x *Column) GetFloatValue() *Column_FloatValue {
	if x != nil {
		if x, ok := x.Value.(*Column_FloatValue_); ok {
			return x.FloatValue
		}
	}
	return nil
}

func (x *Column) GetDoubleValue() *Column_DoubleValue {
	if x != nil {
		if x, ok := x.Value.(*Column_DoubleValue_); ok {
			return x.DoubleValue
		}
	}
	return nil
}

func (x *Column) GetTextValue() *Column_TextValue {
	if x != nil {
		if x, ok := x.Value.(*Column_TextValue_); ok {
			return x.TextValue
		}
	}
	return nil
}

func (x *Column) GetBlobValue() *Column_BlobValue {
	if x != nil {
		if x, ok := x.Value.(*Column_BlobValue_); ok {
			return x.BlobValue
		}
	}
	return nil
}

func (x *Column) GetDateValue() *Column_DateValue {
	if x != nil {
		if x, ok := x.Value.(*Column_DateValue_); ok {
			return x.DateValue
		}
	}
	return nil
}

func (x *Column) GetTimeValue() *Column_TimeValue {
	if x != nil {
		if x, ok := x.Value.(*Column_TimeValue_); ok {
			return x.TimeValue
		}
	}
	return nil
}

func (x *Column) GetTimestampValue() *Column_TimestampValue {
	if x != nil {
		if x, ok := x.Value.(*Column_TimestampValue_); ok {
			return x.TimestampValue
		}
	}
	return nil
}

func (x *Column) GetTimestamptzValue() *Column_TimestampTZValue {
	if x != nil {
		if x, ok := x.Value.(*Column_TimestamptzValue); ok {
			return x.TimestamptzValue
		}
	}
	return nil
}

type isColumn_Value interface {
	isColumn_Value()
}

type Column_BooleanValue_ struct {
	// For the Boolean value.
	BooleanValue *Column_BooleanValue `protobuf:"bytes,2,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type Column_IntValue_ struct {
	// For the Int value.
	IntValue *Column_IntValue `protobuf:"bytes,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Column_BigintValue struct {
	// For the BigInt value.
	BigintValue *Column_BigIntValue `protobuf:"bytes,4,opt,name=bigint_value,json=bigintValue,proto3,oneof"`
}

type Column_FloatValue_ struct {
	// For the Float value.
	FloatValue *Column_FloatValue `protobuf:"bytes,5,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Column_DoubleValue_ struct {
	// For the Double value.
	DoubleValue *Column_DoubleValue `protobuf:"bytes,6,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Column_TextValue_ struct {
	// For the Text value.
	TextValue *Column_TextValue `protobuf:"bytes,7,opt,name=text_value,json=textValue,proto3,oneof"`
}

type Column_BlobValue_ struct {
	// For the Blob value.
	BlobValue *Column_BlobValue `protobuf:"bytes,8,opt,name=blob_value,json=blobValue,proto3,oneof"`
}

type Column_DateValue_ struct {
	// For the Date value.
	DateValue *Column_DateValue `protobuf:"bytes,9,opt,name=date_value,json=dateValue,proto3,oneof"`
}

type Column_TimeValue_ struct {
	// For the Time value.
	TimeValue *Column_TimeValue `protobuf:"bytes,10,opt,name=time_value,json=timeValue,proto3,oneof"`
}

type Column_TimestampValue_ struct {
	// For the Timestamp value.
	TimestampValue *Column_TimestampValue `protobuf:"bytes,11,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

type Column_TimestamptzValue struct {
	// For the TimestampTZ value.
	TimestamptzValue *Column_TimestampTZValue `protobuf:"bytes,12,opt,name=timestamptz_value,json=timestamptzValue,proto3,oneof"`
}

func (*Column_BooleanValue_) isColumn_Value() {}

func (*Column_IntValue_) isColumn_Value() {}

func (*Column_BigintValue) isColumn_Value() {}

func (*Column_FloatValue_) isColumn_Value() {}

func (*Column_DoubleValue_) isColumn_Value() {}

func (*Column_TextValue_) isColumn_Value() {}

func (*Column_BlobValue_) isColumn_Value() {}

func (*Column_DateValue_) isColumn_Value() {}

func (*Column_TimeValue_) isColumn_Value() {}

func (*Column_TimestampValue_) isColumn_Value() {}

func (*Column_TimestamptzValue) isColumn_Value() {}

// A key for partition key and clustering key.
// See also: https://github.com/scalar-labs/scalardb/blob/master/docs/design.md#data-model
type Key struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The columns that compose a key.
	Columns       []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *Key) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// A conjunction that's specified in Get and Scan operations.
type Conjunction struct {
	state                  protoimpl.MessageState   `protogen:"open.v1"`
	ConditionalExpressions []*ConditionalExpression `protobuf:"bytes,1,rep,name=conditional_expressions,json=conditionalExpressions,proto3" json:"conditional_expressions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Conjunction) Reset() {
	*x = Conjunction{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conjunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conjunction) ProtoMessage() {}

func (x *Conjunction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conjunction.ProtoReflect.Descriptor instead.
func (*Conjunction) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *Conjunction) GetConditionalExpressions() []*ConditionalExpression {
	if x != nil {
		return x.ConditionalExpressions
	}
	return nil
}

// Specifies parameters for Get.
type Get struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the get operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the get operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The type of the get operation.
	GetType Get_GetType `protobuf:"varint,3,opt,name=get_type,json=getType,proto3,enum=scalardb.cluster.rpc.v1.Get_GetType" json:"get_type,omitempty"`
	// The partition key of the record to retrieve. If the get type is GET_TYPE_GET_WITH_INDEX,
	// specify an index key as a partition key.
	PartitionKey *Key `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The clustering key of the record to retrieve.
	ClusteringKey *Key `protobuf:"bytes,5,opt,name=clustering_key,json=clusteringKey,proto3,oneof" json:"clustering_key,omitempty"`
	// The column names that are projected.
	Projections []string `protobuf:"bytes,6,rep,name=projections,proto3" json:"projections,omitempty"`
	// The disjunctive (or-wise) set of conjunctions.
	Conjunctions []*Conjunction `protobuf:"bytes,7,rep,name=conjunctions,proto3" json:"conjunctions,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Get) Reset() {
	*x = Get{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Get) ProtoMessage() {}

func (x *Get) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Get.ProtoReflect.Descriptor instead.
func (*Get) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *Get) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Get) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Get) GetGetType() Get_GetType {
	if x != nil {
		return x.GetType
	}
	return Get_GET_TYPE_UNSPECIFIED
}

func (x *Get) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Get) GetClusteringKey() *Key {
	if x != nil {
		return x.ClusteringKey
	}
	return nil
}

func (x *Get) GetProjections() []string {
	if x != nil {
		return x.Projections
	}
	return nil
}

func (x *Get) GetConjunctions() []*Conjunction {
	if x != nil {
		return x.Conjunctions
	}
	return nil
}

func (x *Get) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Specifies parameters for Scan.
type Scan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the scan operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the scan operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The type of the scan operation.
	ScanType Scan_ScanType `protobuf:"varint,3,opt,name=scan_type,json=scanType,proto3,enum=scalardb.cluster.rpc.v1.Scan_ScanType" json:"scan_type,omitempty"`
	// The partition key of the records to scan. If the scan type is SCAN_TYPE_SCAN_WITH_INDEX,
	// specify an index key as a partition key. If the scan type is SCAN_TYPE_SCAN_ALL, don't specify
	// this field.
	PartitionKey *Key `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3,oneof" json:"partition_key,omitempty"`
	// The column names that are projected.
	Projections []string `protobuf:"bytes,5,rep,name=projections,proto3" json:"projections,omitempty"`
	// The clustering key at which to start the range. The scan types, SCAN_TYPE_SCAN_WITH_INDEX and
	// SCAN_TYPE_SCAN_ALL, don't support the range scan.
	StartClusteringKey *Key `protobuf:"bytes,6,opt,name=start_clustering_key,json=startClusteringKey,proto3,oneof" json:"start_clustering_key,omitempty"`
	// Whether the starting point of the scan range is inclusive or not.
	StartInclusive bool `protobuf:"varint,7,opt,name=start_inclusive,json=startInclusive,proto3" json:"start_inclusive,omitempty"`
	// The clustering key at which to end the range. The scan types, SCAN_TYPE_SCAN_WITH_INDEX and
	// SCAN_TYPE_SCAN_ALL, don't support the range scan.
	EndClusteringKey *Key `protobuf:"bytes,8,opt,name=end_clustering_key,json=endClusteringKey,proto3,oneof" json:"end_clustering_key,omitempty"`
	// Whether the end point of the scan range is inclusive or not.
	EndInclusive bool `protobuf:"varint,9,opt,name=end_inclusive,json=endInclusive,proto3" json:"end_inclusive,omitempty"`
	// The scan ordering. The scan types, SCAN_TYPE_SCAN_WITH_INDEX and SCAN_TYPE_SCAN_ALL, don't
	// support the scan ordering.
	Orderings []*Scan_Ordering `protobuf:"bytes,10,rep,name=orderings,proto3" json:"orderings,omitempty"`
	// The number of results to be returned.
	Limit int32 `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	// The disjunctive (or-wise) set of conjunctions.
	Conjunctions []*Conjunction `protobuf:"bytes,12,rep,name=conjunctions,proto3" json:"conjunctions,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scan) Reset() {
	*x = Scan{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scan) ProtoMessage() {}

func (x *Scan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scan.ProtoReflect.Descriptor instead.
func (*Scan) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *Scan) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Scan) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Scan) GetScanType() Scan_ScanType {
	if x != nil {
		return x.ScanType
	}
	return Scan_SCAN_TYPE_UNSPECIFIED
}

func (x *Scan) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Scan) GetProjections() []string {
	if x != nil {
		return x.Projections
	}
	return nil
}

func (x *Scan) GetStartClusteringKey() *Key {
	if x != nil {
		return x.StartClusteringKey
	}
	return nil
}

func (x *Scan) GetStartInclusive() bool {
	if x != nil {
		return x.StartInclusive
	}
	return false
}

func (x *Scan) GetEndClusteringKey() *Key {
	if x != nil {
		return x.EndClusteringKey
	}
	return nil
}

func (x *Scan) GetEndInclusive() bool {
	if x != nil {
		return x.EndInclusive
	}
	return false
}

func (x *Scan) GetOrderings() []*Scan_Ordering {
	if x != nil {
		return x.Orderings
	}
	return nil
}

func (x *Scan) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Scan) GetConjunctions() []*Conjunction {
	if x != nil {
		return x.Conjunctions
	}
	return nil
}

func (x *Scan) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// A conditional expression for conditional mutations.
type ConditionalExpression struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The target column and value of the conditional expression.
	Column *Column `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	// The operator of the conditional expression.
	Operator ConditionalExpression_Operator `protobuf:"varint,2,opt,name=operator,proto3,enum=scalardb.cluster.rpc.v1.ConditionalExpression_Operator" json:"operator,omitempty"`
	// The escape character for the LIKE operator.
	Escape        *string `protobuf:"bytes,3,opt,name=escape,proto3,oneof" json:"escape,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConditionalExpression) Reset() {
	*x = ConditionalExpression{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConditionalExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionalExpression) ProtoMessage() {}

func (x *ConditionalExpression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionalExpression.ProtoReflect.Descriptor instead.
func (*ConditionalExpression) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *ConditionalExpression) GetColumn() *Column {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *ConditionalExpression) GetOperator() ConditionalExpression_Operator {
	if x != nil {
		return x.Operator
	}
	return ConditionalExpression_OPERATOR_UNSPECIFIED
}

func (x *ConditionalExpression) GetEscape() string {
	if x != nil && x.Escape != nil {
		return *x.Escape
	}
	return ""
}

// Specifies parameters for Put.
// This is deprecated As of release 3.13.0. Will be removed in release 5.0.0.
//
// Deprecated: Marked as deprecated in proto/scalardb/scalardb-cluster.proto.
type Put struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the put operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the put operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The partition key of the record to put.
	PartitionKey *Key `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The clustering key of the record to put.
	ClusteringKey *Key `protobuf:"bytes,4,opt,name=clustering_key,json=clusteringKey,proto3,oneof" json:"clustering_key,omitempty"`
	// The non-key columns of the record to put.
	Columns []*Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	// The conditions for the put operation.
	PutCondition *Put_PutCondition `protobuf:"bytes,6,opt,name=put_condition,json=putCondition,proto3,oneof" json:"put_condition,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Put) Reset() {
	*x = Put{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Put) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Put) ProtoMessage() {}

func (x *Put) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Put.ProtoReflect.Descriptor instead.
func (*Put) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *Put) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Put) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Put) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Put) GetClusteringKey() *Key {
	if x != nil {
		return x.ClusteringKey
	}
	return nil
}

func (x *Put) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Put) GetPutCondition() *Put_PutCondition {
	if x != nil {
		return x.PutCondition
	}
	return nil
}

func (x *Put) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Specifies parameters for Insert.
type Insert struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the insert operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the insert operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The partition key of the record to insert.
	PartitionKey *Key `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The clustering key of the record to insert.
	ClusteringKey *Key `protobuf:"bytes,4,opt,name=clustering_key,json=clusteringKey,proto3,oneof" json:"clustering_key,omitempty"`
	// The non-key columns of the record to insert.
	Columns []*Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Insert) Reset() {
	*x = Insert{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Insert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Insert) ProtoMessage() {}

func (x *Insert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Insert.ProtoReflect.Descriptor instead.
func (*Insert) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *Insert) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Insert) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Insert) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Insert) GetClusteringKey() *Key {
	if x != nil {
		return x.ClusteringKey
	}
	return nil
}

func (x *Insert) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Insert) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Specifies parameters for Upsert.
type Upsert struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the upsert operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the upsert operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The partition key of the record to upsert.
	PartitionKey *Key `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The clustering key of the record to upsert.
	ClusteringKey *Key `protobuf:"bytes,4,opt,name=clustering_key,json=clusteringKey,proto3,oneof" json:"clustering_key,omitempty"`
	// The non-key columns of the record to upsert.
	Columns []*Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Upsert) Reset() {
	*x = Upsert{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Upsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upsert) ProtoMessage() {}

func (x *Upsert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upsert.ProtoReflect.Descriptor instead.
func (*Upsert) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *Upsert) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Upsert) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Upsert) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Upsert) GetClusteringKey() *Key {
	if x != nil {
		return x.ClusteringKey
	}
	return nil
}

func (x *Upsert) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Upsert) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Specifies parameters for Update.
type Update struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the update operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the update operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The partition key of the record to update.
	PartitionKey *Key `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The clustering key of the record to update.
	ClusteringKey *Key `protobuf:"bytes,4,opt,name=clustering_key,json=clusteringKey,proto3,oneof" json:"clustering_key,omitempty"`
	// The non-key columns of the record to update.
	Columns []*Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	// The conditions for the update operation.
	UpdateCondition *Update_UpdateCondition `protobuf:"bytes,6,opt,name=update_condition,json=updateCondition,proto3,oneof" json:"update_condition,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Update) Reset() {
	*x = Update{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *Update) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Update) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Update) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Update) GetClusteringKey() *Key {
	if x != nil {
		return x.ClusteringKey
	}
	return nil
}

func (x *Update) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Update) GetUpdateCondition() *Update_UpdateCondition {
	if x != nil {
		return x.UpdateCondition
	}
	return nil
}

func (x *Update) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Specifies parameters for Delete.
type Delete struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace name of the target table of the delete operation.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name of the the target table of the delete operation.
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The partition key of the record to delete.
	PartitionKey *Key `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// The clustering key of the record to delete.
	ClusteringKey *Key `protobuf:"bytes,4,opt,name=clustering_key,json=clusteringKey,proto3,oneof" json:"clustering_key,omitempty"`
	// The conditions for the delete operation.
	DeleteCondition *Delete_DeleteCondition `protobuf:"bytes,5,opt,name=delete_condition,json=deleteCondition,proto3,oneof" json:"delete_condition,omitempty"`
	// The attributes for the operation.
	Attributes    map[string]string `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Delete) Reset() {
	*x = Delete{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete) ProtoMessage() {}

func (x *Delete) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete.ProtoReflect.Descriptor instead.
func (*Delete) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *Delete) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Delete) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Delete) GetPartitionKey() *Key {
	if x != nil {
		return x.PartitionKey
	}
	return nil
}

func (x *Delete) GetClusteringKey() *Key {
	if x != nil {
		return x.ClusteringKey
	}
	return nil
}

func (x *Delete) GetDeleteCondition() *Delete_DeleteCondition {
	if x != nil {
		return x.DeleteCondition
	}
	return nil
}

func (x *Delete) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Specifies parameters for Mutation.
type Mutation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The mutation.
	//
	// Types that are valid to be assigned to Mutation:
	//
	//	*Mutation_Put
	//	*Mutation_Delete
	//	*Mutation_Insert
	//	*Mutation_Upsert
	//	*Mutation_Update
	Mutation      isMutation_Mutation `protobuf_oneof:"mutation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mutation) Reset() {
	*x = Mutation{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mutation) ProtoMessage() {}

func (x *Mutation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mutation.ProtoReflect.Descriptor instead.
func (*Mutation) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{11}
}

func (x *Mutation) GetMutation() isMutation_Mutation {
	if x != nil {
		return x.Mutation
	}
	return nil
}

func (x *Mutation) GetPut() *Put {
	if x != nil {
		if x, ok := x.Mutation.(*Mutation_Put); ok {
			return x.Put
		}
	}
	return nil
}

func (x *Mutation) GetDelete() *Delete {
	if x != nil {
		if x, ok := x.Mutation.(*Mutation_Delete); ok {
			return x.Delete
		}
	}
	return nil
}

func (x *Mutation) GetInsert() *Insert {
	if x != nil {
		if x, ok := x.Mutation.(*Mutation_Insert); ok {
			return x.Insert
		}
	}
	return nil
}

func (x *Mutation) GetUpsert() *Upsert {
	if x != nil {
		if x, ok := x.Mutation.(*Mutation_Upsert); ok {
			return x.Upsert
		}
	}
	return nil
}

func (x *Mutation) GetUpdate() *Update {
	if x != nil {
		if x, ok := x.Mutation.(*Mutation_Update); ok {
			return x.Update
		}
	}
	return nil
}

type isMutation_Mutation interface {
	isMutation_Mutation()
}

type Mutation_Put struct {
	// For Put.
	Put *Put `protobuf:"bytes,1,opt,name=put,proto3,oneof"`
}

type Mutation_Delete struct {
	// For Delete.
	Delete *Delete `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

type Mutation_Insert struct {
	// For Insert.
	Insert *Insert `protobuf:"bytes,3,opt,name=insert,proto3,oneof"`
}

type Mutation_Upsert struct {
	// For Upsert.
	Upsert *Upsert `protobuf:"bytes,4,opt,name=upsert,proto3,oneof"`
}

type Mutation_Update struct {
	// For Update.
	Update *Update `protobuf:"bytes,5,opt,name=update,proto3,oneof"`
}

func (*Mutation_Put) isMutation_Mutation() {}

func (*Mutation_Delete) isMutation_Mutation() {}

func (*Mutation_Insert) isMutation_Mutation() {}

func (*Mutation_Upsert) isMutation_Mutation() {}

func (*Mutation_Update) isMutation_Mutation() {}

// A result (record) of a get/scan operation.
type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The columns of the record.
	Columns       []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{12}
}

func (x *Result) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// Table metadata in ScalarDB.
type TableMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The map of column names and data types.
	Columns map[string]DataType `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=scalardb.cluster.rpc.v1.DataType"`
	// The partition key column names.
	PartitionKeyColumnNames []string `protobuf:"bytes,2,rep,name=partition_key_column_names,json=partitionKeyColumnNames,proto3" json:"partition_key_column_names,omitempty"`
	// The clustering key column names.
	ClusteringKeyColumnNames []string `protobuf:"bytes,3,rep,name=clustering_key_column_names,json=clusteringKeyColumnNames,proto3" json:"clustering_key_column_names,omitempty"`
	// The map of clustering key column names and clustering orders
	ClusteringOrders map[string]ClusteringOrder `protobuf:"bytes,4,rep,name=clustering_orders,json=clusteringOrders,proto3" json:"clustering_orders,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=scalardb.cluster.rpc.v1.ClusteringOrder"`
	// The secondary index column names
	SecondaryIndexColumnNames []string `protobuf:"bytes,5,rep,name=secondary_index_column_names,json=secondaryIndexColumnNames,proto3" json:"secondary_index_column_names,omitempty"`
	// The encrypted columns
	EncryptedColumns []string `protobuf:"bytes,6,rep,name=encrypted_columns,json=encryptedColumns,proto3" json:"encrypted_columns,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TableMetadata) Reset() {
	*x = TableMetadata{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMetadata) ProtoMessage() {}

func (x *TableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMetadata.ProtoReflect.Descriptor instead.
func (*TableMetadata) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{13}
}

func (x *TableMetadata) GetColumns() map[string]DataType {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableMetadata) GetPartitionKeyColumnNames() []string {
	if x != nil {
		return x.PartitionKeyColumnNames
	}
	return nil
}

func (x *TableMetadata) GetClusteringKeyColumnNames() []string {
	if x != nil {
		return x.ClusteringKeyColumnNames
	}
	return nil
}

func (x *TableMetadata) GetClusteringOrders() map[string]ClusteringOrder {
	if x != nil {
		return x.ClusteringOrders
	}
	return nil
}

func (x *TableMetadata) GetSecondaryIndexColumnNames() []string {
	if x != nil {
		return x.SecondaryIndexColumnNames
	}
	return nil
}

func (x *TableMetadata) GetEncryptedColumns() []string {
	if x != nil {
		return x.EncryptedColumns
	}
	return nil
}

// Request header for all requests.
type RequestHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The hop limit used to restrict the hop count within the cluster.
	HopLimit int32 `protobuf:"varint,1,opt,name=hop_limit,json=hopLimit,proto3" json:"hop_limit,omitempty"`
	// The auth token for authentication.
	AuthToken     *string `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3,oneof" json:"auth_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestHeader) Reset() {
	*x = RequestHeader{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHeader) ProtoMessage() {}

func (x *RequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHeader.ProtoReflect.Descriptor instead.
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{14}
}

func (x *RequestHeader) GetHopLimit() int32 {
	if x != nil {
		return x.HopLimit
	}
	return 0
}

func (x *RequestHeader) GetAuthToken() string {
	if x != nil && x.AuthToken != nil {
		return *x.AuthToken
	}
	return ""
}

// Request message for DistributedTransaction.Begin and TwoPhaseCommitTransaction.Begin.
type BeginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// You can optionally specify a transaction ID when you begin a transaction. If you specify a
	// transaction ID, it is the users' responsibility to guarantee the uniqueness of the ID.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginRequest) Reset() {
	*x = BeginRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginRequest) ProtoMessage() {}

func (x *BeginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginRequest.ProtoReflect.Descriptor instead.
func (*BeginRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{15}
}

func (x *BeginRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *BeginRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

// Response message for DistributedTransaction.Begin and TwoPhaseCommitTransaction.Begin.
type BeginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The transaction ID of the begun transaction. You need to set it to the following requests.
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginResponse) Reset() {
	*x = BeginResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginResponse) ProtoMessage() {}

func (x *BeginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginResponse.ProtoReflect.Descriptor instead.
func (*BeginResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{16}
}

func (x *BeginResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// Request message for DistributedTransaction.Get and TwoPhaseCommitTransaction.Get.
type GetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Get.
	Get           *Get `protobuf:"bytes,3,opt,name=get,proto3" json:"get,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{17}
}

func (x *GetRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *GetRequest) GetGet() *Get {
	if x != nil {
		return x.Get
	}
	return nil
}

// Response message for DistributedTransaction.Get and TwoPhaseCommitTransaction.Get.
type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A result (record) for Get.
	Result        *Result `protobuf:"bytes,1,opt,name=result,proto3,oneof" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{18}
}

func (x *GetResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

// Request message for DistributedTransaction.Scan and TwoPhaseCommitTransaction.Scan.
type ScanRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Scan.
	Scan          *Scan `protobuf:"bytes,3,opt,name=scan,proto3" json:"scan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanRequest) Reset() {
	*x = ScanRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRequest) ProtoMessage() {}

func (x *ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRequest.ProtoReflect.Descriptor instead.
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{19}
}

func (x *ScanRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *ScanRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *ScanRequest) GetScan() *Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

// Response message for DistributedTransaction.Scan and TwoPhaseCommitTransaction.Scan.
type ScanResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Results (records) for Scan.
	Results       []*Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResponse) Reset() {
	*x = ScanResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResponse) ProtoMessage() {}

func (x *ScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResponse.ProtoReflect.Descriptor instead.
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{20}
}

func (x *ScanResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

// Request message for DistributedTransaction.Put and TwoPhaseCommitTransaction.Put.
// This is deprecated As of release 3.13.0. Will be removed in release 5.0.0.
//
// Deprecated: Marked as deprecated in proto/scalardb/scalardb-cluster.proto.
type PutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Put.
	Puts          []*Put `protobuf:"bytes,3,rep,name=puts,proto3" json:"puts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{21}
}

func (x *PutRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *PutRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *PutRequest) GetPuts() []*Put {
	if x != nil {
		return x.Puts
	}
	return nil
}

// Response message for DistributedTransaction.Put and TwoPhaseCommitTransaction.Put.
// This is deprecated As of release 3.13.0. Will be removed in release 5.0.0.
//
// Deprecated: Marked as deprecated in proto/scalardb/scalardb-cluster.proto.
type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{22}
}

// Request message for DistributedTransaction.Insert and TwoPhaseCommitTransaction.Insert.
type InsertRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Insert.
	Inserts       []*Insert `protobuf:"bytes,3,rep,name=inserts,proto3" json:"inserts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertRequest) Reset() {
	*x = InsertRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRequest) ProtoMessage() {}

func (x *InsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRequest.ProtoReflect.Descriptor instead.
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{23}
}

func (x *InsertRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *InsertRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *InsertRequest) GetInserts() []*Insert {
	if x != nil {
		return x.Inserts
	}
	return nil
}

// Response message for DistributedTransaction.Insert and TwoPhaseCommitTransaction.Insert.
type InsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertResponse) Reset() {
	*x = InsertResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResponse) ProtoMessage() {}

func (x *InsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResponse.ProtoReflect.Descriptor instead.
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{24}
}

// Request message for DistributedTransaction.Upsert and TwoPhaseCommitTransaction.Upsert.
type UpsertRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Upsert.
	Upserts       []*Upsert `protobuf:"bytes,3,rep,name=upserts,proto3" json:"upserts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{25}
}

func (x *UpsertRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *UpsertRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *UpsertRequest) GetUpserts() []*Upsert {
	if x != nil {
		return x.Upserts
	}
	return nil
}

// Response message for DistributedTransaction.Upsert and TwoPhaseCommitTransaction.Upsert.
type UpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{26}
}

// Request message for DistributedTransaction.Update and TwoPhaseCommitTransaction.Update.
type UpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Update.
	Updates       []*Update `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *UpdateRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *UpdateRequest) GetUpdates() []*Update {
	if x != nil {
		return x.Updates
	}
	return nil
}

// Response message for DistributedTransaction.Update and TwoPhaseCommitTransaction.Update.
type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{28}
}

// Request message for DistributedTransaction.Delete and TwoPhaseCommitTransaction.Delete.
type DeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Delete.
	Deletes       []*Delete `protobuf:"bytes,3,rep,name=deletes,proto3" json:"deletes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DeleteRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *DeleteRequest) GetDeletes() []*Delete {
	if x != nil {
		return x.Deletes
	}
	return nil
}

// Response message for DistributedTransaction.Delete and TwoPhaseCommitTransaction.Delete.
type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{30}
}

// Request message for DistributedTransaction.Mutate and TwoPhaseCommitTransaction.Mutate.
type MutateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the begun/joined transaction. If not specified, the operation is executed
	// within a one-shot transaction.
	TransactionId *string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	// The parameters for Mutation.
	Mutations     []*Mutation `protobuf:"bytes,3,rep,name=mutations,proto3" json:"mutations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateRequest) Reset() {
	*x = MutateRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateRequest) ProtoMessage() {}

func (x *MutateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateRequest.ProtoReflect.Descriptor instead.
func (*MutateRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{31}
}

func (x *MutateRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *MutateRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *MutateRequest) GetMutations() []*Mutation {
	if x != nil {
		return x.Mutations
	}
	return nil
}

// Response message for DistributedTransaction.Mutate and TwoPhaseCommitTransaction.Mutate.
type MutateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateResponse) Reset() {
	*x = MutateResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateResponse) ProtoMessage() {}

func (x *MutateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateResponse.ProtoReflect.Descriptor instead.
func (*MutateResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{32}
}

// Request message for DistributedTransaction.Commit and TwoPhaseCommitTransaction.Commit.
type CommitRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the transaction to commit.
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{33}
}

func (x *CommitRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CommitRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// Response message for DistributedTransaction.Commit and TwoPhaseCommitTransaction.Commit.
type CommitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{34}
}

// Request message for DistributedTransaction.Rollback and TwoPhaseCommitTransaction.Rollback.
type RollbackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the transaction to rollback.
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackRequest) Reset() {
	*x = RollbackRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRequest) ProtoMessage() {}

func (x *RollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRequest.ProtoReflect.Descriptor instead.
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{35}
}

func (x *RollbackRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RollbackRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// Response message for DistributedTransaction.Rollback and TwoPhaseCommitTransaction.Rollback.
type RollbackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackResponse) Reset() {
	*x = RollbackResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResponse) ProtoMessage() {}

func (x *RollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResponse.ProtoReflect.Descriptor instead.
func (*RollbackResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{36}
}

// Request message for TwoPhaseCommitTransaction.Join.
type JoinRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the transaction to join.
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{37}
}

func (x *JoinRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *JoinRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// Response message for TwoPhaseCommitTransaction.Join.
type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{38}
}

// Request message for TwoPhaseCommitTransaction.Prepare.
type PrepareRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the transaction to prepare.
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareRequest) Reset() {
	*x = PrepareRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareRequest) ProtoMessage() {}

func (x *PrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareRequest.ProtoReflect.Descriptor instead.
func (*PrepareRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{39}
}

func (x *PrepareRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *PrepareRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// Response message for TwoPhaseCommitTransaction.Prepare.
type PrepareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareResponse) Reset() {
	*x = PrepareResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareResponse) ProtoMessage() {}

func (x *PrepareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareResponse.ProtoReflect.Descriptor instead.
func (*PrepareResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{40}
}

// Request message for TwoPhaseCommitTransaction.Validate.
type ValidateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The transaction ID of the transaction to validate.
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateRequest) Reset() {
	*x = ValidateRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRequest) ProtoMessage() {}

func (x *ValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRequest.ProtoReflect.Descriptor instead.
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{41}
}

func (x *ValidateRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *ValidateRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// Response message for TwoPhaseCommitTransaction.Validate.
type ValidateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateResponse) Reset() {
	*x = ValidateResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateResponse) ProtoMessage() {}

func (x *ValidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateResponse.ProtoReflect.Descriptor instead.
func (*ValidateResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{42}
}

// Request message for DistributedTransactionAdmin.CreateNamespace.
type CreateNamespaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace to create.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The creation options for the namespace to create.
	Options map[string]string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If set to true, the namespace will be created only if it does not exist already. If set to
	// false, it will try to create the namespace but an error may occur if it already exists.
	IfNotExists   bool `protobuf:"varint,4,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{43}
}

func (x *CreateNamespaceRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateNamespaceRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateNamespaceRequest) GetIfNotExists() bool {
	if x != nil {
		return x.IfNotExists
	}
	return false
}

// Response message for DistributedTransactionAdmin.CreateNamespace.
type CreateNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceResponse) Reset() {
	*x = CreateNamespaceResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceResponse) ProtoMessage() {}

func (x *CreateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{44}
}

// Request message for DistributedTransactionAdmin.DropNamespace.
type DropNamespaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace to drop.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// If set to true, the namespace will be dropped only if it exists. If set to false, it will try
	// to drop the namespace but an error may occur if it does not exist.
	IfExists      bool `protobuf:"varint,3,opt,name=if_exists,json=ifExists,proto3" json:"if_exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropNamespaceRequest) Reset() {
	*x = DropNamespaceRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropNamespaceRequest) ProtoMessage() {}

func (x *DropNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DropNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{45}
}

func (x *DropNamespaceRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DropNamespaceRequest) GetIfExists() bool {
	if x != nil {
		return x.IfExists
	}
	return false
}

// Response message for DistributedTransactionAdmin.DropNamespace.
type DropNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropNamespaceResponse) Reset() {
	*x = DropNamespaceResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropNamespaceResponse) ProtoMessage() {}

func (x *DropNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropNamespaceResponse.ProtoReflect.Descriptor instead.
func (*DropNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{46}
}

// Request message for DistributedTransactionAdmin.NamespaceExists.
type NamespaceExistsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace to check the existence.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceExistsRequest) Reset() {
	*x = NamespaceExistsRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceExistsRequest) ProtoMessage() {}

func (x *NamespaceExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceExistsRequest.ProtoReflect.Descriptor instead.
func (*NamespaceExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{47}
}

func (x *NamespaceExistsRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *NamespaceExistsRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.NamespaceExists.
type NamespaceExistsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the specified namespace exists or not.
	Exists        bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceExistsResponse) Reset() {
	*x = NamespaceExistsResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceExistsResponse) ProtoMessage() {}

func (x *NamespaceExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceExistsResponse.ProtoReflect.Descriptor instead.
func (*NamespaceExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{48}
}

func (x *NamespaceExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Request message for DistributedTransactionAdmin.CreateTable.
type CreateTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table to create.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table to create.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The table metadata for the table to create.
	TableMetadata *TableMetadata `protobuf:"bytes,4,opt,name=table_metadata,json=tableMetadata,proto3" json:"table_metadata,omitempty"`
	// The creation options for the table to create.
	Options map[string]string `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If set to true, the table will be created only if it does not exist already. If set to false,
	// it will try to create the table but an error may occur if it already exists.
	IfNotExists   bool `protobuf:"varint,6,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{49}
}

func (x *CreateTableRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateTableRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateTableRequest) GetTableMetadata() *TableMetadata {
	if x != nil {
		return x.TableMetadata
	}
	return nil
}

func (x *CreateTableRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateTableRequest) GetIfNotExists() bool {
	if x != nil {
		return x.IfNotExists
	}
	return false
}

// Response message for DistributedTransactionAdmin.CreateTable.
type CreateTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{50}
}

// Request message for DistributedTransactionAdmin.DropTable.
type DropTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table to drop.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table to drop.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// If set to true, the table will be dropped only if it exists. If set to false, it will try to
	// drop the table but an error may occur if it does not exist.
	IfExists      bool `protobuf:"varint,4,opt,name=if_exists,json=ifExists,proto3" json:"if_exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropTableRequest) Reset() {
	*x = DropTableRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableRequest) ProtoMessage() {}

func (x *DropTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTableRequest.ProtoReflect.Descriptor instead.
func (*DropTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{51}
}

func (x *DropTableRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropTableRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DropTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DropTableRequest) GetIfExists() bool {
	if x != nil {
		return x.IfExists
	}
	return false
}

// Response message for DistributedTransactionAdmin.DropTable.
type DropTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropTableResponse) Reset() {
	*x = DropTableResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableResponse) ProtoMessage() {}

func (x *DropTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTableResponse.ProtoReflect.Descriptor instead.
func (*DropTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{52}
}

// Request message for DistributedTransactionAdmin.TruncateTable.
type TruncateTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table to truncate.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table to truncate.
	TableName     string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TruncateTableRequest) Reset() {
	*x = TruncateTableRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TruncateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateTableRequest) ProtoMessage() {}

func (x *TruncateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateTableRequest.ProtoReflect.Descriptor instead.
func (*TruncateTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{53}
}

func (x *TruncateTableRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *TruncateTableRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *TruncateTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.TruncateTable.
type TruncateTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TruncateTableResponse) Reset() {
	*x = TruncateTableResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TruncateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateTableResponse) ProtoMessage() {}

func (x *TruncateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateTableResponse.ProtoReflect.Descriptor instead.
func (*TruncateTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{54}
}

// Request message for DistributedTransactionAdmin.TableExists.
type TableExistsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table to check the existence.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table to check the existence.
	TableName     string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableExistsRequest) Reset() {
	*x = TableExistsRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableExistsRequest) ProtoMessage() {}

func (x *TableExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableExistsRequest.ProtoReflect.Descriptor instead.
func (*TableExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{55}
}

func (x *TableExistsRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *TableExistsRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *TableExistsRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.TableExists.
type TableExistsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the specified table exists or not.
	Exists        bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableExistsResponse) Reset() {
	*x = TableExistsResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableExistsResponse) ProtoMessage() {}

func (x *TableExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableExistsResponse.ProtoReflect.Descriptor instead.
func (*TableExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{56}
}

func (x *TableExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Request message for DistributedTransactionAdmin.CreateIndex.
type CreateIndexRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table for the target column.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table for the target column.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The name of the target column.
	ColumnName string `protobuf:"bytes,4,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// The creation options for the index to create.
	Options map[string]string `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If set to true, the index will be created only if it does not exist already. If set to false,
	// it will try to create the index but an error may occur if it already exists.
	IfNotExists   bool `protobuf:"varint,6,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexRequest) Reset() {
	*x = CreateIndexRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexRequest) ProtoMessage() {}

func (x *CreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexRequest.ProtoReflect.Descriptor instead.
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{57}
}

func (x *CreateIndexRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateIndexRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateIndexRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateIndexRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *CreateIndexRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateIndexRequest) GetIfNotExists() bool {
	if x != nil {
		return x.IfNotExists
	}
	return false
}

// Response message for DistributedTransactionAdmin.CreateIndex.
type CreateIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIndexResponse) Reset() {
	*x = CreateIndexResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexResponse) ProtoMessage() {}

func (x *CreateIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexResponse.ProtoReflect.Descriptor instead.
func (*CreateIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{58}
}

// Request message for DistributedTransactionAdmin.DropIndex.
type DropIndexRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table for the target column.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table for the target column.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The name of the target column.
	ColumnName string `protobuf:"bytes,4,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// If set to true, the index will be dropped only if it exists. If set to false, it will try to
	// drop the index but an error may occur if it does not exist.
	IfExists      bool `protobuf:"varint,5,opt,name=if_exists,json=ifExists,proto3" json:"if_exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropIndexRequest) Reset() {
	*x = DropIndexRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndexRequest) ProtoMessage() {}

func (x *DropIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndexRequest.ProtoReflect.Descriptor instead.
func (*DropIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{59}
}

func (x *DropIndexRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropIndexRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DropIndexRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *DropIndexRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *DropIndexRequest) GetIfExists() bool {
	if x != nil {
		return x.IfExists
	}
	return false
}

// Response message for DistributedTransactionAdmin.DropIndex.
type DropIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropIndexResponse) Reset() {
	*x = DropIndexResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndexResponse) ProtoMessage() {}

func (x *DropIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndexResponse.ProtoReflect.Descriptor instead.
func (*DropIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{60}
}

// Request message for DistributedTransactionAdmin.IndexExists.
type IndexExistsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table for the target column.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table for the target column.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The name of the target column.
	ColumnName    string `protobuf:"bytes,4,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexExistsRequest) Reset() {
	*x = IndexExistsRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexExistsRequest) ProtoMessage() {}

func (x *IndexExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexExistsRequest.ProtoReflect.Descriptor instead.
func (*IndexExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{61}
}

func (x *IndexExistsRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *IndexExistsRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *IndexExistsRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *IndexExistsRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.IndexExists.
type IndexExistsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the specified index exists or not.
	Exists        bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexExistsResponse) Reset() {
	*x = IndexExistsResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexExistsResponse) ProtoMessage() {}

func (x *IndexExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexExistsResponse.ProtoReflect.Descriptor instead.
func (*IndexExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{62}
}

func (x *IndexExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Request message for DistributedTransactionAdmin.RepairNamespace.
type RepairNamespaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace to repair.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The creation options for the namespace to repair.
	Options       map[string]string `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairNamespaceRequest) Reset() {
	*x = RepairNamespaceRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairNamespaceRequest) ProtoMessage() {}

func (x *RepairNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairNamespaceRequest.ProtoReflect.Descriptor instead.
func (*RepairNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{63}
}

func (x *RepairNamespaceRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RepairNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *RepairNamespaceRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// Response message for DistributedTransactionAdmin.RepairNamespace.
type RepairNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairNamespaceResponse) Reset() {
	*x = RepairNamespaceResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairNamespaceResponse) ProtoMessage() {}

func (x *RepairNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairNamespaceResponse.ProtoReflect.Descriptor instead.
func (*RepairNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{64}
}

// Request message for DistributedTransactionAdmin.RepairTable.
type RepairTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the table to repair.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table to repair.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The table metadata for the table to repair.
	TableMetadata *TableMetadata `protobuf:"bytes,4,opt,name=table_metadata,json=tableMetadata,proto3" json:"table_metadata,omitempty"`
	// The creation options for the table to repair.
	Options       map[string]string `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairTableRequest) Reset() {
	*x = RepairTableRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairTableRequest) ProtoMessage() {}

func (x *RepairTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairTableRequest.ProtoReflect.Descriptor instead.
func (*RepairTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{65}
}

func (x *RepairTableRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RepairTableRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *RepairTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *RepairTableRequest) GetTableMetadata() *TableMetadata {
	if x != nil {
		return x.TableMetadata
	}
	return nil
}

func (x *RepairTableRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// Response message for DistributedTransactionAdmin.RepairTable.
type RepairTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairTableResponse) Reset() {
	*x = RepairTableResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairTableResponse) ProtoMessage() {}

func (x *RepairTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairTableResponse.ProtoReflect.Descriptor instead.
func (*RepairTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{66}
}

// Request message for DistributedTransactionAdmin.AddNewColumnToTable.
type AddNewColumnToTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the target table.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the target table.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The name of the column to add.
	ColumnName string `protobuf:"bytes,4,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// The data type of the column to add.
	ColumnDataType DataType `protobuf:"varint,5,opt,name=column_data_type,json=columnDataType,proto3,enum=scalardb.cluster.rpc.v1.DataType" json:"column_data_type,omitempty"`
	// Whether the column is encrypted or not.
	Encrypted     bool `protobuf:"varint,6,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNewColumnToTableRequest) Reset() {
	*x = AddNewColumnToTableRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNewColumnToTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewColumnToTableRequest) ProtoMessage() {}

func (x *AddNewColumnToTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewColumnToTableRequest.ProtoReflect.Descriptor instead.
func (*AddNewColumnToTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{67}
}

func (x *AddNewColumnToTableRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *AddNewColumnToTableRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *AddNewColumnToTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AddNewColumnToTableRequest) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *AddNewColumnToTableRequest) GetColumnDataType() DataType {
	if x != nil {
		return x.ColumnDataType
	}
	return DataType_DATA_TYPE_UNSPECIFIED
}

func (x *AddNewColumnToTableRequest) GetEncrypted() bool {
	if x != nil {
		return x.Encrypted
	}
	return false
}

// Response message for DistributedTransactionAdmin.AddNewColumnToTable.
type AddNewColumnToTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNewColumnToTableResponse) Reset() {
	*x = AddNewColumnToTableResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNewColumnToTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNewColumnToTableResponse) ProtoMessage() {}

func (x *AddNewColumnToTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNewColumnToTableResponse.ProtoReflect.Descriptor instead.
func (*AddNewColumnToTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{68}
}

// Request message for DistributedTransactionAdmin.CreateCoordinatorTables.
type CreateCoordinatorTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The creation options for the Coordinator table.
	Options map[string]string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If set to true, the Coordinator tables will be created only if it does not exist already. If
	// set to false, it will try to create the Coordinator tables but an error may occur if it
	// already exists.
	IfNotExist    bool `protobuf:"varint,3,opt,name=if_not_exist,json=ifNotExist,proto3" json:"if_not_exist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCoordinatorTablesRequest) Reset() {
	*x = CreateCoordinatorTablesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCoordinatorTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoordinatorTablesRequest) ProtoMessage() {}

func (x *CreateCoordinatorTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoordinatorTablesRequest.ProtoReflect.Descriptor instead.
func (*CreateCoordinatorTablesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{69}
}

func (x *CreateCoordinatorTablesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateCoordinatorTablesRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateCoordinatorTablesRequest) GetIfNotExist() bool {
	if x != nil {
		return x.IfNotExist
	}
	return false
}

// Response message for DistributedTransactionAdmin.CreateCoordinatorTables.
type CreateCoordinatorTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCoordinatorTablesResponse) Reset() {
	*x = CreateCoordinatorTablesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCoordinatorTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoordinatorTablesResponse) ProtoMessage() {}

func (x *CreateCoordinatorTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoordinatorTablesResponse.ProtoReflect.Descriptor instead.
func (*CreateCoordinatorTablesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{70}
}

// Request message for DistributedTransactionAdmin.DropCoordinatorTables.
type DropCoordinatorTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// If set to true, the Coordinator tables will be dropped only if it exists. If set to false, it
	// will try to drop the Coordinator tables but an error may occur if it does not exist.
	IfExist       bool `protobuf:"varint,2,opt,name=if_exist,json=ifExist,proto3" json:"if_exist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropCoordinatorTablesRequest) Reset() {
	*x = DropCoordinatorTablesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropCoordinatorTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCoordinatorTablesRequest) ProtoMessage() {}

func (x *DropCoordinatorTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCoordinatorTablesRequest.ProtoReflect.Descriptor instead.
func (*DropCoordinatorTablesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{71}
}

func (x *DropCoordinatorTablesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropCoordinatorTablesRequest) GetIfExist() bool {
	if x != nil {
		return x.IfExist
	}
	return false
}

// Response message for DistributedTransactionAdmin.DropCoordinatorTables.
type DropCoordinatorTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropCoordinatorTablesResponse) Reset() {
	*x = DropCoordinatorTablesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropCoordinatorTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCoordinatorTablesResponse) ProtoMessage() {}

func (x *DropCoordinatorTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCoordinatorTablesResponse.ProtoReflect.Descriptor instead.
func (*DropCoordinatorTablesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{72}
}

// Request message for DistributedTransactionAdmin.TruncateCoordinatorTables.
type TruncateCoordinatorTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TruncateCoordinatorTablesRequest) Reset() {
	*x = TruncateCoordinatorTablesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TruncateCoordinatorTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateCoordinatorTablesRequest) ProtoMessage() {}

func (x *TruncateCoordinatorTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateCoordinatorTablesRequest.ProtoReflect.Descriptor instead.
func (*TruncateCoordinatorTablesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{73}
}

func (x *TruncateCoordinatorTablesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.TruncateCoordinatorTables.
type TruncateCoordinatorTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TruncateCoordinatorTablesResponse) Reset() {
	*x = TruncateCoordinatorTablesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TruncateCoordinatorTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateCoordinatorTablesResponse) ProtoMessage() {}

func (x *TruncateCoordinatorTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateCoordinatorTablesResponse.ProtoReflect.Descriptor instead.
func (*TruncateCoordinatorTablesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{74}
}

// Request message for DistributedTransactionAdmin.CoordinatorTablesExist.
type CoordinatorTablesExistRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoordinatorTablesExistRequest) Reset() {
	*x = CoordinatorTablesExistRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinatorTablesExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorTablesExistRequest) ProtoMessage() {}

func (x *CoordinatorTablesExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorTablesExistRequest.ProtoReflect.Descriptor instead.
func (*CoordinatorTablesExistRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{75}
}

func (x *CoordinatorTablesExistRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.CoordinatorTablesExist.
type CoordinatorTablesExistResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the Coordinator tables exist or not.
	Exist         bool `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoordinatorTablesExistResponse) Reset() {
	*x = CoordinatorTablesExistResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoordinatorTablesExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorTablesExistResponse) ProtoMessage() {}

func (x *CoordinatorTablesExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorTablesExistResponse.ProtoReflect.Descriptor instead.
func (*CoordinatorTablesExistResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{76}
}

func (x *CoordinatorTablesExistResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

// Request message for DistributedTransactionAdmin.RepairCoordinatorTables.
type RepairCoordinatorTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The creation options for the Coordinator tables.
	Options       map[string]string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairCoordinatorTablesRequest) Reset() {
	*x = RepairCoordinatorTablesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairCoordinatorTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairCoordinatorTablesRequest) ProtoMessage() {}

func (x *RepairCoordinatorTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairCoordinatorTablesRequest.ProtoReflect.Descriptor instead.
func (*RepairCoordinatorTablesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{77}
}

func (x *RepairCoordinatorTablesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RepairCoordinatorTablesRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// Response message for DistributedTransactionAdmin.RepairCoordinatorTables.
type RepairCoordinatorTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepairCoordinatorTablesResponse) Reset() {
	*x = RepairCoordinatorTablesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepairCoordinatorTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairCoordinatorTablesResponse) ProtoMessage() {}

func (x *RepairCoordinatorTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairCoordinatorTablesResponse.ProtoReflect.Descriptor instead.
func (*RepairCoordinatorTablesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{78}
}

// Request message for DistributedTransactionAdmin.GetTableMetadata.
type GetTableMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the target table.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the target table.
	TableName     string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableMetadataRequest) Reset() {
	*x = GetTableMetadataRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableMetadataRequest) ProtoMessage() {}

func (x *GetTableMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetTableMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{79}
}

func (x *GetTableMetadataRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetTableMetadataRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetTableMetadataRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetTableMetadata.
type GetTableMetadataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The table metadata for the specified table.
	TableMetadata *TableMetadata `protobuf:"bytes,1,opt,name=table_metadata,json=tableMetadata,proto3,oneof" json:"table_metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableMetadataResponse) Reset() {
	*x = GetTableMetadataResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableMetadataResponse) ProtoMessage() {}

func (x *GetTableMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetTableMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{80}
}

func (x *GetTableMetadataResponse) GetTableMetadata() *TableMetadata {
	if x != nil {
		return x.TableMetadata
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetNamespaceNames.
type GetNamespaceNamesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceNamesRequest) Reset() {
	*x = GetNamespaceNamesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceNamesRequest) ProtoMessage() {}

func (x *GetNamespaceNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceNamesRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceNamesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{81}
}

func (x *GetNamespaceNamesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.GetNamespaceNames.
type GetNamespaceNamesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace names.
	NamespaceNames []string `protobuf:"bytes,1,rep,name=namespace_names,json=namespaceNames,proto3" json:"namespace_names,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNamespaceNamesResponse) Reset() {
	*x = GetNamespaceNamesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceNamesResponse) ProtoMessage() {}

func (x *GetNamespaceNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceNamesResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceNamesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{82}
}

func (x *GetNamespaceNamesResponse) GetNamespaceNames() []string {
	if x != nil {
		return x.NamespaceNames
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetNamespaceTableNames.
type GetNamespaceTableNamesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the target namespace.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceTableNamesRequest) Reset() {
	*x = GetNamespaceTableNamesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceTableNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceTableNamesRequest) ProtoMessage() {}

func (x *GetNamespaceTableNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceTableNamesRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceTableNamesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{83}
}

func (x *GetNamespaceTableNamesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetNamespaceTableNamesRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetNamespaceTableNames.
type GetNamespaceTableNamesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The table names in the specified namespace.
	TableNames    []string `protobuf:"bytes,1,rep,name=table_names,json=tableNames,proto3" json:"table_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceTableNamesResponse) Reset() {
	*x = GetNamespaceTableNamesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceTableNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceTableNamesResponse) ProtoMessage() {}

func (x *GetNamespaceTableNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceTableNamesResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceTableNamesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{84}
}

func (x *GetNamespaceTableNamesResponse) GetTableNames() []string {
	if x != nil {
		return x.TableNames
	}
	return nil
}

// Request message for DistributedTransactionAdmin.ImportTable.
type ImportTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the namespace for the target table.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the target table.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The options to import.
	Options map[string]string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The map of column data type by column name. Only set the column for which you want to override
	// the default data type mapping.
	OverrideColumnsType map[string]DataType `protobuf:"bytes,5,rep,name=override_columns_type,json=overrideColumnsType,proto3" json:"override_columns_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=scalardb.cluster.rpc.v1.DataType"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ImportTableRequest) Reset() {
	*x = ImportTableRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTableRequest) ProtoMessage() {}

func (x *ImportTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTableRequest.ProtoReflect.Descriptor instead.
func (*ImportTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{85}
}

func (x *ImportTableRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *ImportTableRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ImportTableRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ImportTableRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ImportTableRequest) GetOverrideColumnsType() map[string]DataType {
	if x != nil {
		return x.OverrideColumnsType
	}
	return nil
}

// Response message for DistributedTransactionAdmin.ImportTable.
type ImportTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportTableResponse) Reset() {
	*x = ImportTableResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportTableResponse) ProtoMessage() {}

func (x *ImportTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportTableResponse.ProtoReflect.Descriptor instead.
func (*ImportTableResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{86}
}

// Request message for DistributedTransactionAdmin.Upgrade.
type UpgradeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The options to upgrade.
	Options       map[string]string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeRequest) Reset() {
	*x = UpgradeRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeRequest) ProtoMessage() {}

func (x *UpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeRequest.ProtoReflect.Descriptor instead.
func (*UpgradeRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{87}
}

func (x *UpgradeRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *UpgradeRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

// Response message for DistributedTransactionAdmin.Upgrade.
type UpgradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpgradeResponse) Reset() {
	*x = UpgradeResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeResponse) ProtoMessage() {}

func (x *UpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeResponse.ProtoReflect.Descriptor instead.
func (*UpgradeResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{88}
}

// Request message for DistributedTransactionAdmin.CreateUser.
type CreateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to create.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user to create. If not set, the user is created without a password.
	Password *string `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`
	// The user options for the user to create.
	UserOptions   []UserOption `protobuf:"varint,4,rep,packed,name=user_options,json=userOptions,proto3,enum=scalardb.cluster.rpc.v1.UserOption" json:"user_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{89}
}

func (x *CreateUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetUserOptions() []UserOption {
	if x != nil {
		return x.UserOptions
	}
	return nil
}

// Response message for DistributedTransactionAdmin.CreateUser.
type CreateUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{90}
}

// Request message for DistributedTransactionAdmin.AlterUser.
type AlterUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to alter.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user to alter. If not set, the password is not changed. If set to an empty
	// string, the password is removed.
	Password *string `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`
	// The user options for the user to alter.
	UserOptions   []UserOption `protobuf:"varint,4,rep,packed,name=user_options,json=userOptions,proto3,enum=scalardb.cluster.rpc.v1.UserOption" json:"user_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterUserRequest) Reset() {
	*x = AlterUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterUserRequest) ProtoMessage() {}

func (x *AlterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterUserRequest.ProtoReflect.Descriptor instead.
func (*AlterUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{91}
}

func (x *AlterUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *AlterUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AlterUserRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *AlterUserRequest) GetUserOptions() []UserOption {
	if x != nil {
		return x.UserOptions
	}
	return nil
}

// Response message for DistributedTransactionAdmin.AlterUser.
type AlterUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterUserResponse) Reset() {
	*x = AlterUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterUserResponse) ProtoMessage() {}

func (x *AlterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterUserResponse.ProtoReflect.Descriptor instead.
func (*AlterUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{92}
}

// Request message for DistributedTransactionAdmin.DropUser.
type DropUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to drop.
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropUserRequest) Reset() {
	*x = DropUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUserRequest) ProtoMessage() {}

func (x *DropUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUserRequest.ProtoReflect.Descriptor instead.
func (*DropUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{93}
}

func (x *DropUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DropUser.
type DropUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropUserResponse) Reset() {
	*x = DropUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUserResponse) ProtoMessage() {}

func (x *DropUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUserResponse.ProtoReflect.Descriptor instead.
func (*DropUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{94}
}

// Request message for DistributedTransactionAdmin.Grant.
type GrantRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to grant.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The namespace name to grant.
	NamespaceName string `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name to grant. If not set, it grants privileges on all tables in the given
	// namespace.
	TableName *string `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3,oneof" json:"table_name,omitempty"`
	// The privileges to grant.
	Privileges    []Privilege `protobuf:"varint,5,rep,packed,name=privileges,proto3,enum=scalardb.cluster.rpc.v1.Privilege" json:"privileges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantRequest) Reset() {
	*x = GrantRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRequest) ProtoMessage() {}

func (x *GrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRequest.ProtoReflect.Descriptor instead.
func (*GrantRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{95}
}

func (x *GrantRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GrantRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GrantRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GrantRequest) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

func (x *GrantRequest) GetPrivileges() []Privilege {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// Response message for DistributedTransactionAdmin.Grant.
type GrantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantResponse) Reset() {
	*x = GrantResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantResponse) ProtoMessage() {}

func (x *GrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantResponse.ProtoReflect.Descriptor instead.
func (*GrantResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{96}
}

// Request message for DistributedTransactionAdmin.Revoke.
type RevokeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to revoke.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The namespace name to revoke.
	NamespaceName string `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name to revoke. If not set, it revokes privileges on all tables in the given
	// namespace.
	TableName *string `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3,oneof" json:"table_name,omitempty"`
	// The privileges to revoke.
	Privileges    []Privilege `protobuf:"varint,5,rep,packed,name=privileges,proto3,enum=scalardb.cluster.rpc.v1.Privilege" json:"privileges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeRequest) Reset() {
	*x = RevokeRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRequest) ProtoMessage() {}

func (x *RevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRequest.ProtoReflect.Descriptor instead.
func (*RevokeRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{97}
}

func (x *RevokeRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RevokeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RevokeRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *RevokeRequest) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

func (x *RevokeRequest) GetPrivileges() []Privilege {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// Response message for DistributedTransactionAdmin.Revoke.
type RevokeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeResponse) Reset() {
	*x = RevokeResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeResponse) ProtoMessage() {}

func (x *RevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeResponse.ProtoReflect.Descriptor instead.
func (*RevokeResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{98}
}

// A user.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Whether the user is a superuser or not.
	Superuser     bool `protobuf:"varint,2,opt,name=superuser,proto3" json:"superuser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{99}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetSuperuser() bool {
	if x != nil {
		return x.Superuser
	}
	return false
}

// Request message for DistributedTransactionAdmin.GetUser.
type GetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to get.
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{100}
}

func (x *GetUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetUser.
type GetUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3,oneof" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{101}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetUsers.
type GetUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{102}
}

func (x *GetUsersRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.GetUsers.
type GetUsersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The users.
	Users         []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{103}
}

func (x *GetUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetCurrentUser.
type GetCurrentUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentUserRequest) Reset() {
	*x = GetCurrentUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserRequest) ProtoMessage() {}

func (x *GetCurrentUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{104}
}

func (x *GetCurrentUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.GetCurrentUser.
type GetCurrentUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current logged-in user.
	User          *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentUserResponse) Reset() {
	*x = GetCurrentUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserResponse) ProtoMessage() {}

func (x *GetCurrentUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{105}
}

func (x *GetCurrentUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetPrivileges.
type GetPrivilegesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The name of the user to get privileges.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The namespace name to get privileges.
	NamespaceName string `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name to get privileges. If not set, it returns privileges on all tables in the given
	// namespace.
	TableName     *string `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3,oneof" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrivilegesRequest) Reset() {
	*x = GetPrivilegesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrivilegesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivilegesRequest) ProtoMessage() {}

func (x *GetPrivilegesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivilegesRequest.ProtoReflect.Descriptor instead.
func (*GetPrivilegesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{106}
}

func (x *GetPrivilegesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetPrivilegesRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetPrivilegesRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetPrivilegesRequest) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetPrivileges.
type GetPrivilegesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The privileges.
	Privileges    []Privilege `protobuf:"varint,1,rep,packed,name=privileges,proto3,enum=scalardb.cluster.rpc.v1.Privilege" json:"privileges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrivilegesResponse) Reset() {
	*x = GetPrivilegesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrivilegesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrivilegesResponse) ProtoMessage() {}

func (x *GetPrivilegesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrivilegesResponse.ProtoReflect.Descriptor instead.
func (*GetPrivilegesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{107}
}

func (x *GetPrivilegesResponse) GetPrivileges() []Privilege {
	if x != nil {
		return x.Privileges
	}
	return nil
}

// Request message for DistributedTransactionAdmin.CreatePolicy.
type CreatePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The data tag column name. If not set, the default data tag column name is used.
	DataTagColumnName *string `protobuf:"bytes,3,opt,name=data_tag_column_name,json=dataTagColumnName,proto3,oneof" json:"data_tag_column_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreatePolicyRequest) Reset() {
	*x = CreatePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyRequest) ProtoMessage() {}

func (x *CreatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{108}
}

func (x *CreatePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreatePolicyRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CreatePolicyRequest) GetDataTagColumnName() string {
	if x != nil && x.DataTagColumnName != nil {
		return *x.DataTagColumnName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.CreatePolicy.
type CreatePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyResponse) Reset() {
	*x = CreatePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyResponse) ProtoMessage() {}

func (x *CreatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyResponse.ProtoReflect.Descriptor instead.
func (*CreatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{109}
}

// Request message for DistributedTransactionAdmin.EnablePolicy.
type EnablePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName    string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnablePolicyRequest) Reset() {
	*x = EnablePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePolicyRequest) ProtoMessage() {}

func (x *EnablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePolicyRequest.ProtoReflect.Descriptor instead.
func (*EnablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{110}
}

func (x *EnablePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *EnablePolicyRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.EnablePolicy.
type EnablePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnablePolicyResponse) Reset() {
	*x = EnablePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePolicyResponse) ProtoMessage() {}

func (x *EnablePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePolicyResponse.ProtoReflect.Descriptor instead.
func (*EnablePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{111}
}

// Request message for DistributedTransactionAdmin.DisablePolicy.
type DisablePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName    string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisablePolicyRequest) Reset() {
	*x = DisablePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisablePolicyRequest) ProtoMessage() {}

func (x *DisablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisablePolicyRequest.ProtoReflect.Descriptor instead.
func (*DisablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{112}
}

func (x *DisablePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DisablePolicyRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DisablePolicy.
type DisablePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisablePolicyResponse) Reset() {
	*x = DisablePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisablePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisablePolicyResponse) ProtoMessage() {}

func (x *DisablePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisablePolicyResponse.ProtoReflect.Descriptor instead.
func (*DisablePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{113}
}

// Request message for DistributedTransactionAdmin.GetPolicy.
type GetPolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName    string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{114}
}

func (x *GetPolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetPolicyRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetPolicy.
type GetPolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The policy.
	Policy        *Policy `protobuf:"bytes,1,opt,name=policy,proto3,oneof" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyResponse) Reset() {
	*x = GetPolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResponse) ProtoMessage() {}

func (x *GetPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{115}
}

func (x *GetPolicyResponse) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetPolicies.
type GetPoliciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoliciesRequest) Reset() {
	*x = GetPoliciesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesRequest) ProtoMessage() {}

func (x *GetPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesRequest.ProtoReflect.Descriptor instead.
func (*GetPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{116}
}

func (x *GetPoliciesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.GetPolicies.
type GetPoliciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The policies.
	Policies      []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoliciesResponse) Reset() {
	*x = GetPoliciesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesResponse) ProtoMessage() {}

func (x *GetPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesResponse.ProtoReflect.Descriptor instead.
func (*GetPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{117}
}

func (x *GetPoliciesResponse) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

// Request message for DistributedTransactionAdmin.CreateLevel.
type CreateLevelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the level.
	LevelShortName string `protobuf:"bytes,3,opt,name=level_short_name,json=levelShortName,proto3" json:"level_short_name,omitempty"`
	// The long name of the level.
	LevelLongName string `protobuf:"bytes,4,opt,name=level_long_name,json=levelLongName,proto3" json:"level_long_name,omitempty"`
	// The level number.
	LevelNumber   int32 `protobuf:"varint,5,opt,name=level_number,json=levelNumber,proto3" json:"level_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLevelRequest) Reset() {
	*x = CreateLevelRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLevelRequest) ProtoMessage() {}

func (x *CreateLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLevelRequest.ProtoReflect.Descriptor instead.
func (*CreateLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{118}
}

func (x *CreateLevelRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateLevelRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CreateLevelRequest) GetLevelShortName() string {
	if x != nil {
		return x.LevelShortName
	}
	return ""
}

func (x *CreateLevelRequest) GetLevelLongName() string {
	if x != nil {
		return x.LevelLongName
	}
	return ""
}

func (x *CreateLevelRequest) GetLevelNumber() int32 {
	if x != nil {
		return x.LevelNumber
	}
	return 0
}

// Response message for DistributedTransactionAdmin.CreateLevel.
type CreateLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLevelResponse) Reset() {
	*x = CreateLevelResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLevelResponse) ProtoMessage() {}

func (x *CreateLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLevelResponse.ProtoReflect.Descriptor instead.
func (*CreateLevelResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{119}
}

// Request message for DistributedTransactionAdmin.DropLevel.
type DropLevelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the level.
	LevelShortName string `protobuf:"bytes,3,opt,name=level_short_name,json=levelShortName,proto3" json:"level_short_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DropLevelRequest) Reset() {
	*x = DropLevelRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropLevelRequest) ProtoMessage() {}

func (x *DropLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropLevelRequest.ProtoReflect.Descriptor instead.
func (*DropLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{120}
}

func (x *DropLevelRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropLevelRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *DropLevelRequest) GetLevelShortName() string {
	if x != nil {
		return x.LevelShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DropLevel.
type DropLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropLevelResponse) Reset() {
	*x = DropLevelResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropLevelResponse) ProtoMessage() {}

func (x *DropLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropLevelResponse.ProtoReflect.Descriptor instead.
func (*DropLevelResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{121}
}

// Request message for DistributedTransactionAdmin.GetLevel.
type GetLevelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the level.
	LevelShortName string `protobuf:"bytes,3,opt,name=level_short_name,json=levelShortName,proto3" json:"level_short_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLevelRequest) Reset() {
	*x = GetLevelRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelRequest) ProtoMessage() {}

func (x *GetLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelRequest.ProtoReflect.Descriptor instead.
func (*GetLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{122}
}

func (x *GetLevelRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetLevelRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *GetLevelRequest) GetLevelShortName() string {
	if x != nil {
		return x.LevelShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetLevel.
type GetLevelResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The level.
	Level         *Level `protobuf:"bytes,1,opt,name=level,proto3,oneof" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLevelResponse) Reset() {
	*x = GetLevelResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelResponse) ProtoMessage() {}

func (x *GetLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelResponse.ProtoReflect.Descriptor instead.
func (*GetLevelResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{123}
}

func (x *GetLevelResponse) GetLevel() *Level {
	if x != nil {
		return x.Level
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetLevels.
type GetLevelsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName    string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLevelsRequest) Reset() {
	*x = GetLevelsRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLevelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelsRequest) ProtoMessage() {}

func (x *GetLevelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelsRequest.ProtoReflect.Descriptor instead.
func (*GetLevelsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{124}
}

func (x *GetLevelsRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetLevelsRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetLevels.
type GetLevelsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The levels.
	Levels        []*Level `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLevelsResponse) Reset() {
	*x = GetLevelsResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLevelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLevelsResponse) ProtoMessage() {}

func (x *GetLevelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLevelsResponse.ProtoReflect.Descriptor instead.
func (*GetLevelsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{125}
}

func (x *GetLevelsResponse) GetLevels() []*Level {
	if x != nil {
		return x.Levels
	}
	return nil
}

// Request message for DistributedTransactionAdmin.CreateCompartment.
type CreateCompartmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the compartment.
	CompartmentShortName string `protobuf:"bytes,3,opt,name=compartment_short_name,json=compartmentShortName,proto3" json:"compartment_short_name,omitempty"`
	// The long name of the compartment.
	CompartmentLongName string `protobuf:"bytes,4,opt,name=compartment_long_name,json=compartmentLongName,proto3" json:"compartment_long_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateCompartmentRequest) Reset() {
	*x = CreateCompartmentRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompartmentRequest) ProtoMessage() {}

func (x *CreateCompartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompartmentRequest.ProtoReflect.Descriptor instead.
func (*CreateCompartmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{126}
}

func (x *CreateCompartmentRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateCompartmentRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CreateCompartmentRequest) GetCompartmentShortName() string {
	if x != nil {
		return x.CompartmentShortName
	}
	return ""
}

func (x *CreateCompartmentRequest) GetCompartmentLongName() string {
	if x != nil {
		return x.CompartmentLongName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.CreateCompartment.
type CreateCompartmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCompartmentResponse) Reset() {
	*x = CreateCompartmentResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompartmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompartmentResponse) ProtoMessage() {}

func (x *CreateCompartmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompartmentResponse.ProtoReflect.Descriptor instead.
func (*CreateCompartmentResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{127}
}

// Request message for DistributedTransactionAdmin.DropCompartment.
type DropCompartmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the compartment.
	CompartmentShortName string `protobuf:"bytes,3,opt,name=compartment_short_name,json=compartmentShortName,proto3" json:"compartment_short_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DropCompartmentRequest) Reset() {
	*x = DropCompartmentRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropCompartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCompartmentRequest) ProtoMessage() {}

func (x *DropCompartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCompartmentRequest.ProtoReflect.Descriptor instead.
func (*DropCompartmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{128}
}

func (x *DropCompartmentRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropCompartmentRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *DropCompartmentRequest) GetCompartmentShortName() string {
	if x != nil {
		return x.CompartmentShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DropCompartment.
type DropCompartmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropCompartmentResponse) Reset() {
	*x = DropCompartmentResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropCompartmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCompartmentResponse) ProtoMessage() {}

func (x *DropCompartmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCompartmentResponse.ProtoReflect.Descriptor instead.
func (*DropCompartmentResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{129}
}

// Request message for DistributedTransactionAdmin.GetCompartment.
type GetCompartmentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the compartment.
	CompartmentShortName string `protobuf:"bytes,3,opt,name=compartment_short_name,json=compartmentShortName,proto3" json:"compartment_short_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetCompartmentRequest) Reset() {
	*x = GetCompartmentRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompartmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompartmentRequest) ProtoMessage() {}

func (x *GetCompartmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompartmentRequest.ProtoReflect.Descriptor instead.
func (*GetCompartmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{130}
}

func (x *GetCompartmentRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetCompartmentRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *GetCompartmentRequest) GetCompartmentShortName() string {
	if x != nil {
		return x.CompartmentShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetCompartment.
type GetCompartmentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The compartment.
	Compartment   *Compartment `protobuf:"bytes,1,opt,name=compartment,proto3,oneof" json:"compartment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompartmentResponse) Reset() {
	*x = GetCompartmentResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompartmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompartmentResponse) ProtoMessage() {}

func (x *GetCompartmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompartmentResponse.ProtoReflect.Descriptor instead.
func (*GetCompartmentResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{131}
}

func (x *GetCompartmentResponse) GetCompartment() *Compartment {
	if x != nil {
		return x.Compartment
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetCompartments.
type GetCompartmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName    string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompartmentsRequest) Reset() {
	*x = GetCompartmentsRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompartmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompartmentsRequest) ProtoMessage() {}

func (x *GetCompartmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompartmentsRequest.ProtoReflect.Descriptor instead.
func (*GetCompartmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{132}
}

func (x *GetCompartmentsRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetCompartmentsRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetCompartments.
type GetCompartmentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The compartments.
	Compartments  []*Compartment `protobuf:"bytes,1,rep,name=compartments,proto3" json:"compartments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompartmentsResponse) Reset() {
	*x = GetCompartmentsResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompartmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompartmentsResponse) ProtoMessage() {}

func (x *GetCompartmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompartmentsResponse.ProtoReflect.Descriptor instead.
func (*GetCompartmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{133}
}

func (x *GetCompartmentsResponse) GetCompartments() []*Compartment {
	if x != nil {
		return x.Compartments
	}
	return nil
}

// Request message for DistributedTransactionAdmin.CreateGroup.
type CreateGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the group.
	GroupShortName string `protobuf:"bytes,3,opt,name=group_short_name,json=groupShortName,proto3" json:"group_short_name,omitempty"`
	// The long name of the group.
	GroupLongName string `protobuf:"bytes,4,opt,name=group_long_name,json=groupLongName,proto3" json:"group_long_name,omitempty"`
	// The short name of the parent group. If not set, the group is a top-level group.
	ParentGroupShortName *string `protobuf:"bytes,5,opt,name=parent_group_short_name,json=parentGroupShortName,proto3,oneof" json:"parent_group_short_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{134}
}

func (x *CreateGroupRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateGroupRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupShortName() string {
	if x != nil {
		return x.GroupShortName
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupLongName() string {
	if x != nil {
		return x.GroupLongName
	}
	return ""
}

func (x *CreateGroupRequest) GetParentGroupShortName() string {
	if x != nil && x.ParentGroupShortName != nil {
		return *x.ParentGroupShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.CreateGroup.
type CreateGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{135}
}

// Request message for DistributedTransactionAdmin.DropGroup.
type DropGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the group.
	GroupShortName string `protobuf:"bytes,3,opt,name=group_short_name,json=groupShortName,proto3" json:"group_short_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DropGroupRequest) Reset() {
	*x = DropGroupRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropGroupRequest) ProtoMessage() {}

func (x *DropGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropGroupRequest.ProtoReflect.Descriptor instead.
func (*DropGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{136}
}

func (x *DropGroupRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropGroupRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *DropGroupRequest) GetGroupShortName() string {
	if x != nil {
		return x.GroupShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DropGroup.
type DropGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropGroupResponse) Reset() {
	*x = DropGroupResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropGroupResponse) ProtoMessage() {}

func (x *DropGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropGroupResponse.ProtoReflect.Descriptor instead.
func (*DropGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{137}
}

// Request message for DistributedTransactionAdmin.GetGroup.
type GetGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the group.
	GroupShortName string `protobuf:"bytes,3,opt,name=group_short_name,json=groupShortName,proto3" json:"group_short_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{138}
}

func (x *GetGroupRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetGroupRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *GetGroupRequest) GetGroupShortName() string {
	if x != nil {
		return x.GroupShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetGroup.
type GetGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The group.
	Group         *Group `protobuf:"bytes,1,opt,name=group,proto3,oneof" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupResponse) Reset() {
	*x = GetGroupResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResponse) ProtoMessage() {}

func (x *GetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResponse.ProtoReflect.Descriptor instead.
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{139}
}

func (x *GetGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetGroups.
type GetGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName    string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{140}
}

func (x *GetGroupsRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetGroupsRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetGroups.
type GetGroupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The groups.
	Groups        []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{141}
}

func (x *GetGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// Request message for DistributedTransactionAdmin.SetLevelsToUser.
type SetLevelsToUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// The short name of the level to set.
	LevelShortName string `protobuf:"bytes,4,opt,name=level_short_name,json=levelShortName,proto3" json:"level_short_name,omitempty"`
	// The short name of the default level. If not set, `level_short_name` will be used as the default
	// level.
	DefaultLevelShortName *string `protobuf:"bytes,5,opt,name=default_level_short_name,json=defaultLevelShortName,proto3,oneof" json:"default_level_short_name,omitempty"`
	// The short name of the row level. If not set, `default_level_short_name` will be used as the row
	// level.
	RowLevelShortName *string `protobuf:"bytes,6,opt,name=row_level_short_name,json=rowLevelShortName,proto3,oneof" json:"row_level_short_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SetLevelsToUserRequest) Reset() {
	*x = SetLevelsToUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLevelsToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLevelsToUserRequest) ProtoMessage() {}

func (x *SetLevelsToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLevelsToUserRequest.ProtoReflect.Descriptor instead.
func (*SetLevelsToUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{142}
}

func (x *SetLevelsToUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *SetLevelsToUserRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *SetLevelsToUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetLevelsToUserRequest) GetLevelShortName() string {
	if x != nil {
		return x.LevelShortName
	}
	return ""
}

func (x *SetLevelsToUserRequest) GetDefaultLevelShortName() string {
	if x != nil && x.DefaultLevelShortName != nil {
		return *x.DefaultLevelShortName
	}
	return ""
}

func (x *SetLevelsToUserRequest) GetRowLevelShortName() string {
	if x != nil && x.RowLevelShortName != nil {
		return *x.RowLevelShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.SetLevelsToUser.
type SetLevelsToUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLevelsToUserResponse) Reset() {
	*x = SetLevelsToUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLevelsToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLevelsToUserResponse) ProtoMessage() {}

func (x *SetLevelsToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLevelsToUserResponse.ProtoReflect.Descriptor instead.
func (*SetLevelsToUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{143}
}

// Request message for DistributedTransactionAdmin.AddCompartmentToUser.
type AddCompartmentToUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// The short name of the compartment.
	CompartmentShortName string `protobuf:"bytes,4,opt,name=compartment_short_name,json=compartmentShortName,proto3" json:"compartment_short_name,omitempty"`
	// The access mode.
	AccessMode AccessMode `protobuf:"varint,5,opt,name=access_mode,json=accessMode,proto3,enum=scalardb.cluster.rpc.v1.AccessMode" json:"access_mode,omitempty"`
	// Whether the compartment is a default compartment.
	DefaultCompartment bool `protobuf:"varint,6,opt,name=default_compartment,json=defaultCompartment,proto3" json:"default_compartment,omitempty"`
	// Whether the compartment is a row compartment.
	RowCompartment bool `protobuf:"varint,7,opt,name=row_compartment,json=rowCompartment,proto3" json:"row_compartment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddCompartmentToUserRequest) Reset() {
	*x = AddCompartmentToUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCompartmentToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompartmentToUserRequest) ProtoMessage() {}

func (x *AddCompartmentToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompartmentToUserRequest.ProtoReflect.Descriptor instead.
func (*AddCompartmentToUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{144}
}

func (x *AddCompartmentToUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *AddCompartmentToUserRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *AddCompartmentToUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddCompartmentToUserRequest) GetCompartmentShortName() string {
	if x != nil {
		return x.CompartmentShortName
	}
	return ""
}

func (x *AddCompartmentToUserRequest) GetAccessMode() AccessMode {
	if x != nil {
		return x.AccessMode
	}
	return AccessMode_ACCESS_MODE_UNSPECIFIED
}

func (x *AddCompartmentToUserRequest) GetDefaultCompartment() bool {
	if x != nil {
		return x.DefaultCompartment
	}
	return false
}

func (x *AddCompartmentToUserRequest) GetRowCompartment() bool {
	if x != nil {
		return x.RowCompartment
	}
	return false
}

// Response message for DistributedTransactionAdmin.AddCompartmentToUser.
type AddCompartmentToUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCompartmentToUserResponse) Reset() {
	*x = AddCompartmentToUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCompartmentToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompartmentToUserResponse) ProtoMessage() {}

func (x *AddCompartmentToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompartmentToUserResponse.ProtoReflect.Descriptor instead.
func (*AddCompartmentToUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{145}
}

// Request message for DistributedTransactionAdmin.RemoveCompartmentFromUser.
type RemoveCompartmentFromUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// The short name of the compartment.
	CompartmentShortName string `protobuf:"bytes,4,opt,name=compartment_short_name,json=compartmentShortName,proto3" json:"compartment_short_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RemoveCompartmentFromUserRequest) Reset() {
	*x = RemoveCompartmentFromUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCompartmentFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCompartmentFromUserRequest) ProtoMessage() {}

func (x *RemoveCompartmentFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCompartmentFromUserRequest.ProtoReflect.Descriptor instead.
func (*RemoveCompartmentFromUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{146}
}

func (x *RemoveCompartmentFromUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RemoveCompartmentFromUserRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *RemoveCompartmentFromUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RemoveCompartmentFromUserRequest) GetCompartmentShortName() string {
	if x != nil {
		return x.CompartmentShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.RemoveCompartmentFromUser.
type RemoveCompartmentFromUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCompartmentFromUserResponse) Reset() {
	*x = RemoveCompartmentFromUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCompartmentFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCompartmentFromUserResponse) ProtoMessage() {}

func (x *RemoveCompartmentFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCompartmentFromUserResponse.ProtoReflect.Descriptor instead.
func (*RemoveCompartmentFromUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{147}
}

// Request message for DistributedTransactionAdmin.AddGroupToUser.
type AddGroupToUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// The short name of the group.
	GroupShortName string `protobuf:"bytes,4,opt,name=group_short_name,json=groupShortName,proto3" json:"group_short_name,omitempty"`
	// The access mode.
	AccessMode AccessMode `protobuf:"varint,5,opt,name=access_mode,json=accessMode,proto3,enum=scalardb.cluster.rpc.v1.AccessMode" json:"access_mode,omitempty"`
	// Whether the group is a default group.
	DefaultGroup bool `protobuf:"varint,6,opt,name=default_group,json=defaultGroup,proto3" json:"default_group,omitempty"`
	// Whether the group is a row group.
	RowGroup      bool `protobuf:"varint,7,opt,name=row_group,json=rowGroup,proto3" json:"row_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupToUserRequest) Reset() {
	*x = AddGroupToUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupToUserRequest) ProtoMessage() {}

func (x *AddGroupToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupToUserRequest.ProtoReflect.Descriptor instead.
func (*AddGroupToUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{148}
}

func (x *AddGroupToUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *AddGroupToUserRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *AddGroupToUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddGroupToUserRequest) GetGroupShortName() string {
	if x != nil {
		return x.GroupShortName
	}
	return ""
}

func (x *AddGroupToUserRequest) GetAccessMode() AccessMode {
	if x != nil {
		return x.AccessMode
	}
	return AccessMode_ACCESS_MODE_UNSPECIFIED
}

func (x *AddGroupToUserRequest) GetDefaultGroup() bool {
	if x != nil {
		return x.DefaultGroup
	}
	return false
}

func (x *AddGroupToUserRequest) GetRowGroup() bool {
	if x != nil {
		return x.RowGroup
	}
	return false
}

// Response message for DistributedTransactionAdmin.AddGroupToUser.
type AddGroupToUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupToUserResponse) Reset() {
	*x = AddGroupToUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupToUserResponse) ProtoMessage() {}

func (x *AddGroupToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupToUserResponse.ProtoReflect.Descriptor instead.
func (*AddGroupToUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{149}
}

// Request message for DistributedTransactionAdmin.RemoveGroupFromUser.
type RemoveGroupFromUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// The short name of the group.
	GroupShortName string `protobuf:"bytes,4,opt,name=group_short_name,json=groupShortName,proto3" json:"group_short_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RemoveGroupFromUserRequest) Reset() {
	*x = RemoveGroupFromUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveGroupFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupFromUserRequest) ProtoMessage() {}

func (x *RemoveGroupFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupFromUserRequest.ProtoReflect.Descriptor instead.
func (*RemoveGroupFromUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{150}
}

func (x *RemoveGroupFromUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *RemoveGroupFromUserRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *RemoveGroupFromUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RemoveGroupFromUserRequest) GetGroupShortName() string {
	if x != nil {
		return x.GroupShortName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.RemoveGroupFromUser.
type RemoveGroupFromUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveGroupFromUserResponse) Reset() {
	*x = RemoveGroupFromUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveGroupFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupFromUserResponse) ProtoMessage() {}

func (x *RemoveGroupFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupFromUserResponse.ProtoReflect.Descriptor instead.
func (*RemoveGroupFromUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{151}
}

// Request message for DistributedTransactionAdmin.DropUserTagInfoFromUser.
type DropUserTagInfoFromUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username      string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropUserTagInfoFromUserRequest) Reset() {
	*x = DropUserTagInfoFromUserRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropUserTagInfoFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUserTagInfoFromUserRequest) ProtoMessage() {}

func (x *DropUserTagInfoFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUserTagInfoFromUserRequest.ProtoReflect.Descriptor instead.
func (*DropUserTagInfoFromUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{152}
}

func (x *DropUserTagInfoFromUserRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DropUserTagInfoFromUserRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *DropUserTagInfoFromUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DropUserTagInfoFromUser.
type DropUserTagInfoFromUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropUserTagInfoFromUserResponse) Reset() {
	*x = DropUserTagInfoFromUserResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropUserTagInfoFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropUserTagInfoFromUserResponse) ProtoMessage() {}

func (x *DropUserTagInfoFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropUserTagInfoFromUserResponse.ProtoReflect.Descriptor instead.
func (*DropUserTagInfoFromUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{153}
}

// Response message for DistributedTransactionAdmin.GetUserTagInfo.
type GetUserTagInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The username.
	Username      string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTagInfoRequest) Reset() {
	*x = GetUserTagInfoRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTagInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTagInfoRequest) ProtoMessage() {}

func (x *GetUserTagInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTagInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserTagInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{154}
}

func (x *GetUserTagInfoRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetUserTagInfoRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *GetUserTagInfoRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetUserTagInfo.
type GetUserTagInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user tag information.
	UserTagInfo   *UserTagInfo `protobuf:"bytes,1,opt,name=user_tag_info,json=userTagInfo,proto3,oneof" json:"user_tag_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTagInfoResponse) Reset() {
	*x = GetUserTagInfoResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTagInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTagInfoResponse) ProtoMessage() {}

func (x *GetUserTagInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTagInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserTagInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{155}
}

func (x *GetUserTagInfoResponse) GetUserTagInfo() *UserTagInfo {
	if x != nil {
		return x.UserTagInfo
	}
	return nil
}

// Request message for DistributedTransactionAdmin.CreateNamespacePolicy.
type CreateNamespacePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The namespace policy name.
	NamespacePolicyName string `protobuf:"bytes,2,opt,name=namespace_policy_name,json=namespacePolicyName,proto3" json:"namespace_policy_name,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,3,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The namespace name.
	NamespaceName string `protobuf:"bytes,4,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespacePolicyRequest) Reset() {
	*x = CreateNamespacePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespacePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespacePolicyRequest) ProtoMessage() {}

func (x *CreateNamespacePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespacePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespacePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{156}
}

func (x *CreateNamespacePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateNamespacePolicyRequest) GetNamespacePolicyName() string {
	if x != nil {
		return x.NamespacePolicyName
	}
	return ""
}

func (x *CreateNamespacePolicyRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CreateNamespacePolicyRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.CreateNamespacePolicy.
type CreateNamespacePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespacePolicyResponse) Reset() {
	*x = CreateNamespacePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespacePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespacePolicyResponse) ProtoMessage() {}

func (x *CreateNamespacePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespacePolicyResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespacePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{157}
}

// Request message for DistributedTransactionAdmin.EnableNamespacePolicy.
type EnableNamespacePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The namespace policy name.
	NamespacePolicyName string `protobuf:"bytes,2,opt,name=namespace_policy_name,json=namespacePolicyName,proto3" json:"namespace_policy_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EnableNamespacePolicyRequest) Reset() {
	*x = EnableNamespacePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableNamespacePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableNamespacePolicyRequest) ProtoMessage() {}

func (x *EnableNamespacePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableNamespacePolicyRequest.ProtoReflect.Descriptor instead.
func (*EnableNamespacePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{158}
}

func (x *EnableNamespacePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *EnableNamespacePolicyRequest) GetNamespacePolicyName() string {
	if x != nil {
		return x.NamespacePolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.EnableNamespacePolicy.
type EnableNamespacePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableNamespacePolicyResponse) Reset() {
	*x = EnableNamespacePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableNamespacePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableNamespacePolicyResponse) ProtoMessage() {}

func (x *EnableNamespacePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableNamespacePolicyResponse.ProtoReflect.Descriptor instead.
func (*EnableNamespacePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{159}
}

// Request message for DistributedTransactionAdmin.DisableNamespacePolicy.
type DisableNamespacePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The namespace policy name.
	NamespacePolicyName string `protobuf:"bytes,2,opt,name=namespace_policy_name,json=namespacePolicyName,proto3" json:"namespace_policy_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DisableNamespacePolicyRequest) Reset() {
	*x = DisableNamespacePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableNamespacePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableNamespacePolicyRequest) ProtoMessage() {}

func (x *DisableNamespacePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableNamespacePolicyRequest.ProtoReflect.Descriptor instead.
func (*DisableNamespacePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{160}
}

func (x *DisableNamespacePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DisableNamespacePolicyRequest) GetNamespacePolicyName() string {
	if x != nil {
		return x.NamespacePolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DisableNamespacePolicy.
type DisableNamespacePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableNamespacePolicyResponse) Reset() {
	*x = DisableNamespacePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableNamespacePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableNamespacePolicyResponse) ProtoMessage() {}

func (x *DisableNamespacePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableNamespacePolicyResponse.ProtoReflect.Descriptor instead.
func (*DisableNamespacePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{161}
}

// Request message for DistributedTransactionAdmin.GetNamespacePolicy.
type GetNamespacePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The namespace policy name.
	NamespacePolicyName string `protobuf:"bytes,2,opt,name=namespace_policy_name,json=namespacePolicyName,proto3" json:"namespace_policy_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetNamespacePolicyRequest) Reset() {
	*x = GetNamespacePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespacePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespacePolicyRequest) ProtoMessage() {}

func (x *GetNamespacePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespacePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetNamespacePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{162}
}

func (x *GetNamespacePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetNamespacePolicyRequest) GetNamespacePolicyName() string {
	if x != nil {
		return x.NamespacePolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetNamespacePolicy.
type GetNamespacePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace policy.
	NamespacePolicy *NamespacePolicy `protobuf:"bytes,1,opt,name=namespace_policy,json=namespacePolicy,proto3,oneof" json:"namespace_policy,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetNamespacePolicyResponse) Reset() {
	*x = GetNamespacePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespacePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespacePolicyResponse) ProtoMessage() {}

func (x *GetNamespacePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespacePolicyResponse.ProtoReflect.Descriptor instead.
func (*GetNamespacePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{163}
}

func (x *GetNamespacePolicyResponse) GetNamespacePolicy() *NamespacePolicy {
	if x != nil {
		return x.NamespacePolicy
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetNamespacePolicies.
type GetNamespacePoliciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespacePoliciesRequest) Reset() {
	*x = GetNamespacePoliciesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespacePoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespacePoliciesRequest) ProtoMessage() {}

func (x *GetNamespacePoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespacePoliciesRequest.ProtoReflect.Descriptor instead.
func (*GetNamespacePoliciesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{164}
}

func (x *GetNamespacePoliciesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.GetNamespacePolicies.
type GetNamespacePoliciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace policies.
	NamespacePolicies []*NamespacePolicy `protobuf:"bytes,1,rep,name=namespace_policies,json=namespacePolicies,proto3" json:"namespace_policies,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNamespacePoliciesResponse) Reset() {
	*x = GetNamespacePoliciesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespacePoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespacePoliciesResponse) ProtoMessage() {}

func (x *GetNamespacePoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespacePoliciesResponse.ProtoReflect.Descriptor instead.
func (*GetNamespacePoliciesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{165}
}

func (x *GetNamespacePoliciesResponse) GetNamespacePolicies() []*NamespacePolicy {
	if x != nil {
		return x.NamespacePolicies
	}
	return nil
}

// Request message for DistributedTransactionAdmin.CreateTablePolicy.
type CreateTablePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The table policy name.
	TablePolicyName string `protobuf:"bytes,2,opt,name=table_policy_name,json=tablePolicyName,proto3" json:"table_policy_name,omitempty"`
	// The policy name.
	PolicyName string `protobuf:"bytes,3,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The namespace name.
	NamespaceName string `protobuf:"bytes,4,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table name.
	TableName     string `protobuf:"bytes,5,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTablePolicyRequest) Reset() {
	*x = CreateTablePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTablePolicyRequest) ProtoMessage() {}

func (x *CreateTablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTablePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateTablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{166}
}

func (x *CreateTablePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *CreateTablePolicyRequest) GetTablePolicyName() string {
	if x != nil {
		return x.TablePolicyName
	}
	return ""
}

func (x *CreateTablePolicyRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *CreateTablePolicyRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateTablePolicyRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.CreateTablePolicy.
type CreateTablePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTablePolicyResponse) Reset() {
	*x = CreateTablePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTablePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTablePolicyResponse) ProtoMessage() {}

func (x *CreateTablePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTablePolicyResponse.ProtoReflect.Descriptor instead.
func (*CreateTablePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{167}
}

// Request message for DistributedTransactionAdmin.EnableTablePolicy.
type EnableTablePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The table policy name.
	TablePolicyName string `protobuf:"bytes,2,opt,name=table_policy_name,json=tablePolicyName,proto3" json:"table_policy_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnableTablePolicyRequest) Reset() {
	*x = EnableTablePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableTablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTablePolicyRequest) ProtoMessage() {}

func (x *EnableTablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTablePolicyRequest.ProtoReflect.Descriptor instead.
func (*EnableTablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{168}
}

func (x *EnableTablePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *EnableTablePolicyRequest) GetTablePolicyName() string {
	if x != nil {
		return x.TablePolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.EnableTablePolicy.
type EnableTablePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableTablePolicyResponse) Reset() {
	*x = EnableTablePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableTablePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTablePolicyResponse) ProtoMessage() {}

func (x *EnableTablePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTablePolicyResponse.ProtoReflect.Descriptor instead.
func (*EnableTablePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{169}
}

// Request message for DistributedTransactionAdmin.DisableTablePolicy.
type DisableTablePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The table policy name.
	TablePolicyName string `protobuf:"bytes,2,opt,name=table_policy_name,json=tablePolicyName,proto3" json:"table_policy_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DisableTablePolicyRequest) Reset() {
	*x = DisableTablePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableTablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableTablePolicyRequest) ProtoMessage() {}

func (x *DisableTablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableTablePolicyRequest.ProtoReflect.Descriptor instead.
func (*DisableTablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{170}
}

func (x *DisableTablePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *DisableTablePolicyRequest) GetTablePolicyName() string {
	if x != nil {
		return x.TablePolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.DisableTablePolicy.
type DisableTablePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableTablePolicyResponse) Reset() {
	*x = DisableTablePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableTablePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableTablePolicyResponse) ProtoMessage() {}

func (x *DisableTablePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableTablePolicyResponse.ProtoReflect.Descriptor instead.
func (*DisableTablePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{171}
}

// Request message for DistributedTransactionAdmin.GetTablePolicy.
type GetTablePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// The table policy name.
	TablePolicyName string `protobuf:"bytes,2,opt,name=table_policy_name,json=tablePolicyName,proto3" json:"table_policy_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetTablePolicyRequest) Reset() {
	*x = GetTablePolicyRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTablePolicyRequest) ProtoMessage() {}

func (x *GetTablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTablePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetTablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{172}
}

func (x *GetTablePolicyRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *GetTablePolicyRequest) GetTablePolicyName() string {
	if x != nil {
		return x.TablePolicyName
	}
	return ""
}

// Response message for DistributedTransactionAdmin.GetTablePolicy.
type GetTablePolicyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The table policy.
	TablePolicy   *TablePolicy `protobuf:"bytes,1,opt,name=table_policy,json=tablePolicy,proto3,oneof" json:"table_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTablePolicyResponse) Reset() {
	*x = GetTablePolicyResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[173]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTablePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTablePolicyResponse) ProtoMessage() {}

func (x *GetTablePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[173]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTablePolicyResponse.ProtoReflect.Descriptor instead.
func (*GetTablePolicyResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{173}
}

func (x *GetTablePolicyResponse) GetTablePolicy() *TablePolicy {
	if x != nil {
		return x.TablePolicy
	}
	return nil
}

// Request message for DistributedTransactionAdmin.GetTablePolicies.
type GetTablePoliciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request header.
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTablePoliciesRequest) Reset() {
	*x = GetTablePoliciesRequest{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[174]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTablePoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTablePoliciesRequest) ProtoMessage() {}

func (x *GetTablePoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[174]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTablePoliciesRequest.ProtoReflect.Descriptor instead.
func (*GetTablePoliciesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{174}
}

func (x *GetTablePoliciesRequest) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

// Response message for DistributedTransactionAdmin.GetTablePolicies.
type GetTablePoliciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The table policies.
	TablePolicies []*TablePolicy `protobuf:"bytes,1,rep,name=table_policies,json=tablePolicies,proto3" json:"table_policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTablePoliciesResponse) Reset() {
	*x = GetTablePoliciesResponse{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[175]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTablePoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTablePoliciesResponse) ProtoMessage() {}

func (x *GetTablePoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[175]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTablePoliciesResponse.ProtoReflect.Descriptor instead.
func (*GetTablePoliciesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{175}
}

func (x *GetTablePoliciesResponse) GetTablePolicies() []*TablePolicy {
	if x != nil {
		return x.TablePolicies
	}
	return nil
}

// A policy for ABAC.
type Policy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the policy.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The data tag column name for the policy.
	DataTagColumnName string `protobuf:"bytes,2,opt,name=data_tag_column_name,json=dataTagColumnName,proto3" json:"data_tag_column_name,omitempty"`
	// The state of the policy.
	State         PolicyState `protobuf:"varint,3,opt,name=state,proto3,enum=scalardb.cluster.rpc.v1.PolicyState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[176]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[176]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{176}
}

func (x *Policy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Policy) GetDataTagColumnName() string {
	if x != nil {
		return x.DataTagColumnName
	}
	return ""
}

func (x *Policy) GetState() PolicyState {
	if x != nil {
		return x.State
	}
	return PolicyState_POLICY_STATE_UNSPECIFIED
}

// A level that is one of the components of a tag in ABAC.
type Level struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the policy.
	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the level.
	ShortName string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	// The long name of the level.
	LongName string `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	// The level number of the level.
	LevelNumber   int32 `protobuf:"varint,4,opt,name=level_number,json=levelNumber,proto3" json:"level_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Level) Reset() {
	*x = Level{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[177]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level) ProtoMessage() {}

func (x *Level) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[177]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level.ProtoReflect.Descriptor instead.
func (*Level) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{177}
}

func (x *Level) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Level) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Level) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Level) GetLevelNumber() int32 {
	if x != nil {
		return x.LevelNumber
	}
	return 0
}

// A compartment that is one of the components of a tag in ABAC.
type Compartment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the policy.
	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the compartment.
	ShortName string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	// The long name of the compartment.
	LongName      string `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Compartment) Reset() {
	*x = Compartment{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[178]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Compartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Compartment) ProtoMessage() {}

func (x *Compartment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[178]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Compartment.ProtoReflect.Descriptor instead.
func (*Compartment) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{178}
}

func (x *Compartment) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Compartment) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Compartment) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

// A group that is one of the components of a tag in ABAC.
type Group struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the policy.
	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The short name of the group.
	ShortName string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	// The long name of the group.
	LongName string `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	// The parent group short name of the group.
	ParentGroupShortName *string `protobuf:"bytes,4,opt,name=parent_group_short_name,json=parentGroupShortName,proto3,oneof" json:"parent_group_short_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[179]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[179]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{179}
}

func (x *Group) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *Group) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Group) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Group) GetParentGroupShortName() string {
	if x != nil && x.ParentGroupShortName != nil {
		return *x.ParentGroupShortName
	}
	return ""
}

// User tag information.
type UserTagInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the policy.
	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The name of the user.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// The level information.
	LevelInfo *UserTagInfo_LevelInfo `protobuf:"bytes,3,opt,name=level_info,json=levelInfo,proto3" json:"level_info,omitempty"`
	// The compartment information.
	CompartmentInfo *UserTagInfo_CompartmentInfo `protobuf:"bytes,4,opt,name=compartment_info,json=compartmentInfo,proto3" json:"compartment_info,omitempty"`
	// The group information.
	GroupInfo     *UserTagInfo_GroupInfo `protobuf:"bytes,5,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserTagInfo) Reset() {
	*x = UserTagInfo{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[180]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTagInfo) ProtoMessage() {}

func (x *UserTagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[180]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTagInfo.ProtoReflect.Descriptor instead.
func (*UserTagInfo) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{180}
}

func (x *UserTagInfo) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *UserTagInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserTagInfo) GetLevelInfo() *UserTagInfo_LevelInfo {
	if x != nil {
		return x.LevelInfo
	}
	return nil
}

func (x *UserTagInfo) GetCompartmentInfo() *UserTagInfo_CompartmentInfo {
	if x != nil {
		return x.CompartmentInfo
	}
	return nil
}

func (x *UserTagInfo) GetGroupInfo() *UserTagInfo_GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

// A namespace policy.
type NamespacePolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the namespace policy.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the policy.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The name of the namespace.
	NamespaceName string `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The state of the policy.
	State         PolicyState `protobuf:"varint,4,opt,name=state,proto3,enum=scalardb.cluster.rpc.v1.PolicyState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespacePolicy) Reset() {
	*x = NamespacePolicy{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[181]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespacePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacePolicy) ProtoMessage() {}

func (x *NamespacePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[181]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacePolicy.ProtoReflect.Descriptor instead.
func (*NamespacePolicy) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{181}
}

func (x *NamespacePolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespacePolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *NamespacePolicy) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *NamespacePolicy) GetState() PolicyState {
	if x != nil {
		return x.State
	}
	return PolicyState_POLICY_STATE_UNSPECIFIED
}

// A table policy.
type TablePolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the table policy.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the policy.
	PolicyName string `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// The name of the namespace.
	NamespaceName string `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table.
	TableName string `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The state of the policy.
	State         PolicyState `protobuf:"varint,5,opt,name=state,proto3,enum=scalardb.cluster.rpc.v1.PolicyState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TablePolicy) Reset() {
	*x = TablePolicy{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[182]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TablePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablePolicy) ProtoMessage() {}

func (x *TablePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[182]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablePolicy.ProtoReflect.Descriptor instead.
func (*TablePolicy) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{182}
}

func (x *TablePolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TablePolicy) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *TablePolicy) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *TablePolicy) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TablePolicy) GetState() PolicyState {
	if x != nil {
		return x.State
	}
	return PolicyState_POLICY_STATE_UNSPECIFIED
}

// A Boolean value. If the value is not set, indicates null.
type Column_BooleanValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *bool                  `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_BooleanValue) Reset() {
	*x = Column_BooleanValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[183]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_BooleanValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_BooleanValue) ProtoMessage() {}

func (x *Column_BooleanValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[183]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_BooleanValue.ProtoReflect.Descriptor instead.
func (*Column_BooleanValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Column_BooleanValue) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

// An Int value. If the value is not set, indicates null.
type Column_IntValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *int32                 `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_IntValue) Reset() {
	*x = Column_IntValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[184]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_IntValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_IntValue) ProtoMessage() {}

func (x *Column_IntValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[184]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_IntValue.ProtoReflect.Descriptor instead.
func (*Column_IntValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Column_IntValue) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A BigInt value. If the value is not set, indicates null.
type Column_BigIntValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *int64                 `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_BigIntValue) Reset() {
	*x = Column_BigIntValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[185]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_BigIntValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_BigIntValue) ProtoMessage() {}

func (x *Column_BigIntValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[185]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_BigIntValue.ProtoReflect.Descriptor instead.
func (*Column_BigIntValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Column_BigIntValue) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A Float value. If the value is not set, indicates null.
type Column_FloatValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float32               `protobuf:"fixed32,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_FloatValue) Reset() {
	*x = Column_FloatValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[186]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_FloatValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_FloatValue) ProtoMessage() {}

func (x *Column_FloatValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[186]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_FloatValue.ProtoReflect.Descriptor instead.
func (*Column_FloatValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Column_FloatValue) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A Double value. If the value is not set, indicates null.
type Column_DoubleValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float64               `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_DoubleValue) Reset() {
	*x = Column_DoubleValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[187]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_DoubleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_DoubleValue) ProtoMessage() {}

func (x *Column_DoubleValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[187]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_DoubleValue.ProtoReflect.Descriptor instead.
func (*Column_DoubleValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Column_DoubleValue) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A Text value. If the value is not set, indicates null.
type Column_TextValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *string                `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_TextValue) Reset() {
	*x = Column_TextValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[188]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_TextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_TextValue) ProtoMessage() {}

func (x *Column_TextValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[188]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_TextValue.ProtoReflect.Descriptor instead.
func (*Column_TextValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Column_TextValue) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// A Blob value. If the value is not set, indicates null.
type Column_BlobValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_BlobValue) Reset() {
	*x = Column_BlobValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[189]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_BlobValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_BlobValue) ProtoMessage() {}

func (x *Column_BlobValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[189]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_BlobValue.ProtoReflect.Descriptor instead.
func (*Column_BlobValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Column_BlobValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// A Date value. If the value is not set, indicates null.
type Column_DateValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The epochDay value of the Date. It is an incrementing count of days
	// where day 0 is 1970-01-01. Negative numbers represent earlier days.
	Value         *int32 `protobuf:"zigzag32,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_DateValue) Reset() {
	*x = Column_DateValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[190]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_DateValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_DateValue) ProtoMessage() {}

func (x *Column_DateValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[190]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_DateValue.ProtoReflect.Descriptor instead.
func (*Column_DateValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Column_DateValue) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A Time value. If the value is not set, indicates null.
type Column_TimeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The nanoOfDay value of the Time. It is the number of nanoseconds from the
	// start of the day.
	Value         *int64 `protobuf:"varint,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_TimeValue) Reset() {
	*x = Column_TimeValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[191]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_TimeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_TimeValue) ProtoMessage() {}

func (x *Column_TimeValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[191]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_TimeValue.ProtoReflect.Descriptor instead.
func (*Column_TimeValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Column_TimeValue) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A Timestamp value. If the value is not set, indicates null.
type Column_TimestampValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Even though the Timestamp value represents a date-time without a time zone,
	// for encoding purpose we consider as if it is a timestamp in the UTC
	// timezone. The value can then be encoded identically as a TimestampTZValue.
	Value         *int64 `protobuf:"zigzag64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_TimestampValue) Reset() {
	*x = Column_TimestampValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[192]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_TimestampValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_TimestampValue) ProtoMessage() {}

func (x *Column_TimestampValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[192]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_TimestampValue.ProtoReflect.Descriptor instead.
func (*Column_TimestampValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Column_TimestampValue) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A TimestampTZ value. If the value is not set, indicates null.
type Column_TimestampTZValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The value format is "<epochSecond><millisecondOfSecond>", where the
	// rightmost 3 digits are the millisecondOfSecond with a value from 000 to
	// 999, the other digits on the left are the epochSecond:
	// - epochSecond is the number of seconds from 1970-01-01T00:00:00Z
	// - millisecondOfSecond is the number of milliseconds from the start of the
	// second
	//
	// To preserve the timestamptz ordering if the epochSecond is negative (in case
	// a timestamptz value is before 1970), the millisecondOfSecond is converted
	// to its complement with the formula "complementOfN = 1000 - 1 - N", where
	// N is the millisecondOfSecond.
	//
	// For example:
	// - if epochSecond=12345 and millisecondOfSecond=789, then the resulting
	// value will be "12345789"
	//   - if epochSecond=-12345 and millisecondOfSecond=789, then
	//     millisecondOfSecondComplement = 1000 - 1 - 789 = 210. So the resulting
	//     value will be "-12345210".
	Value         *int64 `protobuf:"zigzag64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column_TimestampTZValue) Reset() {
	*x = Column_TimestampTZValue{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[193]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column_TimestampTZValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column_TimestampTZValue) ProtoMessage() {}

func (x *Column_TimestampTZValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[193]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column_TimestampTZValue.ProtoReflect.Descriptor instead.
func (*Column_TimestampTZValue) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Column_TimestampTZValue) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// A ordering that's specified in Scan operation.
type Scan_Ordering struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The target column name.
	ColumnName string `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// The clustering order for the clustering key column.
	Order         Scan_Ordering_Order `protobuf:"varint,2,opt,name=order,proto3,enum=scalardb.cluster.rpc.v1.Scan_Ordering_Order" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scan_Ordering) Reset() {
	*x = Scan_Ordering{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[195]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scan_Ordering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scan_Ordering) ProtoMessage() {}

func (x *Scan_Ordering) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[195]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scan_Ordering.ProtoReflect.Descriptor instead.
func (*Scan_Ordering) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Scan_Ordering) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *Scan_Ordering) GetOrder() Scan_Ordering_Order {
	if x != nil {
		return x.Order
	}
	return Scan_Ordering_ORDER_UNSPECIFIED
}

// A condition for the put operation.
type Put_PutCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the condition for the put operation.
	PutConditionType Put_PutCondition_PutConditionType `protobuf:"varint,1,opt,name=put_condition_type,json=putConditionType,proto3,enum=scalardb.cluster.rpc.v1.Put_PutCondition_PutConditionType" json:"put_condition_type,omitempty"`
	// The conditional expressions of the condition for the put operation. This field needs to be
	// set if the condition type is `PUT_CONDITION_TYPE_IF`.
	ConditionalExpressions []*ConditionalExpression `protobuf:"bytes,2,rep,name=conditional_expressions,json=conditionalExpressions,proto3" json:"conditional_expressions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Put_PutCondition) Reset() {
	*x = Put_PutCondition{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[197]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Put_PutCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Put_PutCondition) ProtoMessage() {}

func (x *Put_PutCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[197]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Put_PutCondition.ProtoReflect.Descriptor instead.
func (*Put_PutCondition) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Put_PutCondition) GetPutConditionType() Put_PutCondition_PutConditionType {
	if x != nil {
		return x.PutConditionType
	}
	return Put_PutCondition_PUT_CONDITION_TYPE_UNSPECIFIED
}

func (x *Put_PutCondition) GetConditionalExpressions() []*ConditionalExpression {
	if x != nil {
		return x.ConditionalExpressions
	}
	return nil
}

// A condition for the Update operation.
type Update_UpdateCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the condition for the update operation.
	UpdateConditionType Update_UpdateCondition_UpdateConditionType `protobuf:"varint,1,opt,name=update_condition_type,json=updateConditionType,proto3,enum=scalardb.cluster.rpc.v1.Update_UpdateCondition_UpdateConditionType" json:"update_condition_type,omitempty"`
	// The conditional expressions of the condition for the update operation. This field needs to be
	// set if the condition type is `UPDATE_CONDITION_TYPE_IF`.
	ConditionalExpressions []*ConditionalExpression `protobuf:"bytes,2,rep,name=conditional_expressions,json=conditionalExpressions,proto3" json:"conditional_expressions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Update_UpdateCondition) Reset() {
	*x = Update_UpdateCondition{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[201]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Update_UpdateCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update_UpdateCondition) ProtoMessage() {}

func (x *Update_UpdateCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[201]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update_UpdateCondition.ProtoReflect.Descriptor instead.
func (*Update_UpdateCondition) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Update_UpdateCondition) GetUpdateConditionType() Update_UpdateCondition_UpdateConditionType {
	if x != nil {
		return x.UpdateConditionType
	}
	return Update_UpdateCondition_UPDATE_CONDITION_TYPE_UNSPECIFIED
}

func (x *Update_UpdateCondition) GetConditionalExpressions() []*ConditionalExpression {
	if x != nil {
		return x.ConditionalExpressions
	}
	return nil
}

// A condition for the delete operation.
type Delete_DeleteCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the condition for the delete operation.
	DeleteConditionType Delete_DeleteCondition_DeleteConditionType `protobuf:"varint,1,opt,name=delete_condition_type,json=deleteConditionType,proto3,enum=scalardb.cluster.rpc.v1.Delete_DeleteCondition_DeleteConditionType" json:"delete_condition_type,omitempty"`
	// The conditional expressions of the condition for the delete operation. This needs to be set
	// if the condition type is `DELETE_CONDITION_TYPE_IF`.
	ConditionalExpressions []*ConditionalExpression `protobuf:"bytes,2,rep,name=conditional_expressions,json=conditionalExpressions,proto3" json:"conditional_expressions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Delete_DeleteCondition) Reset() {
	*x = Delete_DeleteCondition{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[203]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Delete_DeleteCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete_DeleteCondition) ProtoMessage() {}

func (x *Delete_DeleteCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[203]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete_DeleteCondition.ProtoReflect.Descriptor instead.
func (*Delete_DeleteCondition) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Delete_DeleteCondition) GetDeleteConditionType() Delete_DeleteCondition_DeleteConditionType {
	if x != nil {
		return x.DeleteConditionType
	}
	return Delete_DeleteCondition_DELETE_CONDITION_TYPE_UNSPECIFIED
}

func (x *Delete_DeleteCondition) GetConditionalExpressions() []*ConditionalExpression {
	if x != nil {
		return x.ConditionalExpressions
	}
	return nil
}

// The level information.
type UserTagInfo_LevelInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The short name of the level.
	LevelShortName string `protobuf:"bytes,1,opt,name=level_short_name,json=levelShortName,proto3" json:"level_short_name,omitempty"`
	// The short name of the default level.
	DefaultLevelShortName string `protobuf:"bytes,2,opt,name=default_level_short_name,json=defaultLevelShortName,proto3" json:"default_level_short_name,omitempty"`
	// The short name of the row level.
	RowLevelShortName string `protobuf:"bytes,3,opt,name=row_level_short_name,json=rowLevelShortName,proto3" json:"row_level_short_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UserTagInfo_LevelInfo) Reset() {
	*x = UserTagInfo_LevelInfo{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[217]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTagInfo_LevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTagInfo_LevelInfo) ProtoMessage() {}

func (x *UserTagInfo_LevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[217]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTagInfo_LevelInfo.ProtoReflect.Descriptor instead.
func (*UserTagInfo_LevelInfo) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{180, 0}
}

func (x *UserTagInfo_LevelInfo) GetLevelShortName() string {
	if x != nil {
		return x.LevelShortName
	}
	return ""
}

func (x *UserTagInfo_LevelInfo) GetDefaultLevelShortName() string {
	if x != nil {
		return x.DefaultLevelShortName
	}
	return ""
}

func (x *UserTagInfo_LevelInfo) GetRowLevelShortName() string {
	if x != nil {
		return x.RowLevelShortName
	}
	return ""
}

// The compartment information.
type UserTagInfo_CompartmentInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The short names of the compartments that the user has read access to.
	ReadCompartmentShortNames []string `protobuf:"bytes,1,rep,name=read_compartment_short_names,json=readCompartmentShortNames,proto3" json:"read_compartment_short_names,omitempty"`
	// The short names of the compartments that the user has write access to.
	WriteCompartmentShortNames []string `protobuf:"bytes,2,rep,name=write_compartment_short_names,json=writeCompartmentShortNames,proto3" json:"write_compartment_short_names,omitempty"`
	// The short names of the default compartments that the user has read access to.
	DefaultReadCompartmentShortNames []string `protobuf:"bytes,3,rep,name=default_read_compartment_short_names,json=defaultReadCompartmentShortNames,proto3" json:"default_read_compartment_short_names,omitempty"`
	// The short names of the default compartments that the user has write access to.
	DefaultWriteCompartmentShortNames []string `protobuf:"bytes,4,rep,name=default_write_compartment_short_names,json=defaultWriteCompartmentShortNames,proto3" json:"default_write_compartment_short_names,omitempty"`
	// The short names of the row compartments.
	RowCompartmentShortNames []string `protobuf:"bytes,5,rep,name=row_compartment_short_names,json=rowCompartmentShortNames,proto3" json:"row_compartment_short_names,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UserTagInfo_CompartmentInfo) Reset() {
	*x = UserTagInfo_CompartmentInfo{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[218]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTagInfo_CompartmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTagInfo_CompartmentInfo) ProtoMessage() {}

func (x *UserTagInfo_CompartmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[218]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTagInfo_CompartmentInfo.ProtoReflect.Descriptor instead.
func (*UserTagInfo_CompartmentInfo) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{180, 1}
}

func (x *UserTagInfo_CompartmentInfo) GetReadCompartmentShortNames() []string {
	if x != nil {
		return x.ReadCompartmentShortNames
	}
	return nil
}

func (x *UserTagInfo_CompartmentInfo) GetWriteCompartmentShortNames() []string {
	if x != nil {
		return x.WriteCompartmentShortNames
	}
	return nil
}

func (x *UserTagInfo_CompartmentInfo) GetDefaultReadCompartmentShortNames() []string {
	if x != nil {
		return x.DefaultReadCompartmentShortNames
	}
	return nil
}

func (x *UserTagInfo_CompartmentInfo) GetDefaultWriteCompartmentShortNames() []string {
	if x != nil {
		return x.DefaultWriteCompartmentShortNames
	}
	return nil
}

func (x *UserTagInfo_CompartmentInfo) GetRowCompartmentShortNames() []string {
	if x != nil {
		return x.RowCompartmentShortNames
	}
	return nil
}

// The group information.
type UserTagInfo_GroupInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The short names of the groups that the user has read access to.
	ReadGroupShortNames []string `protobuf:"bytes,1,rep,name=read_group_short_names,json=readGroupShortNames,proto3" json:"read_group_short_names,omitempty"`
	// The short names of the groups that the user has write access to.
	WriteGroupShortNames []string `protobuf:"bytes,2,rep,name=write_group_short_names,json=writeGroupShortNames,proto3" json:"write_group_short_names,omitempty"`
	// The short names of the default groups that the user has read access to.
	DefaultReadGroupShortNames []string `protobuf:"bytes,3,rep,name=default_read_group_short_names,json=defaultReadGroupShortNames,proto3" json:"default_read_group_short_names,omitempty"`
	// The short names of the default groups that the user has write access to.
	DefaultWriteGroupShortNames []string `protobuf:"bytes,4,rep,name=default_write_group_short_names,json=defaultWriteGroupShortNames,proto3" json:"default_write_group_short_names,omitempty"`
	// The short names of the row groups.
	RowGroupShortNames []string `protobuf:"bytes,5,rep,name=row_group_short_names,json=rowGroupShortNames,proto3" json:"row_group_short_names,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UserTagInfo_GroupInfo) Reset() {
	*x = UserTagInfo_GroupInfo{}
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[219]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTagInfo_GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTagInfo_GroupInfo) ProtoMessage() {}

func (x *UserTagInfo_GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scalardb_scalardb_cluster_proto_msgTypes[219]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTagInfo_GroupInfo.ProtoReflect.Descriptor instead.
func (*UserTagInfo_GroupInfo) Descriptor() ([]byte, []int) {
	return file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP(), []int{180, 2}
}

func (x *UserTagInfo_GroupInfo) GetReadGroupShortNames() []string {
	if x != nil {
		return x.ReadGroupShortNames
	}
	return nil
}

func (x *UserTagInfo_GroupInfo) GetWriteGroupShortNames() []string {
	if x != nil {
		return x.WriteGroupShortNames
	}
	return nil
}

func (x *UserTagInfo_GroupInfo) GetDefaultReadGroupShortNames() []string {
	if x != nil {
		return x.DefaultReadGroupShortNames
	}
	return nil
}

func (x *UserTagInfo_GroupInfo) GetDefaultWriteGroupShortNames() []string {
	if x != nil {
		return x.DefaultWriteGroupShortNames
	}
	return nil
}

func (x *UserTagInfo_GroupInfo) GetRowGroupShortNames() []string {
	if x != nil {
		return x.RowGroupShortNames
	}
	return nil
}

var File_proto_scalardb_scalardb_cluster_proto protoreflect.FileDescriptor

const file_proto_scalardb_scalardb_cluster_proto_rawDesc = "" +
	"\n" +
	"%proto/scalardb/scalardb-cluster.proto\x12\x17scalardb.cluster.rpc.v1\"\xdb\v\n" +
	"\x06Column\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12S\n" +
	"\rboolean_value\x18\x02 \x01(\v2,.scalardb.cluster.rpc.v1.Column.BooleanValueH\x00R\fbooleanValue\x12G\n" +
	"\tint_value\x18\x03 \x01(\v2(.scalardb.cluster.rpc.v1.Column.IntValueH\x00R\bintValue\x12P\n" +
	"\fbigint_value\x18\x04 \x01(\v2+.scalardb.cluster.rpc.v1.Column.BigIntValueH\x00R\vbigintValue\x12M\n" +
	"\vfloat_value\x18\x05 \x01(\v2*.scalardb.cluster.rpc.v1.Column.FloatValueH\x00R\n" +
	"floatValue\x12P\n" +
	"\fdouble_value\x18\x06 \x01(\v2+.scalardb.cluster.rpc.v1.Column.DoubleValueH\x00R\vdoubleValue\x12J\n" +
	"\n" +
	"text_value\x18\a \x01(\v2).scalardb.cluster.rpc.v1.Column.TextValueH\x00R\ttextValue\x12J\n" +
	"\n" +
	"blob_value\x18\b \x01(\v2).scalardb.cluster.rpc.v1.Column.BlobValueH\x00R\tblobValue\x12J\n" +
	"\n" +
	"date_value\x18\t \x01(\v2).scalardb.cluster.rpc.v1.Column.DateValueH\x00R\tdateValue\x12J\n" +
	"\n" +
	"time_value\x18\n" +
	" \x01(\v2).scalardb.cluster.rpc.v1.Column.TimeValueH\x00R\ttimeValue\x12Y\n" +
	"\x0ftimestamp_value\x18\v \x01(\v2..scalardb.cluster.rpc.v1.Column.TimestampValueH\x00R\x0etimestampValue\x12_\n" +
	"\x11timestamptz_value\x18\f \x01(\v20.scalardb.cluster.rpc.v1.Column.TimestampTZValueH\x00R\x10timestamptzValue\x1a3\n" +
	"\fBooleanValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\bH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a/\n" +
	"\bIntValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x05H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a2\n" +
	"\vBigIntValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x03H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a1\n" +
	"\n" +
	"FloatValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x02H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a2\n" +
	"\vDoubleValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x01H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a0\n" +
	"\tTextValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\tH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a0\n" +
	"\tBlobValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\fH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a0\n" +
	"\tDateValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x11H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a0\n" +
	"\tTimeValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x03H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a5\n" +
	"\x0eTimestampValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x12H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\x1a7\n" +
	"\x10TimestampTZValue\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x12H\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_valueB\a\n" +
	"\x05value\"@\n" +
	"\x03Key\x129\n" +
	"\acolumns\x18\x01 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\acolumns\"v\n" +
	"\vConjunction\x12g\n" +
	"\x17conditional_expressions\x18\x01 \x03(\v2..scalardb.cluster.rpc.v1.ConditionalExpressionR\x16conditionalExpressions\"\xf9\x04\n" +
	"\x03Get\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12?\n" +
	"\bget_type\x18\x03 \x01(\x0e2$.scalardb.cluster.rpc.v1.Get.GetTypeR\agetType\x12A\n" +
	"\rpartition_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyR\fpartitionKey\x12H\n" +
	"\x0eclustering_key\x18\x05 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\rclusteringKey\x88\x01\x01\x12 \n" +
	"\vprojections\x18\x06 \x03(\tR\vprojections\x12H\n" +
	"\fconjunctions\x18\a \x03(\v2$.scalardb.cluster.rpc.v1.ConjunctionR\fconjunctions\x12L\n" +
	"\n" +
	"attributes\x18\b \x03(\v2,.scalardb.cluster.rpc.v1.Get.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\aGetType\x12\x18\n" +
	"\x14GET_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fGET_TYPE_GET\x10\x01\x12\x1b\n" +
	"\x17GET_TYPE_GET_WITH_INDEX\x10\x02B\x11\n" +
	"\x0f_clustering_key\"\x88\t\n" +
	"\x04Scan\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12C\n" +
	"\tscan_type\x18\x03 \x01(\x0e2&.scalardb.cluster.rpc.v1.Scan.ScanTypeR\bscanType\x12F\n" +
	"\rpartition_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\fpartitionKey\x88\x01\x01\x12 \n" +
	"\vprojections\x18\x05 \x03(\tR\vprojections\x12S\n" +
	"\x14start_clustering_key\x18\x06 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x01R\x12startClusteringKey\x88\x01\x01\x12'\n" +
	"\x0fstart_inclusive\x18\a \x01(\bR\x0estartInclusive\x12O\n" +
	"\x12end_clustering_key\x18\b \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x02R\x10endClusteringKey\x88\x01\x01\x12#\n" +
	"\rend_inclusive\x18\t \x01(\bR\fendInclusive\x12D\n" +
	"\torderings\x18\n" +
	" \x03(\v2&.scalardb.cluster.rpc.v1.Scan.OrderingR\torderings\x12\x14\n" +
	"\x05limit\x18\v \x01(\x05R\x05limit\x12H\n" +
	"\fconjunctions\x18\f \x03(\v2$.scalardb.cluster.rpc.v1.ConjunctionR\fconjunctions\x12M\n" +
	"\n" +
	"attributes\x18\r \x03(\v2-.scalardb.cluster.rpc.v1.Scan.AttributesEntryR\n" +
	"attributes\x1a\xae\x01\n" +
	"\bOrdering\x12\x1f\n" +
	"\vcolumn_name\x18\x01 \x01(\tR\n" +
	"columnName\x12B\n" +
	"\x05order\x18\x02 \x01(\x0e2,.scalardb.cluster.rpc.v1.Scan.Ordering.OrderR\x05order\"=\n" +
	"\x05Order\x12\x15\n" +
	"\x11ORDER_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tORDER_ASC\x10\x01\x12\x0e\n" +
	"\n" +
	"ORDER_DESC\x10\x02\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"p\n" +
	"\bScanType\x12\x19\n" +
	"\x15SCAN_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSCAN_TYPE_SCAN\x10\x01\x12\x1d\n" +
	"\x19SCAN_TYPE_SCAN_WITH_INDEX\x10\x02\x12\x16\n" +
	"\x12SCAN_TYPE_SCAN_ALL\x10\x03B\x10\n" +
	"\x0e_partition_keyB\x17\n" +
	"\x15_start_clustering_keyB\x15\n" +
	"\x13_end_clustering_key\"\xb6\x03\n" +
	"\x15ConditionalExpression\x127\n" +
	"\x06column\x18\x01 \x01(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\x06column\x12S\n" +
	"\boperator\x18\x02 \x01(\x0e27.scalardb.cluster.rpc.v1.ConditionalExpression.OperatorR\boperator\x12\x1b\n" +
	"\x06escape\x18\x03 \x01(\tH\x00R\x06escape\x88\x01\x01\"\xe6\x01\n" +
	"\bOperator\x12\x18\n" +
	"\x14OPERATOR_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vOPERATOR_EQ\x10\x01\x12\x0f\n" +
	"\vOPERATOR_NE\x10\x02\x12\x0f\n" +
	"\vOPERATOR_GT\x10\x03\x12\x10\n" +
	"\fOPERATOR_GTE\x10\x04\x12\x0f\n" +
	"\vOPERATOR_LT\x10\x05\x12\x10\n" +
	"\fOPERATOR_LTE\x10\x06\x12\x14\n" +
	"\x10OPERATOR_IS_NULL\x10\a\x12\x18\n" +
	"\x14OPERATOR_IS_NOT_NULL\x10\b\x12\x11\n" +
	"\rOPERATOR_LIKE\x10\t\x12\x15\n" +
	"\x11OPERATOR_NOT_LIKE\x10\n" +
	"B\t\n" +
	"\a_escape\"\x9e\a\n" +
	"\x03Put\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12A\n" +
	"\rpartition_key\x18\x03 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyR\fpartitionKey\x12H\n" +
	"\x0eclustering_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\rclusteringKey\x88\x01\x01\x129\n" +
	"\acolumns\x18\x05 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\acolumns\x12S\n" +
	"\rput_condition\x18\x06 \x01(\v2).scalardb.cluster.rpc.v1.Put.PutConditionH\x01R\fputCondition\x88\x01\x01\x12L\n" +
	"\n" +
	"attributes\x18\a \x03(\v2,.scalardb.cluster.rpc.v1.Put.AttributesEntryR\n" +
	"attributes\x1a\xfd\x02\n" +
	"\fPutCondition\x12h\n" +
	"\x12put_condition_type\x18\x01 \x01(\x0e2:.scalardb.cluster.rpc.v1.Put.PutCondition.PutConditionTypeR\x10putConditionType\x12g\n" +
	"\x17conditional_expressions\x18\x02 \x03(\v2..scalardb.cluster.rpc.v1.ConditionalExpressionR\x16conditionalExpressions\"\x99\x01\n" +
	"\x10PutConditionType\x12\"\n" +
	"\x1ePUT_CONDITION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PUT_CONDITION_TYPE_IF\x10\x01\x12 \n" +
	"\x1cPUT_CONDITION_TYPE_IF_EXISTS\x10\x02\x12$\n" +
	" PUT_CONDITION_TYPE_IF_NOT_EXISTS\x10\x03\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:\x02\x18\x01B\x11\n" +
	"\x0f_clustering_keyB\x10\n" +
	"\x0e_put_condition\"\xb9\x03\n" +
	"\x06Insert\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12A\n" +
	"\rpartition_key\x18\x03 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyR\fpartitionKey\x12H\n" +
	"\x0eclustering_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\rclusteringKey\x88\x01\x01\x129\n" +
	"\acolumns\x18\x05 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\acolumns\x12O\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2/.scalardb.cluster.rpc.v1.Insert.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x11\n" +
	"\x0f_clustering_key\"\xb9\x03\n" +
	"\x06Upsert\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12A\n" +
	"\rpartition_key\x18\x03 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyR\fpartitionKey\x12H\n" +
	"\x0eclustering_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\rclusteringKey\x88\x01\x01\x129\n" +
	"\acolumns\x18\x05 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\acolumns\x12O\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2/.scalardb.cluster.rpc.v1.Upsert.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x11\n" +
	"\x0f_clustering_key\"\xa6\a\n" +
	"\x06Update\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12A\n" +
	"\rpartition_key\x18\x03 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyR\fpartitionKey\x12H\n" +
	"\x0eclustering_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\rclusteringKey\x88\x01\x01\x129\n" +
	"\acolumns\x18\x05 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\acolumns\x12_\n" +
	"\x10update_condition\x18\x06 \x01(\v2/.scalardb.cluster.rpc.v1.Update.UpdateConditionH\x01R\x0fupdateCondition\x88\x01\x01\x12O\n" +
	"\n" +
	"attributes\x18\a \x03(\v2/.scalardb.cluster.rpc.v1.Update.AttributesEntryR\n" +
	"attributes\x1a\xf4\x02\n" +
	"\x0fUpdateCondition\x12w\n" +
	"\x15update_condition_type\x18\x01 \x01(\x0e2C.scalardb.cluster.rpc.v1.Update.UpdateCondition.UpdateConditionTypeR\x13updateConditionType\x12g\n" +
	"\x17conditional_expressions\x18\x02 \x03(\v2..scalardb.cluster.rpc.v1.ConditionalExpressionR\x16conditionalExpressions\"\x7f\n" +
	"\x13UpdateConditionType\x12%\n" +
	"!UPDATE_CONDITION_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18UPDATE_CONDITION_TYPE_IF\x10\x01\x12#\n" +
	"\x1fUPDATE_CONDITION_TYPE_IF_EXISTS\x10\x02\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x11\n" +
	"\x0f_clustering_keyB\x13\n" +
	"\x11_update_condition\"\xeb\x06\n" +
	"\x06Delete\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\x12A\n" +
	"\rpartition_key\x18\x03 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyR\fpartitionKey\x12H\n" +
	"\x0eclustering_key\x18\x04 \x01(\v2\x1c.scalardb.cluster.rpc.v1.KeyH\x00R\rclusteringKey\x88\x01\x01\x12_\n" +
	"\x10delete_condition\x18\x05 \x01(\v2/.scalardb.cluster.rpc.v1.Delete.DeleteConditionH\x01R\x0fdeleteCondition\x88\x01\x01\x12O\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2/.scalardb.cluster.rpc.v1.Delete.AttributesEntryR\n" +
	"attributes\x1a\xf4\x02\n" +
	"\x0fDeleteCondition\x12w\n" +
	"\x15delete_condition_type\x18\x01 \x01(\x0e2C.scalardb.cluster.rpc.v1.Delete.DeleteCondition.DeleteConditionTypeR\x13deleteConditionType\x12g\n" +
	"\x17conditional_expressions\x18\x02 \x03(\v2..scalardb.cluster.rpc.v1.ConditionalExpressionR\x16conditionalExpressions\"\x7f\n" +
	"\x13DeleteConditionType\x12%\n" +
	"!DELETE_CONDITION_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18DELETE_CONDITION_TYPE_IF\x10\x01\x12#\n" +
	"\x1fDELETE_CONDITION_TYPE_IF_EXISTS\x10\x02\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x11\n" +
	"\x0f_clustering_keyB\x13\n" +
	"\x11_delete_condition\"\xb4\x02\n" +
	"\bMutation\x120\n" +
	"\x03put\x18\x01 \x01(\v2\x1c.scalardb.cluster.rpc.v1.PutH\x00R\x03put\x129\n" +
	"\x06delete\x18\x02 \x01(\v2\x1f.scalardb.cluster.rpc.v1.DeleteH\x00R\x06delete\x129\n" +
	"\x06insert\x18\x03 \x01(\v2\x1f.scalardb.cluster.rpc.v1.InsertH\x00R\x06insert\x129\n" +
	"\x06upsert\x18\x04 \x01(\v2\x1f.scalardb.cluster.rpc.v1.UpsertH\x00R\x06upsert\x129\n" +
	"\x06update\x18\x05 \x01(\v2\x1f.scalardb.cluster.rpc.v1.UpdateH\x00R\x06updateB\n" +
	"\n" +
	"\bmutation\"C\n" +
	"\x06Result\x129\n" +
	"\acolumns\x18\x01 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ColumnR\acolumns\"\x81\x05\n" +
	"\rTableMetadata\x12M\n" +
	"\acolumns\x18\x01 \x03(\v23.scalardb.cluster.rpc.v1.TableMetadata.ColumnsEntryR\acolumns\x12;\n" +
	"\x1apartition_key_column_names\x18\x02 \x03(\tR\x17partitionKeyColumnNames\x12=\n" +
	"\x1bclustering_key_column_names\x18\x03 \x03(\tR\x18clusteringKeyColumnNames\x12i\n" +
	"\x11clustering_orders\x18\x04 \x03(\v2<.scalardb.cluster.rpc.v1.TableMetadata.ClusteringOrdersEntryR\x10clusteringOrders\x12?\n" +
	"\x1csecondary_index_column_names\x18\x05 \x03(\tR\x19secondaryIndexColumnNames\x12+\n" +
	"\x11encrypted_columns\x18\x06 \x03(\tR\x10encryptedColumns\x1a]\n" +
	"\fColumnsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\x0e2!.scalardb.cluster.rpc.v1.DataTypeR\x05value:\x028\x01\x1am\n" +
	"\x15ClusteringOrdersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12>\n" +
	"\x05value\x18\x02 \x01(\x0e2(.scalardb.cluster.rpc.v1.ClusteringOrderR\x05value:\x028\x01\"_\n" +
	"\rRequestHeader\x12\x1b\n" +
	"\thop_limit\x18\x01 \x01(\x05R\bhopLimit\x12\"\n" +
	"\n" +
	"auth_token\x18\x02 \x01(\tH\x00R\tauthToken\x88\x01\x01B\r\n" +
	"\v_auth_token\"\x9c\x01\n" +
	"\fBeginRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01B\x11\n" +
	"\x0f_transaction_id\"6\n" +
	"\rBeginResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"\xca\x01\n" +
	"\n" +
	"GetRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x12.\n" +
	"\x03get\x18\x03 \x01(\v2\x1c.scalardb.cluster.rpc.v1.GetR\x03getB\x11\n" +
	"\x0f_transaction_id\"V\n" +
	"\vGetResponse\x12<\n" +
	"\x06result\x18\x01 \x01(\v2\x1f.scalardb.cluster.rpc.v1.ResultH\x00R\x06result\x88\x01\x01B\t\n" +
	"\a_result\"\xce\x01\n" +
	"\vScanRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x121\n" +
	"\x04scan\x18\x03 \x01(\v2\x1d.scalardb.cluster.rpc.v1.ScanR\x04scanB\x11\n" +
	"\x0f_transaction_id\"I\n" +
	"\fScanResponse\x129\n" +
	"\aresults\x18\x01 \x03(\v2\x1f.scalardb.cluster.rpc.v1.ResultR\aresults\"\xd0\x01\n" +
	"\n" +
	"PutRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x120\n" +
	"\x04puts\x18\x03 \x03(\v2\x1c.scalardb.cluster.rpc.v1.PutR\x04puts:\x02\x18\x01B\x11\n" +
	"\x0f_transaction_id\"\x11\n" +
	"\vPutResponse:\x02\x18\x01\"\xd8\x01\n" +
	"\rInsertRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x129\n" +
	"\ainserts\x18\x03 \x03(\v2\x1f.scalardb.cluster.rpc.v1.InsertR\ainsertsB\x11\n" +
	"\x0f_transaction_id\"\x10\n" +
	"\x0eInsertResponse\"\xd8\x01\n" +
	"\rUpsertRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x129\n" +
	"\aupserts\x18\x03 \x03(\v2\x1f.scalardb.cluster.rpc.v1.UpsertR\aupsertsB\x11\n" +
	"\x0f_transaction_id\"\x10\n" +
	"\x0eUpsertResponse\"\xd8\x01\n" +
	"\rUpdateRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x129\n" +
	"\aupdates\x18\x03 \x03(\v2\x1f.scalardb.cluster.rpc.v1.UpdateR\aupdatesB\x11\n" +
	"\x0f_transaction_id\"\x10\n" +
	"\x0eUpdateResponse\"\xd8\x01\n" +
	"\rDeleteRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x129\n" +
	"\adeletes\x18\x03 \x03(\v2\x1f.scalardb.cluster.rpc.v1.DeleteR\adeletesB\x11\n" +
	"\x0f_transaction_id\"\x10\n" +
	"\x0eDeleteResponse\"\xde\x01\n" +
	"\rMutateRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x0etransaction_id\x18\x02 \x01(\tH\x00R\rtransactionId\x88\x01\x01\x12?\n" +
	"\tmutations\x18\x03 \x03(\v2!.scalardb.cluster.rpc.v1.MutationR\tmutationsB\x11\n" +
	"\x0f_transaction_id\"\x10\n" +
	"\x0eMutateResponse\"\x85\x01\n" +
	"\rCommitRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\"\x10\n" +
	"\x0eCommitResponse\"\x87\x01\n" +
	"\x0fRollbackRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\"\x12\n" +
	"\x10RollbackResponse\"\x83\x01\n" +
	"\vJoinRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\"\x0e\n" +
	"\fJoinResponse\"\x86\x01\n" +
	"\x0ePrepareRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\"\x11\n" +
	"\x0fPrepareResponse\"\x87\x01\n" +
	"\x0fValidateRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\"\x12\n" +
	"\x10ValidateResponse\"\xc6\x02\n" +
	"\x16CreateNamespaceRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12V\n" +
	"\aoptions\x18\x03 \x03(\v2<.scalardb.cluster.rpc.v1.CreateNamespaceRequest.OptionsEntryR\aoptions\x12\"\n" +
	"\rif_not_exists\x18\x04 \x01(\bR\vifNotExists\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x19\n" +
	"\x17CreateNamespaceResponse\"\xa9\x01\n" +
	"\x14DropNamespaceRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1b\n" +
	"\tif_exists\x18\x03 \x01(\bR\bifExists\"\x17\n" +
	"\x15DropNamespaceResponse\"\x8e\x01\n" +
	"\x16NamespaceExistsRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\"1\n" +
	"\x17NamespaceExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"\xac\x03\n" +
	"\x12CreateTableRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12M\n" +
	"\x0etable_metadata\x18\x04 \x01(\v2&.scalardb.cluster.rpc.v1.TableMetadataR\rtableMetadata\x12R\n" +
	"\aoptions\x18\x05 \x03(\v28.scalardb.cluster.rpc.v1.CreateTableRequest.OptionsEntryR\aoptions\x12\"\n" +
	"\rif_not_exists\x18\x06 \x01(\bR\vifNotExists\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x15\n" +
	"\x13CreateTableResponse\"\xc4\x01\n" +
	"\x10DropTableRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12\x1b\n" +
	"\tif_exists\x18\x04 \x01(\bR\bifExists\"\x13\n" +
	"\x11DropTableResponse\"\xab\x01\n" +
	"\x14TruncateTableRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\"\x17\n" +
	"\x15TruncateTableResponse\"\xa9\x01\n" +
	"\x12TableExistsRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\"-\n" +
	"\x13TableExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"\xfe\x02\n" +
	"\x12CreateIndexRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x04 \x01(\tR\n" +
	"columnName\x12R\n" +
	"\aoptions\x18\x05 \x03(\v28.scalardb.cluster.rpc.v1.CreateIndexRequest.OptionsEntryR\aoptions\x12\"\n" +
	"\rif_not_exists\x18\x06 \x01(\bR\vifNotExists\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x15\n" +
	"\x13CreateIndexResponse\"\xe5\x01\n" +
	"\x10DropIndexRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x04 \x01(\tR\n" +
	"columnName\x12\x1b\n" +
	"\tif_exists\x18\x05 \x01(\bR\bifExists\"\x13\n" +
	"\x11DropIndexResponse\"\xca\x01\n" +
	"\x12IndexExistsRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x04 \x01(\tR\n" +
	"columnName\"-\n" +
	"\x13IndexExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"\xa2\x02\n" +
	"\x16RepairNamespaceRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12V\n" +
	"\aoptions\x18\x03 \x03(\v2<.scalardb.cluster.rpc.v1.RepairNamespaceRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x19\n" +
	"\x17RepairNamespaceResponse\"\x88\x03\n" +
	"\x12RepairTableRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12M\n" +
	"\x0etable_metadata\x18\x04 \x01(\v2&.scalardb.cluster.rpc.v1.TableMetadataR\rtableMetadata\x12R\n" +
	"\aoptions\x18\x05 \x03(\v28.scalardb.cluster.rpc.v1.RepairTableRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x15\n" +
	"\x13RepairTableResponse\"\xbd\x02\n" +
	"\x1aAddNewColumnToTableRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12\x1f\n" +
	"\vcolumn_name\x18\x04 \x01(\tR\n" +
	"columnName\x12K\n" +
	"\x10column_data_type\x18\x05 \x01(\x0e2!.scalardb.cluster.rpc.v1.DataTypeR\x0ecolumnDataType\x12\x1c\n" +
	"\tencrypted\x18\x06 \x01(\bR\tencrypted\"\x1d\n" +
	"\x1bAddNewColumnToTableResponse\"\xad\x02\n" +
	"\x1eCreateCoordinatorTablesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12^\n" +
	"\aoptions\x18\x02 \x03(\v2D.scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest.OptionsEntryR\aoptions\x12 \n" +
	"\fif_not_exist\x18\x03 \x01(\bR\n" +
	"ifNotExist\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\x1fCreateCoordinatorTablesResponse\"\x88\x01\n" +
	"\x1cDropCoordinatorTablesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x19\n" +
	"\bif_exist\x18\x02 \x01(\bR\aifExist\"\x1f\n" +
	"\x1dDropCoordinatorTablesResponse\"q\n" +
	" TruncateCoordinatorTablesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"#\n" +
	"!TruncateCoordinatorTablesResponse\"n\n" +
	"\x1dCoordinatorTablesExistRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"6\n" +
	"\x1eCoordinatorTablesExistResponse\x12\x14\n" +
	"\x05exist\x18\x01 \x01(\bR\x05exist\"\x8b\x02\n" +
	"\x1eRepairCoordinatorTablesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12^\n" +
	"\aoptions\x18\x02 \x03(\v2D.scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"!\n" +
	"\x1fRepairCoordinatorTablesResponse\"\xae\x01\n" +
	"\x17GetTableMetadataRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\"\x81\x01\n" +
	"\x18GetTableMetadataResponse\x12R\n" +
	"\x0etable_metadata\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.TableMetadataH\x00R\rtableMetadata\x88\x01\x01B\x11\n" +
	"\x0f_table_metadata\"i\n" +
	"\x18GetNamespaceNamesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"D\n" +
	"\x19GetNamespaceNamesResponse\x12'\n" +
	"\x0fnamespace_names\x18\x01 \x03(\tR\x0enamespaceNames\"\x95\x01\n" +
	"\x1dGetNamespaceTableNamesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\"A\n" +
	"\x1eGetNamespaceTableNamesResponse\x12\x1f\n" +
	"\vtable_names\x18\x01 \x03(\tR\n" +
	"tableNames\"\x9e\x04\n" +
	"\x12ImportTableRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12%\n" +
	"\x0enamespace_name\x18\x02 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x03 \x01(\tR\ttableName\x12R\n" +
	"\aoptions\x18\x04 \x03(\v28.scalardb.cluster.rpc.v1.ImportTableRequest.OptionsEntryR\aoptions\x12x\n" +
	"\x15override_columns_type\x18\x05 \x03(\v2D.scalardb.cluster.rpc.v1.ImportTableRequest.OverrideColumnsTypeEntryR\x13overrideColumnsType\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1ai\n" +
	"\x18OverrideColumnsTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\x0e2!.scalardb.cluster.rpc.v1.DataTypeR\x05value:\x028\x01\"\x15\n" +
	"\x13ImportTableResponse\"\xeb\x01\n" +
	"\x0eUpgradeRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12N\n" +
	"\aoptions\x18\x02 \x03(\v24.scalardb.cluster.rpc.v1.UpgradeRequest.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x11\n" +
	"\x0fUpgradeResponse\"\xf4\x01\n" +
	"\x11CreateUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1f\n" +
	"\bpassword\x18\x03 \x01(\tH\x00R\bpassword\x88\x01\x01\x12F\n" +
	"\fuser_options\x18\x04 \x03(\x0e2#.scalardb.cluster.rpc.v1.UserOptionR\vuserOptionsB\v\n" +
	"\t_password\"\x14\n" +
	"\x12CreateUserResponse\"\xf3\x01\n" +
	"\x10AlterUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1f\n" +
	"\bpassword\x18\x03 \x01(\tH\x00R\bpassword\x88\x01\x01\x12F\n" +
	"\fuser_options\x18\x04 \x03(\x0e2#.scalardb.cluster.rpc.v1.UserOptionR\vuserOptionsB\v\n" +
	"\t_password\"\x13\n" +
	"\x11AlterUserResponse\"|\n" +
	"\x0fDropUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"\x12\n" +
	"\x10DropUserResponse\"\x97\x02\n" +
	"\fGrantRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12%\n" +
	"\x0enamespace_name\x18\x03 \x01(\tR\rnamespaceName\x12\"\n" +
	"\n" +
	"table_name\x18\x04 \x01(\tH\x00R\ttableName\x88\x01\x01\x12B\n" +
	"\n" +
	"privileges\x18\x05 \x03(\x0e2\".scalardb.cluster.rpc.v1.PrivilegeR\n" +
	"privilegesB\r\n" +
	"\v_table_name\"\x0f\n" +
	"\rGrantResponse\"\x98\x02\n" +
	"\rRevokeRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12%\n" +
	"\x0enamespace_name\x18\x03 \x01(\tR\rnamespaceName\x12\"\n" +
	"\n" +
	"table_name\x18\x04 \x01(\tH\x00R\ttableName\x88\x01\x01\x12B\n" +
	"\n" +
	"privileges\x18\x05 \x03(\x0e2\".scalardb.cluster.rpc.v1.PrivilegeR\n" +
	"privilegesB\r\n" +
	"\v_table_name\"\x10\n" +
	"\x0eRevokeResponse\"8\n" +
	"\x04User\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tsuperuser\x18\x02 \x01(\bR\tsuperuser\"{\n" +
	"\x0eGetUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"R\n" +
	"\x0fGetUserResponse\x126\n" +
	"\x04user\x18\x01 \x01(\v2\x1d.scalardb.cluster.rpc.v1.UserH\x00R\x04user\x88\x01\x01B\a\n" +
	"\x05_user\"`\n" +
	"\x0fGetUsersRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"G\n" +
	"\x10GetUsersResponse\x123\n" +
	"\x05users\x18\x01 \x03(\v2\x1d.scalardb.cluster.rpc.v1.UserR\x05users\"f\n" +
	"\x15GetCurrentUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"K\n" +
	"\x16GetCurrentUserResponse\x121\n" +
	"\x04user\x18\x01 \x01(\v2\x1d.scalardb.cluster.rpc.v1.UserR\x04user\"\xdb\x01\n" +
	"\x14GetPrivilegesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12%\n" +
	"\x0enamespace_name\x18\x03 \x01(\tR\rnamespaceName\x12\"\n" +
	"\n" +
	"table_name\x18\x04 \x01(\tH\x00R\ttableName\x88\x01\x01B\r\n" +
	"\v_table_name\"[\n" +
	"\x15GetPrivilegesResponse\x12B\n" +
	"\n" +
	"privileges\x18\x01 \x03(\x0e2\".scalardb.cluster.rpc.v1.PrivilegeR\n" +
	"privileges\"\xd4\x01\n" +
	"\x13CreatePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x124\n" +
	"\x14data_tag_column_name\x18\x03 \x01(\tH\x00R\x11dataTagColumnName\x88\x01\x01B\x17\n" +
	"\x15_data_tag_column_name\"\x16\n" +
	"\x14CreatePolicyResponse\"\x85\x01\n" +
	"\x13EnablePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\"\x16\n" +
	"\x14EnablePolicyResponse\"\x86\x01\n" +
	"\x14DisablePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\"\x17\n" +
	"\x15DisablePolicyResponse\"\x82\x01\n" +
	"\x10GetPolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\"\\\n" +
	"\x11GetPolicyResponse\x12<\n" +
	"\x06policy\x18\x01 \x01(\v2\x1f.scalardb.cluster.rpc.v1.PolicyH\x00R\x06policy\x88\x01\x01B\t\n" +
	"\a_policy\"c\n" +
	"\x12GetPoliciesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"R\n" +
	"\x13GetPoliciesResponse\x12;\n" +
	"\bpolicies\x18\x01 \x03(\v2\x1f.scalardb.cluster.rpc.v1.PolicyR\bpolicies\"\xf9\x01\n" +
	"\x12CreateLevelRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12(\n" +
	"\x10level_short_name\x18\x03 \x01(\tR\x0elevelShortName\x12&\n" +
	"\x0flevel_long_name\x18\x04 \x01(\tR\rlevelLongName\x12!\n" +
	"\flevel_number\x18\x05 \x01(\x05R\vlevelNumber\"\x15\n" +
	"\x13CreateLevelResponse\"\xac\x01\n" +
	"\x10DropLevelRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12(\n" +
	"\x10level_short_name\x18\x03 \x01(\tR\x0elevelShortName\"\x13\n" +
	"\x11DropLevelResponse\"\xab\x01\n" +
	"\x0fGetLevelRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12(\n" +
	"\x10level_short_name\x18\x03 \x01(\tR\x0elevelShortName\"W\n" +
	"\x10GetLevelResponse\x129\n" +
	"\x05level\x18\x01 \x01(\v2\x1e.scalardb.cluster.rpc.v1.LevelH\x00R\x05level\x88\x01\x01B\b\n" +
	"\x06_level\"\x82\x01\n" +
	"\x10GetLevelsRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\"K\n" +
	"\x11GetLevelsResponse\x126\n" +
	"\x06levels\x18\x01 \x03(\v2\x1e.scalardb.cluster.rpc.v1.LevelR\x06levels\"\xf4\x01\n" +
	"\x18CreateCompartmentRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x124\n" +
	"\x16compartment_short_name\x18\x03 \x01(\tR\x14compartmentShortName\x122\n" +
	"\x15compartment_long_name\x18\x04 \x01(\tR\x13compartmentLongName\"\x1b\n" +
	"\x19CreateCompartmentResponse\"\xbe\x01\n" +
	"\x16DropCompartmentRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x124\n" +
	"\x16compartment_short_name\x18\x03 \x01(\tR\x14compartmentShortName\"\x19\n" +
	"\x17DropCompartmentResponse\"\xbd\x01\n" +
	"\x15GetCompartmentRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x124\n" +
	"\x16compartment_short_name\x18\x03 \x01(\tR\x14compartmentShortName\"u\n" +
	"\x16GetCompartmentResponse\x12K\n" +
	"\vcompartment\x18\x01 \x01(\v2$.scalardb.cluster.rpc.v1.CompartmentH\x00R\vcompartment\x88\x01\x01B\x0e\n" +
	"\f_compartment\"\x88\x01\n" +
	"\x16GetCompartmentsRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\"c\n" +
	"\x17GetCompartmentsResponse\x12H\n" +
	"\fcompartments\x18\x01 \x03(\v2$.scalardb.cluster.rpc.v1.CompartmentR\fcompartments\"\xae\x02\n" +
	"\x12CreateGroupRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12(\n" +
	"\x10group_short_name\x18\x03 \x01(\tR\x0egroupShortName\x12&\n" +
	"\x0fgroup_long_name\x18\x04 \x01(\tR\rgroupLongName\x12:\n" +
	"\x17parent_group_short_name\x18\x05 \x01(\tH\x00R\x14parentGroupShortName\x88\x01\x01B\x1a\n" +
	"\x18_parent_group_short_name\"\x15\n" +
	"\x13CreateGroupResponse\"\xac\x01\n" +
	"\x10DropGroupRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12(\n" +
	"\x10group_short_name\x18\x03 \x01(\tR\x0egroupShortName\"\x13\n" +
	"\x11DropGroupResponse\"\xab\x01\n" +
	"\x0fGetGroupRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12(\n" +
	"\x10group_short_name\x18\x03 \x01(\tR\x0egroupShortName\"W\n" +
	"\x10GetGroupResponse\x129\n" +
	"\x05group\x18\x01 \x01(\v2\x1e.scalardb.cluster.rpc.v1.GroupH\x00R\x05group\x88\x01\x01B\b\n" +
	"\x06_group\"\x82\x01\n" +
	"\x10GetGroupsRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\"K\n" +
	"\x11GetGroupsResponse\x126\n" +
	"\x06groups\x18\x01 \x03(\v2\x1e.scalardb.cluster.rpc.v1.GroupR\x06groups\"\xf8\x02\n" +
	"\x16SetLevelsToUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12(\n" +
	"\x10level_short_name\x18\x04 \x01(\tR\x0elevelShortName\x12<\n" +
	"\x18default_level_short_name\x18\x05 \x01(\tH\x00R\x15defaultLevelShortName\x88\x01\x01\x124\n" +
	"\x14row_level_short_name\x18\x06 \x01(\tH\x01R\x11rowLevelShortName\x88\x01\x01B\x1b\n" +
	"\x19_default_level_short_nameB\x17\n" +
	"\x15_row_level_short_name\"\x19\n" +
	"\x17SetLevelsToUserResponse\"\xff\x02\n" +
	"\x1bAddCompartmentToUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x124\n" +
	"\x16compartment_short_name\x18\x04 \x01(\tR\x14compartmentShortName\x12D\n" +
	"\vaccess_mode\x18\x05 \x01(\x0e2#.scalardb.cluster.rpc.v1.AccessModeR\n" +
	"accessMode\x12/\n" +
	"\x13default_compartment\x18\x06 \x01(\bR\x12defaultCompartment\x12'\n" +
	"\x0frow_compartment\x18\a \x01(\bR\x0erowCompartment\"\x1e\n" +
	"\x1cAddCompartmentToUserResponse\"\xe4\x01\n" +
	" RemoveCompartmentFromUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x124\n" +
	"\x16compartment_short_name\x18\x04 \x01(\tR\x14compartmentShortName\"#\n" +
	"!RemoveCompartmentFromUserResponse\"\xd5\x02\n" +
	"\x15AddGroupToUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12(\n" +
	"\x10group_short_name\x18\x04 \x01(\tR\x0egroupShortName\x12D\n" +
	"\vaccess_mode\x18\x05 \x01(\x0e2#.scalardb.cluster.rpc.v1.AccessModeR\n" +
	"accessMode\x12#\n" +
	"\rdefault_group\x18\x06 \x01(\bR\fdefaultGroup\x12\x1b\n" +
	"\trow_group\x18\a \x01(\bR\browGroup\"\x18\n" +
	"\x16AddGroupToUserResponse\"\xd2\x01\n" +
	"\x1aRemoveGroupFromUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12(\n" +
	"\x10group_short_name\x18\x04 \x01(\tR\x0egroupShortName\"\x1d\n" +
	"\x1bRemoveGroupFromUserResponse\"\xac\x01\n" +
	"\x1eDropUserTagInfoFromUserRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\"!\n" +
	"\x1fDropUserTagInfoFromUserResponse\"\xa3\x01\n" +
	"\x15GetUserTagInfoRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\"y\n" +
	"\x16GetUserTagInfoResponse\x12M\n" +
	"\ruser_tag_info\x18\x01 \x01(\v2$.scalardb.cluster.rpc.v1.UserTagInfoH\x00R\vuserTagInfo\x88\x01\x01B\x10\n" +
	"\x0e_user_tag_info\"\xe9\x01\n" +
	"\x1cCreateNamespacePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x122\n" +
	"\x15namespace_policy_name\x18\x02 \x01(\tR\x13namespacePolicyName\x12\x1f\n" +
	"\vpolicy_name\x18\x03 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0enamespace_name\x18\x04 \x01(\tR\rnamespaceName\"\x1f\n" +
	"\x1dCreateNamespacePolicyResponse\"\xa1\x01\n" +
	"\x1cEnableNamespacePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x122\n" +
	"\x15namespace_policy_name\x18\x02 \x01(\tR\x13namespacePolicyName\"\x1f\n" +
	"\x1dEnableNamespacePolicyResponse\"\xa2\x01\n" +
	"\x1dDisableNamespacePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x122\n" +
	"\x15namespace_policy_name\x18\x02 \x01(\tR\x13namespacePolicyName\" \n" +
	"\x1eDisableNamespacePolicyResponse\"\x9e\x01\n" +
	"\x19GetNamespacePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x122\n" +
	"\x15namespace_policy_name\x18\x02 \x01(\tR\x13namespacePolicyName\"\x8b\x01\n" +
	"\x1aGetNamespacePolicyResponse\x12X\n" +
	"\x10namespace_policy\x18\x01 \x01(\v2(.scalardb.cluster.rpc.v1.NamespacePolicyH\x00R\x0fnamespacePolicy\x88\x01\x01B\x13\n" +
	"\x11_namespace_policy\"l\n" +
	"\x1bGetNamespacePoliciesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"w\n" +
	"\x1cGetNamespacePoliciesResponse\x12W\n" +
	"\x12namespace_policies\x18\x01 \x03(\v2(.scalardb.cluster.rpc.v1.NamespacePolicyR\x11namespacePolicies\"\xfc\x01\n" +
	"\x18CreateTablePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x11table_policy_name\x18\x02 \x01(\tR\x0ftablePolicyName\x12\x1f\n" +
	"\vpolicy_name\x18\x03 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0enamespace_name\x18\x04 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x05 \x01(\tR\ttableName\"\x1b\n" +
	"\x19CreateTablePolicyResponse\"\x95\x01\n" +
	"\x18EnableTablePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x11table_policy_name\x18\x02 \x01(\tR\x0ftablePolicyName\"\x1b\n" +
	"\x19EnableTablePolicyResponse\"\x96\x01\n" +
	"\x19DisableTablePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x11table_policy_name\x18\x02 \x01(\tR\x0ftablePolicyName\"\x1c\n" +
	"\x1aDisableTablePolicyResponse\"\x92\x01\n" +
	"\x15GetTablePolicyRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\x12*\n" +
	"\x11table_policy_name\x18\x02 \x01(\tR\x0ftablePolicyName\"w\n" +
	"\x16GetTablePolicyResponse\x12L\n" +
	"\ftable_policy\x18\x01 \x01(\v2$.scalardb.cluster.rpc.v1.TablePolicyH\x00R\vtablePolicy\x88\x01\x01B\x0f\n" +
	"\r_table_policy\"h\n" +
	"\x17GetTablePoliciesRequest\x12M\n" +
	"\x0erequest_header\x18\x01 \x01(\v2&.scalardb.cluster.rpc.v1.RequestHeaderR\rrequestHeader\"g\n" +
	"\x18GetTablePoliciesResponse\x12K\n" +
	"\x0etable_policies\x18\x01 \x03(\v2$.scalardb.cluster.rpc.v1.TablePolicyR\rtablePolicies\"\x89\x01\n" +
	"\x06Policy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\x14data_tag_column_name\x18\x02 \x01(\tR\x11dataTagColumnName\x12:\n" +
	"\x05state\x18\x03 \x01(\x0e2$.scalardb.cluster.rpc.v1.PolicyStateR\x05state\"\x87\x01\n" +
	"\x05Level\x12\x1f\n" +
	"\vpolicy_name\x18\x01 \x01(\tR\n" +
	"policyName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x02 \x01(\tR\tshortName\x12\x1b\n" +
	"\tlong_name\x18\x03 \x01(\tR\blongName\x12!\n" +
	"\flevel_number\x18\x04 \x01(\x05R\vlevelNumber\"j\n" +
	"\vCompartment\x12\x1f\n" +
	"\vpolicy_name\x18\x01 \x01(\tR\n" +
	"policyName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x02 \x01(\tR\tshortName\x12\x1b\n" +
	"\tlong_name\x18\x03 \x01(\tR\blongName\"\xbc\x01\n" +
	"\x05Group\x12\x1f\n" +
	"\vpolicy_name\x18\x01 \x01(\tR\n" +
	"policyName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x02 \x01(\tR\tshortName\x12\x1b\n" +
	"\tlong_name\x18\x03 \x01(\tR\blongName\x12:\n" +
	"\x17parent_group_short_name\x18\x04 \x01(\tH\x00R\x14parentGroupShortName\x88\x01\x01B\x1a\n" +
	"\x18_parent_group_short_name\"\x9b\t\n" +
	"\vUserTagInfo\x12\x1f\n" +
	"\vpolicy_name\x18\x01 \x01(\tR\n" +
	"policyName\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12M\n" +
	"\n" +
	"level_info\x18\x03 \x01(\v2..scalardb.cluster.rpc.v1.UserTagInfo.LevelInfoR\tlevelInfo\x12_\n" +
	"\x10compartment_info\x18\x04 \x01(\v24.scalardb.cluster.rpc.v1.UserTagInfo.CompartmentInfoR\x0fcompartmentInfo\x12M\n" +
	"\n" +
	"group_info\x18\x05 \x01(\v2..scalardb.cluster.rpc.v1.UserTagInfo.GroupInfoR\tgroupInfo\x1a\x9f\x01\n" +
	"\tLevelInfo\x12(\n" +
	"\x10level_short_name\x18\x01 \x01(\tR\x0elevelShortName\x127\n" +
	"\x18default_level_short_name\x18\x02 \x01(\tR\x15defaultLevelShortName\x12/\n" +
	"\x14row_level_short_name\x18\x03 \x01(\tR\x11rowLevelShortName\x1a\xf6\x02\n" +
	"\x0fCompartmentInfo\x12?\n" +
	"\x1cread_compartment_short_names\x18\x01 \x03(\tR\x19readCompartmentShortNames\x12A\n" +
	"\x1dwrite_compartment_short_names\x18\x02 \x03(\tR\x1awriteCompartmentShortNames\x12N\n" +
	"$default_read_compartment_short_names\x18\x03 \x03(\tR defaultReadCompartmentShortNames\x12P\n" +
	"%default_write_compartment_short_names\x18\x04 \x03(\tR!defaultWriteCompartmentShortNames\x12=\n" +
	"\x1brow_compartment_short_names\x18\x05 \x03(\tR\x18rowCompartmentShortNames\x1a\xb4\x02\n" +
	"\tGroupInfo\x123\n" +
	"\x16read_group_short_names\x18\x01 \x03(\tR\x13readGroupShortNames\x125\n" +
	"\x17write_group_short_names\x18\x02 \x03(\tR\x14writeGroupShortNames\x12B\n" +
	"\x1edefault_read_group_short_names\x18\x03 \x03(\tR\x1adefaultReadGroupShortNames\x12D\n" +
	"\x1fdefault_write_group_short_names\x18\x04 \x03(\tR\x1bdefaultWriteGroupShortNames\x121\n" +
	"\x15row_group_short_names\x18\x05 \x03(\tR\x12rowGroupShortNames\"\xa9\x01\n" +
	"\x0fNamespacePolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0enamespace_name\x18\x03 \x01(\tR\rnamespaceName\x12:\n" +
	"\x05state\x18\x04 \x01(\x0e2$.scalardb.cluster.rpc.v1.PolicyStateR\x05state\"\xc4\x01\n" +
	"\vTablePolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0enamespace_name\x18\x03 \x01(\tR\rnamespaceName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x04 \x01(\tR\ttableName\x12:\n" +
	"\x05state\x18\x05 \x01(\x0e2$.scalardb.cluster.rpc.v1.PolicyStateR\x05state*\x94\x02\n" +
	"\bDataType\x12\x19\n" +
	"\x15DATA_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11DATA_TYPE_BOOLEAN\x10\x01\x12\x11\n" +
	"\rDATA_TYPE_INT\x10\x02\x12\x14\n" +
	"\x10DATA_TYPE_BIGINT\x10\x03\x12\x13\n" +
	"\x0fDATA_TYPE_FLOAT\x10\x04\x12\x14\n" +
	"\x10DATA_TYPE_DOUBLE\x10\x05\x12\x12\n" +
	"\x0eDATA_TYPE_TEXT\x10\x06\x12\x12\n" +
	"\x0eDATA_TYPE_BLOB\x10\a\x12\x12\n" +
	"\x0eDATA_TYPE_DATE\x10\b\x12\x12\n" +
	"\x0eDATA_TYPE_TIME\x10\t\x12\x17\n" +
	"\x13DATA_TYPE_TIMESTAMP\x10\n" +
	"\x12\x19\n" +
	"\x15DATA_TYPE_TIMESTAMPTZ\x10\v*h\n" +
	"\x0fClusteringOrder\x12 \n" +
	"\x1cCLUSTERING_ORDER_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14CLUSTERING_ORDER_ASC\x10\x01\x12\x19\n" +
	"\x15CLUSTERING_ORDER_DESC\x10\x02*b\n" +
	"\n" +
	"UserOption\x12\x1b\n" +
	"\x17USER_OPTION_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15USER_OPTION_SUPERUSER\x10\x01\x12\x1c\n" +
	"\x18USER_OPTION_NO_SUPERUSER\x10\x02*\xd1\x01\n" +
	"\tPrivilege\x12\x19\n" +
	"\x15PRIVILEGE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0ePRIVILEGE_READ\x10\x01\x12\x13\n" +
	"\x0fPRIVILEGE_WRITE\x10\x02\x12\x14\n" +
	"\x10PRIVILEGE_DELETE\x10\x03\x12\x14\n" +
	"\x10PRIVILEGE_CREATE\x10\x04\x12\x12\n" +
	"\x0ePRIVILEGE_DROP\x10\x05\x12\x16\n" +
	"\x12PRIVILEGE_TRUNCATE\x10\x06\x12\x13\n" +
	"\x0fPRIVILEGE_ALTER\x10\a\x12\x13\n" +
	"\x0fPRIVILEGE_GRANT\x10\b*`\n" +
	"\vPolicyState\x12\x1c\n" +
	"\x18POLICY_STATE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14POLICY_STATE_ENABLED\x10\x01\x12\x19\n" +
	"\x15POLICY_STATE_DISABLED\x10\x02*`\n" +
	"\n" +
	"AccessMode\x12\x1b\n" +
	"\x17ACCESS_MODE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15ACCESS_MODE_READ_ONLY\x10\x01\x12\x1a\n" +
	"\x16ACCESS_MODE_READ_WRITE\x10\x022\x85\b\n" +
	"\x16DistributedTransaction\x12X\n" +
	"\x05Begin\x12%.scalardb.cluster.rpc.v1.BeginRequest\x1a&.scalardb.cluster.rpc.v1.BeginResponse\"\x00\x12R\n" +
	"\x03Get\x12#.scalardb.cluster.rpc.v1.GetRequest\x1a$.scalardb.cluster.rpc.v1.GetResponse\"\x00\x12U\n" +
	"\x04Scan\x12$.scalardb.cluster.rpc.v1.ScanRequest\x1a%.scalardb.cluster.rpc.v1.ScanResponse\"\x00\x12U\n" +
	"\x03Put\x12#.scalardb.cluster.rpc.v1.PutRequest\x1a$.scalardb.cluster.rpc.v1.PutResponse\"\x03\x88\x02\x01\x12[\n" +
	"\x06Insert\x12&.scalardb.cluster.rpc.v1.InsertRequest\x1a'.scalardb.cluster.rpc.v1.InsertResponse\"\x00\x12[\n" +
	"\x06Upsert\x12&.scalardb.cluster.rpc.v1.UpsertRequest\x1a'.scalardb.cluster.rpc.v1.UpsertResponse\"\x00\x12[\n" +
	"\x06Update\x12&.scalardb.cluster.rpc.v1.UpdateRequest\x1a'.scalardb.cluster.rpc.v1.UpdateResponse\"\x00\x12[\n" +
	"\x06Delete\x12&.scalardb.cluster.rpc.v1.DeleteRequest\x1a'.scalardb.cluster.rpc.v1.DeleteResponse\"\x00\x12[\n" +
	"\x06Mutate\x12&.scalardb.cluster.rpc.v1.MutateRequest\x1a'.scalardb.cluster.rpc.v1.MutateResponse\"\x00\x12[\n" +
	"\x06Commit\x12&.scalardb.cluster.rpc.v1.CommitRequest\x1a'.scalardb.cluster.rpc.v1.CommitResponse\"\x00\x12a\n" +
	"\bRollback\x12(.scalardb.cluster.rpc.v1.RollbackRequest\x1a).scalardb.cluster.rpc.v1.RollbackResponse\"\x002\xa2\n" +
	"\n" +
	"\x19TwoPhaseCommitTransaction\x12X\n" +
	"\x05Begin\x12%.scalardb.cluster.rpc.v1.BeginRequest\x1a&.scalardb.cluster.rpc.v1.BeginResponse\"\x00\x12U\n" +
	"\x04Join\x12$.scalardb.cluster.rpc.v1.JoinRequest\x1a%.scalardb.cluster.rpc.v1.JoinResponse\"\x00\x12R\n" +
	"\x03Get\x12#.scalardb.cluster.rpc.v1.GetRequest\x1a$.scalardb.cluster.rpc.v1.GetResponse\"\x00\x12U\n" +
	"\x04Scan\x12$.scalardb.cluster.rpc.v1.ScanRequest\x1a%.scalardb.cluster.rpc.v1.ScanResponse\"\x00\x12U\n" +
	"\x03Put\x12#.scalardb.cluster.rpc.v1.PutRequest\x1a$.scalardb.cluster.rpc.v1.PutResponse\"\x03\x88\x02\x01\x12[\n" +
	"\x06Insert\x12&.scalardb.cluster.rpc.v1.InsertRequest\x1a'.scalardb.cluster.rpc.v1.InsertResponse\"\x00\x12[\n" +
	"\x06Upsert\x12&.scalardb.cluster.rpc.v1.UpsertRequest\x1a'.scalardb.cluster.rpc.v1.UpsertResponse\"\x00\x12[\n" +
	"\x06Update\x12&.scalardb.cluster.rpc.v1.UpdateRequest\x1a'.scalardb.cluster.rpc.v1.UpdateResponse\"\x00\x12[\n" +
	"\x06Delete\x12&.scalardb.cluster.rpc.v1.DeleteRequest\x1a'.scalardb.cluster.rpc.v1.DeleteResponse\"\x00\x12[\n" +
	"\x06Mutate\x12&.scalardb.cluster.rpc.v1.MutateRequest\x1a'.scalardb.cluster.rpc.v1.MutateResponse\"\x00\x12^\n" +
	"\aPrepare\x12'.scalardb.cluster.rpc.v1.PrepareRequest\x1a(.scalardb.cluster.rpc.v1.PrepareResponse\"\x00\x12a\n" +
	"\bValidate\x12(.scalardb.cluster.rpc.v1.ValidateRequest\x1a).scalardb.cluster.rpc.v1.ValidateResponse\"\x00\x12[\n" +
	"\x06Commit\x12&.scalardb.cluster.rpc.v1.CommitRequest\x1a'.scalardb.cluster.rpc.v1.CommitResponse\"\x00\x12a\n" +
	"\bRollback\x12(.scalardb.cluster.rpc.v1.RollbackRequest\x1a).scalardb.cluster.rpc.v1.RollbackResponse\"\x002\xfa<\n" +
	"\x1bDistributedTransactionAdmin\x12v\n" +
	"\x0fCreateNamespace\x12/.scalardb.cluster.rpc.v1.CreateNamespaceRequest\x1a0.scalardb.cluster.rpc.v1.CreateNamespaceResponse\"\x00\x12p\n" +
	"\rDropNamespace\x12-.scalardb.cluster.rpc.v1.DropNamespaceRequest\x1a..scalardb.cluster.rpc.v1.DropNamespaceResponse\"\x00\x12v\n" +
	"\x0fNamespaceExists\x12/.scalardb.cluster.rpc.v1.NamespaceExistsRequest\x1a0.scalardb.cluster.rpc.v1.NamespaceExistsResponse\"\x00\x12j\n" +
	"\vCreateTable\x12+.scalardb.cluster.rpc.v1.CreateTableRequest\x1a,.scalardb.cluster.rpc.v1.CreateTableResponse\"\x00\x12d\n" +
	"\tDropTable\x12).scalardb.cluster.rpc.v1.DropTableRequest\x1a*.scalardb.cluster.rpc.v1.DropTableResponse\"\x00\x12p\n" +
	"\rTruncateTable\x12-.scalardb.cluster.rpc.v1.TruncateTableRequest\x1a..scalardb.cluster.rpc.v1.TruncateTableResponse\"\x00\x12j\n" +
	"\vTableExists\x12+.scalardb.cluster.rpc.v1.TableExistsRequest\x1a,.scalardb.cluster.rpc.v1.TableExistsResponse\"\x00\x12j\n" +
	"\vCreateIndex\x12+.scalardb.cluster.rpc.v1.CreateIndexRequest\x1a,.scalardb.cluster.rpc.v1.CreateIndexResponse\"\x00\x12d\n" +
	"\tDropIndex\x12).scalardb.cluster.rpc.v1.DropIndexRequest\x1a*.scalardb.cluster.rpc.v1.DropIndexResponse\"\x00\x12j\n" +
	"\vIndexExists\x12+.scalardb.cluster.rpc.v1.IndexExistsRequest\x1a,.scalardb.cluster.rpc.v1.IndexExistsResponse\"\x00\x12v\n" +
	"\x0fRepairNamespace\x12/.scalardb.cluster.rpc.v1.RepairNamespaceRequest\x1a0.scalardb.cluster.rpc.v1.RepairNamespaceResponse\"\x00\x12j\n" +
	"\vRepairTable\x12+.scalardb.cluster.rpc.v1.RepairTableRequest\x1a,.scalardb.cluster.rpc.v1.RepairTableResponse\"\x00\x12\x82\x01\n" +
	"\x13AddNewColumnToTable\x123.scalardb.cluster.rpc.v1.AddNewColumnToTableRequest\x1a4.scalardb.cluster.rpc.v1.AddNewColumnToTableResponse\"\x00\x12\x8e\x01\n" +
	"\x17CreateCoordinatorTables\x127.scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest\x1a8.scalardb.cluster.rpc.v1.CreateCoordinatorTablesResponse\"\x00\x12\x88\x01\n" +
	"\x15DropCoordinatorTables\x125.scalardb.cluster.rpc.v1.DropCoordinatorTablesRequest\x1a6.scalardb.cluster.rpc.v1.DropCoordinatorTablesResponse\"\x00\x12\x94\x01\n" +
	"\x19TruncateCoordinatorTables\x129.scalardb.cluster.rpc.v1.TruncateCoordinatorTablesRequest\x1a:.scalardb.cluster.rpc.v1.TruncateCoordinatorTablesResponse\"\x00\x12\x8b\x01\n" +
	"\x16CoordinatorTablesExist\x126.scalardb.cluster.rpc.v1.CoordinatorTablesExistRequest\x1a7.scalardb.cluster.rpc.v1.CoordinatorTablesExistResponse\"\x00\x12\x8e\x01\n" +
	"\x17RepairCoordinatorTables\x127.scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest\x1a8.scalardb.cluster.rpc.v1.RepairCoordinatorTablesResponse\"\x00\x12y\n" +
	"\x10GetTableMetadata\x120.scalardb.cluster.rpc.v1.GetTableMetadataRequest\x1a1.scalardb.cluster.rpc.v1.GetTableMetadataResponse\"\x00\x12|\n" +
	"\x11GetNamespaceNames\x121.scalardb.cluster.rpc.v1.GetNamespaceNamesRequest\x1a2.scalardb.cluster.rpc.v1.GetNamespaceNamesResponse\"\x00\x12\x8b\x01\n" +
	"\x16GetNamespaceTableNames\x126.scalardb.cluster.rpc.v1.GetNamespaceTableNamesRequest\x1a7.scalardb.cluster.rpc.v1.GetNamespaceTableNamesResponse\"\x00\x12j\n" +
	"\vImportTable\x12+.scalardb.cluster.rpc.v1.ImportTableRequest\x1a,.scalardb.cluster.rpc.v1.ImportTableResponse\"\x00\x12^\n" +
	"\aUpgrade\x12'.scalardb.cluster.rpc.v1.UpgradeRequest\x1a(.scalardb.cluster.rpc.v1.UpgradeResponse\"\x00\x12g\n" +
	"\n" +
	"CreateUser\x12*.scalardb.cluster.rpc.v1.CreateUserRequest\x1a+.scalardb.cluster.rpc.v1.CreateUserResponse\"\x00\x12d\n" +
	"\tAlterUser\x12).scalardb.cluster.rpc.v1.AlterUserRequest\x1a*.scalardb.cluster.rpc.v1.AlterUserResponse\"\x00\x12a\n" +
	"\bDropUser\x12(.scalardb.cluster.rpc.v1.DropUserRequest\x1a).scalardb.cluster.rpc.v1.DropUserResponse\"\x00\x12X\n" +
	"\x05Grant\x12%.scalardb.cluster.rpc.v1.GrantRequest\x1a&.scalardb.cluster.rpc.v1.GrantResponse\"\x00\x12[\n" +
	"\x06Revoke\x12&.scalardb.cluster.rpc.v1.RevokeRequest\x1a'.scalardb.cluster.rpc.v1.RevokeResponse\"\x00\x12^\n" +
	"\aGetUser\x12'.scalardb.cluster.rpc.v1.GetUserRequest\x1a(.scalardb.cluster.rpc.v1.GetUserResponse\"\x00\x12a\n" +
	"\bGetUsers\x12(.scalardb.cluster.rpc.v1.GetUsersRequest\x1a).scalardb.cluster.rpc.v1.GetUsersResponse\"\x00\x12s\n" +
	"\x0eGetCurrentUser\x12..scalardb.cluster.rpc.v1.GetCurrentUserRequest\x1a/.scalardb.cluster.rpc.v1.GetCurrentUserResponse\"\x00\x12p\n" +
	"\rGetPrivileges\x12-.scalardb.cluster.rpc.v1.GetPrivilegesRequest\x1a..scalardb.cluster.rpc.v1.GetPrivilegesResponse\"\x00\x12m\n" +
	"\fCreatePolicy\x12,.scalardb.cluster.rpc.v1.CreatePolicyRequest\x1a-.scalardb.cluster.rpc.v1.CreatePolicyResponse\"\x00\x12m\n" +
	"\fEnablePolicy\x12,.scalardb.cluster.rpc.v1.EnablePolicyRequest\x1a-.scalardb.cluster.rpc.v1.EnablePolicyResponse\"\x00\x12p\n" +
	"\rDisablePolicy\x12-.scalardb.cluster.rpc.v1.DisablePolicyRequest\x1a..scalardb.cluster.rpc.v1.DisablePolicyResponse\"\x00\x12d\n" +
	"\tGetPolicy\x12).scalardb.cluster.rpc.v1.GetPolicyRequest\x1a*.scalardb.cluster.rpc.v1.GetPolicyResponse\"\x00\x12j\n" +
	"\vGetPolicies\x12+.scalardb.cluster.rpc.v1.GetPoliciesRequest\x1a,.scalardb.cluster.rpc.v1.GetPoliciesResponse\"\x00\x12j\n" +
	"\vCreateLevel\x12+.scalardb.cluster.rpc.v1.CreateLevelRequest\x1a,.scalardb.cluster.rpc.v1.CreateLevelResponse\"\x00\x12d\n" +
	"\tDropLevel\x12).scalardb.cluster.rpc.v1.DropLevelRequest\x1a*.scalardb.cluster.rpc.v1.DropLevelResponse\"\x00\x12a\n" +
	"\bGetLevel\x12(.scalardb.cluster.rpc.v1.GetLevelRequest\x1a).scalardb.cluster.rpc.v1.GetLevelResponse\"\x00\x12d\n" +
	"\tGetLevels\x12).scalardb.cluster.rpc.v1.GetLevelsRequest\x1a*.scalardb.cluster.rpc.v1.GetLevelsResponse\"\x00\x12|\n" +
	"\x11CreateCompartment\x121.scalardb.cluster.rpc.v1.CreateCompartmentRequest\x1a2.scalardb.cluster.rpc.v1.CreateCompartmentResponse\"\x00\x12v\n" +
	"\x0fDropCompartment\x12/.scalardb.cluster.rpc.v1.DropCompartmentRequest\x1a0.scalardb.cluster.rpc.v1.DropCompartmentResponse\"\x00\x12s\n" +
	"\x0eGetCompartment\x12..scalardb.cluster.rpc.v1.GetCompartmentRequest\x1a/.scalardb.cluster.rpc.v1.GetCompartmentResponse\"\x00\x12v\n" +
	"\x0fGetCompartments\x12/.scalardb.cluster.rpc.v1.GetCompartmentsRequest\x1a0.scalardb.cluster.rpc.v1.GetCompartmentsResponse\"\x00\x12j\n" +
	"\vCreateGroup\x12+.scalardb.cluster.rpc.v1.CreateGroupRequest\x1a,.scalardb.cluster.rpc.v1.CreateGroupResponse\"\x00\x12d\n" +
	"\tDropGroup\x12).scalardb.cluster.rpc.v1.DropGroupRequest\x1a*.scalardb.cluster.rpc.v1.DropGroupResponse\"\x00\x12a\n" +
	"\bGetGroup\x12(.scalardb.cluster.rpc.v1.GetGroupRequest\x1a).scalardb.cluster.rpc.v1.GetGroupResponse\"\x00\x12d\n" +
	"\tgetGroups\x12).scalardb.cluster.rpc.v1.GetGroupsRequest\x1a*.scalardb.cluster.rpc.v1.GetGroupsResponse\"\x00\x12v\n" +
	"\x0fSetLevelsToUser\x12/.scalardb.cluster.rpc.v1.SetLevelsToUserRequest\x1a0.scalardb.cluster.rpc.v1.SetLevelsToUserResponse\"\x00\x12\x85\x01\n" +
	"\x14AddCompartmentToUser\x124.scalardb.cluster.rpc.v1.AddCompartmentToUserRequest\x1a5.scalardb.cluster.rpc.v1.AddCompartmentToUserResponse\"\x00\x12\x94\x01\n" +
	"\x19RemoveCompartmentFromUser\x129.scalardb.cluster.rpc.v1.RemoveCompartmentFromUserRequest\x1a:.scalardb.cluster.rpc.v1.RemoveCompartmentFromUserResponse\"\x00\x12s\n" +
	"\x0eAddGroupToUser\x12..scalardb.cluster.rpc.v1.AddGroupToUserRequest\x1a/.scalardb.cluster.rpc.v1.AddGroupToUserResponse\"\x00\x12\x82\x01\n" +
	"\x13RemoveGroupFromUser\x123.scalardb.cluster.rpc.v1.RemoveGroupFromUserRequest\x1a4.scalardb.cluster.rpc.v1.RemoveGroupFromUserResponse\"\x00\x12\x8e\x01\n" +
	"\x17DropUserTagInfoFromUser\x127.scalardb.cluster.rpc.v1.DropUserTagInfoFromUserRequest\x1a8.scalardb.cluster.rpc.v1.DropUserTagInfoFromUserResponse\"\x00\x12s\n" +
	"\x0eGetUserTagInfo\x12..scalardb.cluster.rpc.v1.GetUserTagInfoRequest\x1a/.scalardb.cluster.rpc.v1.GetUserTagInfoResponse\"\x00\x12\x88\x01\n" +
	"\x15CreateNamespacePolicy\x125.scalardb.cluster.rpc.v1.CreateNamespacePolicyRequest\x1a6.scalardb.cluster.rpc.v1.CreateNamespacePolicyResponse\"\x00\x12\x88\x01\n" +
	"\x15EnableNamespacePolicy\x125.scalardb.cluster.rpc.v1.EnableNamespacePolicyRequest\x1a6.scalardb.cluster.rpc.v1.EnableNamespacePolicyResponse\"\x00\x12\x8b\x01\n" +
	"\x16DisableNamespacePolicy\x126.scalardb.cluster.rpc.v1.DisableNamespacePolicyRequest\x1a7.scalardb.cluster.rpc.v1.DisableNamespacePolicyResponse\"\x00\x12\x7f\n" +
	"\x12GetNamespacePolicy\x122.scalardb.cluster.rpc.v1.GetNamespacePolicyRequest\x1a3.scalardb.cluster.rpc.v1.GetNamespacePolicyResponse\"\x00\x12\x85\x01\n" +
	"\x14GetNamespacePolicies\x124.scalardb.cluster.rpc.v1.GetNamespacePoliciesRequest\x1a5.scalardb.cluster.rpc.v1.GetNamespacePoliciesResponse\"\x00\x12|\n" +
	"\x11CreateTablePolicy\x121.scalardb.cluster.rpc.v1.CreateTablePolicyRequest\x1a2.scalardb.cluster.rpc.v1.CreateTablePolicyResponse\"\x00\x12|\n" +
	"\x11EnableTablePolicy\x121.scalardb.cluster.rpc.v1.EnableTablePolicyRequest\x1a2.scalardb.cluster.rpc.v1.EnableTablePolicyResponse\"\x00\x12\x7f\n" +
	"\x12DisableTablePolicy\x122.scalardb.cluster.rpc.v1.DisableTablePolicyRequest\x1a3.scalardb.cluster.rpc.v1.DisableTablePolicyResponse\"\x00\x12s\n" +
	"\x0eGetTablePolicy\x12..scalardb.cluster.rpc.v1.GetTablePolicyRequest\x1a/.scalardb.cluster.rpc.v1.GetTablePolicyResponse\"\x00\x12y\n" +
	"\x10GetTablePolicies\x120.scalardb.cluster.rpc.v1.GetTablePoliciesRequest\x1a1.scalardb.cluster.rpc.v1.GetTablePoliciesResponse\"\x00By\n" +
	"\x1ccom.scalar.db.cluster.rpc.v1B\x14ScalarDbClusterProtoP\x01ZAgithub.com/scalar-labs/terraform-provider-scalardb/proto/scalardbb\x06proto3"

var (
	file_proto_scalardb_scalardb_cluster_proto_rawDescOnce sync.Once
	file_proto_scalardb_scalardb_cluster_proto_rawDescData []byte
)

func file_proto_scalardb_scalardb_cluster_proto_rawDescGZIP() []byte {
	file_proto_scalardb_scalardb_cluster_proto_rawDescOnce.Do(func() {
		file_proto_scalardb_scalardb_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scalardb_scalardb_cluster_proto_rawDesc), len(file_proto_scalardb_scalardb_cluster_proto_rawDesc)))
	})
	return file_proto_scalardb_scalardb_cluster_proto_rawDescData
}

var file_proto_scalardb_scalardb_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_proto_scalardb_scalardb_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 220)
var file_proto_scalardb_scalardb_cluster_proto_goTypes = []any{
	(DataType)(0),                                   // 0: scalardb.cluster.rpc.v1.DataType
	(ClusteringOrder)(0),                            // 1: scalardb.cluster.rpc.v1.ClusteringOrder
	(UserOption)(0),                                 // 2: scalardb.cluster.rpc.v1.UserOption
	(Privilege)(0),                                  // 3: scalardb.cluster.rpc.v1.Privilege
	(PolicyState)(0),                                // 4: scalardb.cluster.rpc.v1.PolicyState
	(AccessMode)(0),                                 // 5: scalardb.cluster.rpc.v1.AccessMode
	(Get_GetType)(0),                                // 6: scalardb.cluster.rpc.v1.Get.GetType
	(Scan_ScanType)(0),                              // 7: scalardb.cluster.rpc.v1.Scan.ScanType
	(Scan_Ordering_Order)(0),                        // 8: scalardb.cluster.rpc.v1.Scan.Ordering.Order
	(ConditionalExpression_Operator)(0),             // 9: scalardb.cluster.rpc.v1.ConditionalExpression.Operator
	(Put_PutCondition_PutConditionType)(0),          // 10: scalardb.cluster.rpc.v1.Put.PutCondition.PutConditionType
	(Update_UpdateCondition_UpdateConditionType)(0), // 11: scalardb.cluster.rpc.v1.Update.UpdateCondition.UpdateConditionType
	(Delete_DeleteCondition_DeleteConditionType)(0), // 12: scalardb.cluster.rpc.v1.Delete.DeleteCondition.DeleteConditionType
	(*Column)(nil),                                  // 13: scalardb.cluster.rpc.v1.Column
	(*Key)(nil),                                     // 14: scalardb.cluster.rpc.v1.Key
	(*Conjunction)(nil),                             // 15: scalardb.cluster.rpc.v1.Conjunction
	(*Get)(nil),                                     // 16: scalardb.cluster.rpc.v1.Get
	(*Scan)(nil),                                    // 17: scalardb.cluster.rpc.v1.Scan
	(*ConditionalExpression)(nil),                   // 18: scalardb.cluster.rpc.v1.ConditionalExpression
	(*Put)(nil),                                     // 19: scalardb.cluster.rpc.v1.Put
	(*Insert)(nil),                                  // 20: scalardb.cluster.rpc.v1.Insert
	(*Upsert)(nil),                                  // 21: scalardb.cluster.rpc.v1.Upsert
	(*Update)(nil),                                  // 22: scalardb.cluster.rpc.v1.Update
	(*Delete)(nil),                                  // 23: scalardb.cluster.rpc.v1.Delete
	(*Mutation)(nil),                                // 24: scalardb.cluster.rpc.v1.Mutation
	(*Result)(nil),                                  // 25: scalardb.cluster.rpc.v1.Result
	(*TableMetadata)(nil),                           // 26: scalardb.cluster.rpc.v1.TableMetadata
	(*RequestHeader)(nil),                           // 27: scalardb.cluster.rpc.v1.RequestHeader
	(*BeginRequest)(nil),                            // 28: scalardb.cluster.rpc.v1.BeginRequest
	(*BeginResponse)(nil),                           // 29: scalardb.cluster.rpc.v1.BeginResponse
	(*GetRequest)(nil),                              // 30: scalardb.cluster.rpc.v1.GetRequest
	(*GetResponse)(nil),                             // 31: scalardb.cluster.rpc.v1.GetResponse
	(*ScanRequest)(nil),                             // 32: scalardb.cluster.rpc.v1.ScanRequest
	(*ScanResponse)(nil),                            // 33: scalardb.cluster.rpc.v1.ScanResponse
	(*PutRequest)(nil),                              // 34: scalardb.cluster.rpc.v1.PutRequest
	(*PutResponse)(nil),                             // 35: scalardb.cluster.rpc.v1.PutResponse
	(*InsertRequest)(nil),                           // 36: scalardb.cluster.rpc.v1.InsertRequest
	(*InsertResponse)(nil),                          // 37: scalardb.cluster.rpc.v1.InsertResponse
	(*UpsertRequest)(nil),                           // 38: scalardb.cluster.rpc.v1.UpsertRequest
	(*UpsertResponse)(nil),                          // 39: scalardb.cluster.rpc.v1.UpsertResponse
	(*UpdateRequest)(nil),                           // 40: scalardb.cluster.rpc.v1.UpdateRequest
	(*UpdateResponse)(nil),                          // 41: scalardb.cluster.rpc.v1.UpdateResponse
	(*DeleteRequest)(nil),                           // 42: scalardb.cluster.rpc.v1.DeleteRequest
	(*DeleteResponse)(nil),                          // 43: scalardb.cluster.rpc.v1.DeleteResponse
	(*MutateRequest)(nil),                           // 44: scalardb.cluster.rpc.v1.MutateRequest
	(*MutateResponse)(nil),                          // 45: scalardb.cluster.rpc.v1.MutateResponse
	(*CommitRequest)(nil),                           // 46: scalardb.cluster.rpc.v1.CommitRequest
	(*CommitResponse)(nil),                          // 47: scalardb.cluster.rpc.v1.CommitResponse
	(*RollbackRequest)(nil),                         // 48: scalardb.cluster.rpc.v1.RollbackRequest
	(*RollbackResponse)(nil),                        // 49: scalardb.cluster.rpc.v1.RollbackResponse
	(*JoinRequest)(nil),                             // 50: scalardb.cluster.rpc.v1.JoinRequest
	(*JoinResponse)(nil),                            // 51: scalardb.cluster.rpc.v1.JoinResponse
	(*PrepareRequest)(nil),                          // 52: scalardb.cluster.rpc.v1.PrepareRequest
	(*PrepareResponse)(nil),                         // 53: scalardb.cluster.rpc.v1.PrepareResponse
	(*ValidateRequest)(nil),                         // 54: scalardb.cluster.rpc.v1.ValidateRequest
	(*ValidateResponse)(nil),                        // 55: scalardb.cluster.rpc.v1.ValidateResponse
	(*CreateNamespaceRequest)(nil),                  // 56: scalardb.cluster.rpc.v1.CreateNamespaceRequest
	(*CreateNamespaceResponse)(nil),                 // 57: scalardb.cluster.rpc.v1.CreateNamespaceResponse
	(*DropNamespaceRequest)(nil),                    // 58: scalardb.cluster.rpc.v1.DropNamespaceRequest
	(*DropNamespaceResponse)(nil),                   // 59: scalardb.cluster.rpc.v1.DropNamespaceResponse
	(*NamespaceExistsRequest)(nil),                  // 60: scalardb.cluster.rpc.v1.NamespaceExistsRequest
	(*NamespaceExistsResponse)(nil),                 // 61: scalardb.cluster.rpc.v1.NamespaceExistsResponse
	(*CreateTableRequest)(nil),                      // 62: scalardb.cluster.rpc.v1.CreateTableRequest
	(*CreateTableResponse)(nil),                     // 63: scalardb.cluster.rpc.v1.CreateTableResponse
	(*DropTableRequest)(nil),                        // 64: scalardb.cluster.rpc.v1.DropTableRequest
	(*DropTableResponse)(nil),                       // 65: scalardb.cluster.rpc.v1.DropTableResponse
	(*TruncateTableRequest)(nil),                    // 66: scalardb.cluster.rpc.v1.TruncateTableRequest
	(*TruncateTableResponse)(nil),                   // 67: scalardb.cluster.rpc.v1.TruncateTableResponse
	(*TableExistsRequest)(nil),                      // 68: scalardb.cluster.rpc.v1.TableExistsRequest
	(*TableExistsResponse)(nil),                     // 69: scalardb.cluster.rpc.v1.TableExistsResponse
	(*CreateIndexRequest)(nil),                      // 70: scalardb.cluster.rpc.v1.CreateIndexRequest
	(*CreateIndexResponse)(nil),                     // 71: scalardb.cluster.rpc.v1.CreateIndexResponse
	(*DropIndexRequest)(nil),                        // 72: scalardb.cluster.rpc.v1.DropIndexRequest
	(*DropIndexResponse)(nil),                       // 73: scalardb.cluster.rpc.v1.DropIndexResponse
	(*IndexExistsRequest)(nil),                      // 74: scalardb.cluster.rpc.v1.IndexExistsRequest
	(*IndexExistsResponse)(nil),                     // 75: scalardb.cluster.rpc.v1.IndexExistsResponse
	(*RepairNamespaceRequest)(nil),                  // 76: scalardb.cluster.rpc.v1.RepairNamespaceRequest
	(*RepairNamespaceResponse)(nil),                 // 77: scalardb.cluster.rpc.v1.RepairNamespaceResponse
	(*RepairTableRequest)(nil),                      // 78: scalardb.cluster.rpc.v1.RepairTableRequest
	(*RepairTableResponse)(nil),                     // 79: scalardb.cluster.rpc.v1.RepairTableResponse
	(*AddNewColumnToTableRequest)(nil),              // 80: scalardb.cluster.rpc.v1.AddNewColumnToTableRequest
	(*AddNewColumnToTableResponse)(nil),             // 81: scalardb.cluster.rpc.v1.AddNewColumnToTableResponse
	(*CreateCoordinatorTablesRequest)(nil),          // 82: scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest
	(*CreateCoordinatorTablesResponse)(nil),         // 83: scalardb.cluster.rpc.v1.CreateCoordinatorTablesResponse
	(*DropCoordinatorTablesRequest)(nil),            // 84: scalardb.cluster.rpc.v1.DropCoordinatorTablesRequest
	(*DropCoordinatorTablesResponse)(nil),           // 85: scalardb.cluster.rpc.v1.DropCoordinatorTablesResponse
	(*TruncateCoordinatorTablesRequest)(nil),        // 86: scalardb.cluster.rpc.v1.TruncateCoordinatorTablesRequest
	(*TruncateCoordinatorTablesResponse)(nil),       // 87: scalardb.cluster.rpc.v1.TruncateCoordinatorTablesResponse
	(*CoordinatorTablesExistRequest)(nil),           // 88: scalardb.cluster.rpc.v1.CoordinatorTablesExistRequest
	(*CoordinatorTablesExistResponse)(nil),          // 89: scalardb.cluster.rpc.v1.CoordinatorTablesExistResponse
	(*RepairCoordinatorTablesRequest)(nil),          // 90: scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest
	(*RepairCoordinatorTablesResponse)(nil),         // 91: scalardb.cluster.rpc.v1.RepairCoordinatorTablesResponse
	(*GetTableMetadataRequest)(nil),                 // 92: scalardb.cluster.rpc.v1.GetTableMetadataRequest
	(*GetTableMetadataResponse)(nil),                // 93: scalardb.cluster.rpc.v1.GetTableMetadataResponse
	(*GetNamespaceNamesRequest)(nil),                // 94: scalardb.cluster.rpc.v1.GetNamespaceNamesRequest
	(*GetNamespaceNamesResponse)(nil),               // 95: scalardb.cluster.rpc.v1.GetNamespaceNamesResponse
	(*GetNamespaceTableNamesRequest)(nil),           // 96: scalardb.cluster.rpc.v1.GetNamespaceTableNamesRequest
	(*GetNamespaceTableNamesResponse)(nil),          // 97: scalardb.cluster.rpc.v1.GetNamespaceTableNamesResponse
	(*ImportTableRequest)(nil),                      // 98: scalardb.cluster.rpc.v1.ImportTableRequest
	(*ImportTableResponse)(nil),                     // 99: scalardb.cluster.rpc.v1.ImportTableResponse
	(*UpgradeRequest)(nil),                          // 100: scalardb.cluster.rpc.v1.UpgradeRequest
	(*UpgradeResponse)(nil),                         // 101: scalardb.cluster.rpc.v1.UpgradeResponse
	(*CreateUserRequest)(nil),                       // 102: scalardb.cluster.rpc.v1.CreateUserRequest
	(*CreateUserResponse)(nil),                      // 103: scalardb.cluster.rpc.v1.CreateUserResponse
	(*AlterUserRequest)(nil),                        // 104: scalardb.cluster.rpc.v1.AlterUserRequest
	(*AlterUserResponse)(nil),                       // 105: scalardb.cluster.rpc.v1.AlterUserResponse
	(*DropUserRequest)(nil),                         // 106: scalardb.cluster.rpc.v1.DropUserRequest
	(*DropUserResponse)(nil),                        // 107: scalardb.cluster.rpc.v1.DropUserResponse
	(*GrantRequest)(nil),                            // 108: scalardb.cluster.rpc.v1.GrantRequest
	(*GrantResponse)(nil),                           // 109: scalardb.cluster.rpc.v1.GrantResponse
	(*RevokeRequest)(nil),                           // 110: scalardb.cluster.rpc.v1.RevokeRequest
	(*RevokeResponse)(nil),                          // 111: scalardb.cluster.rpc.v1.RevokeResponse
	(*User)(nil),                                    // 112: scalardb.cluster.rpc.v1.User
	(*GetUserRequest)(nil),                          // 113: scalardb.cluster.rpc.v1.GetUserRequest
	(*GetUserResponse)(nil),                         // 114: scalardb.cluster.rpc.v1.GetUserResponse
	(*GetUsersRequest)(nil),                         // 115: scalardb.cluster.rpc.v1.GetUsersRequest
	(*GetUsersResponse)(nil),                        // 116: scalardb.cluster.rpc.v1.GetUsersResponse
	(*GetCurrentUserRequest)(nil),                   // 117: scalardb.cluster.rpc.v1.GetCurrentUserRequest
	(*GetCurrentUserResponse)(nil),                  // 118: scalardb.cluster.rpc.v1.GetCurrentUserResponse
	(*GetPrivilegesRequest)(nil),                    // 119: scalardb.cluster.rpc.v1.GetPrivilegesRequest
	(*GetPrivilegesResponse)(nil),                   // 120: scalardb.cluster.rpc.v1.GetPrivilegesResponse
	(*CreatePolicyRequest)(nil),                     // 121: scalardb.cluster.rpc.v1.CreatePolicyRequest
	(*CreatePolicyResponse)(nil),                    // 122: scalardb.cluster.rpc.v1.CreatePolicyResponse
	(*EnablePolicyRequest)(nil),                     // 123: scalardb.cluster.rpc.v1.EnablePolicyRequest
	(*EnablePolicyResponse)(nil),                    // 124: scalardb.cluster.rpc.v1.EnablePolicyResponse
	(*DisablePolicyRequest)(nil),                    // 125: scalardb.cluster.rpc.v1.DisablePolicyRequest
	(*DisablePolicyResponse)(nil),                   // 126: scalardb.cluster.rpc.v1.DisablePolicyResponse
	(*GetPolicyRequest)(nil),                        // 127: scalardb.cluster.rpc.v1.GetPolicyRequest
	(*GetPolicyResponse)(nil),                       // 128: scalardb.cluster.rpc.v1.GetPolicyResponse
	(*GetPoliciesRequest)(nil),                      // 129: scalardb.cluster.rpc.v1.GetPoliciesRequest
	(*GetPoliciesResponse)(nil),                     // 130: scalardb.cluster.rpc.v1.GetPoliciesResponse
	(*CreateLevelRequest)(nil),                      // 131: scalardb.cluster.rpc.v1.CreateLevelRequest
	(*CreateLevelResponse)(nil),                     // 132: scalardb.cluster.rpc.v1.CreateLevelResponse
	(*DropLevelRequest)(nil),                        // 133: scalardb.cluster.rpc.v1.DropLevelRequest
	(*DropLevelResponse)(nil),                       // 134: scalardb.cluster.rpc.v1.DropLevelResponse
	(*GetLevelRequest)(nil),                         // 135: scalardb.cluster.rpc.v1.GetLevelRequest
	(*GetLevelResponse)(nil),                        // 136: scalardb.cluster.rpc.v1.GetLevelResponse
	(*GetLevelsRequest)(nil),                        // 137: scalardb.cluster.rpc.v1.GetLevelsRequest
	(*GetLevelsResponse)(nil),                       // 138: scalardb.cluster.rpc.v1.GetLevelsResponse
	(*CreateCompartmentRequest)(nil),                // 139: scalardb.cluster.rpc.v1.CreateCompartmentRequest
	(*CreateCompartmentResponse)(nil),               // 140: scalardb.cluster.rpc.v1.CreateCompartmentResponse
	(*DropCompartmentRequest)(nil),                  // 141: scalardb.cluster.rpc.v1.DropCompartmentRequest
	(*DropCompartmentResponse)(nil),                 // 142: scalardb.cluster.rpc.v1.DropCompartmentResponse
	(*GetCompartmentRequest)(nil),                   // 143: scalardb.cluster.rpc.v1.GetCompartmentRequest
	(*GetCompartmentResponse)(nil),                  // 144: scalardb.cluster.rpc.v1.GetCompartmentResponse
	(*GetCompartmentsRequest)(nil),                  // 145: scalardb.cluster.rpc.v1.GetCompartmentsRequest
	(*GetCompartmentsResponse)(nil),                 // 146: scalardb.cluster.rpc.v1.GetCompartmentsResponse
	(*CreateGroupRequest)(nil),                      // 147: scalardb.cluster.rpc.v1.CreateGroupRequest
	(*CreateGroupResponse)(nil),                     // 148: scalardb.cluster.rpc.v1.CreateGroupResponse
	(*DropGroupRequest)(nil),                        // 149: scalardb.cluster.rpc.v1.DropGroupRequest
	(*DropGroupResponse)(nil),                       // 150: scalardb.cluster.rpc.v1.DropGroupResponse
	(*GetGroupRequest)(nil),                         // 151: scalardb.cluster.rpc.v1.GetGroupRequest
	(*GetGroupResponse)(nil),                        // 152: scalardb.cluster.rpc.v1.GetGroupResponse
	(*GetGroupsRequest)(nil),                        // 153: scalardb.cluster.rpc.v1.GetGroupsRequest
	(*GetGroupsResponse)(nil),                       // 154: scalardb.cluster.rpc.v1.GetGroupsResponse
	(*SetLevelsToUserRequest)(nil),                  // 155: scalardb.cluster.rpc.v1.SetLevelsToUserRequest
	(*SetLevelsToUserResponse)(nil),                 // 156: scalardb.cluster.rpc.v1.SetLevelsToUserResponse
	(*AddCompartmentToUserRequest)(nil),             // 157: scalardb.cluster.rpc.v1.AddCompartmentToUserRequest
	(*AddCompartmentToUserResponse)(nil),            // 158: scalardb.cluster.rpc.v1.AddCompartmentToUserResponse
	(*RemoveCompartmentFromUserRequest)(nil),        // 159: scalardb.cluster.rpc.v1.RemoveCompartmentFromUserRequest
	(*RemoveCompartmentFromUserResponse)(nil),       // 160: scalardb.cluster.rpc.v1.RemoveCompartmentFromUserResponse
	(*AddGroupToUserRequest)(nil),                   // 161: scalardb.cluster.rpc.v1.AddGroupToUserRequest
	(*AddGroupToUserResponse)(nil),                  // 162: scalardb.cluster.rpc.v1.AddGroupToUserResponse
	(*RemoveGroupFromUserRequest)(nil),              // 163: scalardb.cluster.rpc.v1.RemoveGroupFromUserRequest
	(*RemoveGroupFromUserResponse)(nil),             // 164: scalardb.cluster.rpc.v1.RemoveGroupFromUserResponse
	(*DropUserTagInfoFromUserRequest)(nil),          // 165: scalardb.cluster.rpc.v1.DropUserTagInfoFromUserRequest
	(*DropUserTagInfoFromUserResponse)(nil),         // 166: scalardb.cluster.rpc.v1.DropUserTagInfoFromUserResponse
	(*GetUserTagInfoRequest)(nil),                   // 167: scalardb.cluster.rpc.v1.GetUserTagInfoRequest
	(*GetUserTagInfoResponse)(nil),                  // 168: scalardb.cluster.rpc.v1.GetUserTagInfoResponse
	(*CreateNamespacePolicyRequest)(nil),            // 169: scalardb.cluster.rpc.v1.CreateNamespacePolicyRequest
	(*CreateNamespacePolicyResponse)(nil),           // 170: scalardb.cluster.rpc.v1.CreateNamespacePolicyResponse
	(*EnableNamespacePolicyRequest)(nil),            // 171: scalardb.cluster.rpc.v1.EnableNamespacePolicyRequest
	(*EnableNamespacePolicyResponse)(nil),           // 172: scalardb.cluster.rpc.v1.EnableNamespacePolicyResponse
	(*DisableNamespacePolicyRequest)(nil),           // 173: scalardb.cluster.rpc.v1.DisableNamespacePolicyRequest
	(*DisableNamespacePolicyResponse)(nil),          // 174: scalardb.cluster.rpc.v1.DisableNamespacePolicyResponse
	(*GetNamespacePolicyRequest)(nil),               // 175: scalardb.cluster.rpc.v1.GetNamespacePolicyRequest
	(*GetNamespacePolicyResponse)(nil),              // 176: scalardb.cluster.rpc.v1.GetNamespacePolicyResponse
	(*GetNamespacePoliciesRequest)(nil),             // 177: scalardb.cluster.rpc.v1.GetNamespacePoliciesRequest
	(*GetNamespacePoliciesResponse)(nil),            // 178: scalardb.cluster.rpc.v1.GetNamespacePoliciesResponse
	(*CreateTablePolicyRequest)(nil),                // 179: scalardb.cluster.rpc.v1.CreateTablePolicyRequest
	(*CreateTablePolicyResponse)(nil),               // 180: scalardb.cluster.rpc.v1.CreateTablePolicyResponse
	(*EnableTablePolicyRequest)(nil),                // 181: scalardb.cluster.rpc.v1.EnableTablePolicyRequest
	(*EnableTablePolicyResponse)(nil),               // 182: scalardb.cluster.rpc.v1.EnableTablePolicyResponse
	(*DisableTablePolicyRequest)(nil),               // 183: scalardb.cluster.rpc.v1.DisableTablePolicyRequest
	(*DisableTablePolicyResponse)(nil),              // 184: scalardb.cluster.rpc.v1.DisableTablePolicyResponse
	(*GetTablePolicyRequest)(nil),                   // 185: scalardb.cluster.rpc.v1.GetTablePolicyRequest
	(*GetTablePolicyResponse)(nil),                  // 186: scalardb.cluster.rpc.v1.GetTablePolicyResponse
	(*GetTablePoliciesRequest)(nil),                 // 187: scalardb.cluster.rpc.v1.GetTablePoliciesRequest
	(*GetTablePoliciesResponse)(nil),                // 188: scalardb.cluster.rpc.v1.GetTablePoliciesResponse
	(*Policy)(nil),                                  // 189: scalardb.cluster.rpc.v1.Policy
	(*Level)(nil),                                   // 190: scalardb.cluster.rpc.v1.Level
	(*Compartment)(nil),                             // 191: scalardb.cluster.rpc.v1.Compartment
	(*Group)(nil),                                   // 192: scalardb.cluster.rpc.v1.Group
	(*UserTagInfo)(nil),                             // 193: scalardb.cluster.rpc.v1.UserTagInfo
	(*NamespacePolicy)(nil),                         // 194: scalardb.cluster.rpc.v1.NamespacePolicy
	(*TablePolicy)(nil),                             // 195: scalardb.cluster.rpc.v1.TablePolicy
	(*Column_BooleanValue)(nil),                     // 196: scalardb.cluster.rpc.v1.Column.BooleanValue
	(*Column_IntValue)(nil),                         // 197: scalardb.cluster.rpc.v1.Column.IntValue
	(*Column_BigIntValue)(nil),                      // 198: scalardb.cluster.rpc.v1.Column.BigIntValue
	(*Column_FloatValue)(nil),                       // 199: scalardb.cluster.rpc.v1.Column.FloatValue
	(*Column_DoubleValue)(nil),                      // 200: scalardb.cluster.rpc.v1.Column.DoubleValue
	(*Column_TextValue)(nil),                        // 201: scalardb.cluster.rpc.v1.Column.TextValue
	(*Column_BlobValue)(nil),                        // 202: scalardb.cluster.rpc.v1.Column.BlobValue
	(*Column_DateValue)(nil),                        // 203: scalardb.cluster.rpc.v1.Column.DateValue
	(*Column_TimeValue)(nil),                        // 204: scalardb.cluster.rpc.v1.Column.TimeValue
	(*Column_TimestampValue)(nil),                   // 205: scalardb.cluster.rpc.v1.Column.TimestampValue
	(*Column_TimestampTZValue)(nil),                 // 206: scalardb.cluster.rpc.v1.Column.TimestampTZValue
	nil,                                             // 207: scalardb.cluster.rpc.v1.Get.AttributesEntry
	(*Scan_Ordering)(nil),                           // 208: scalardb.cluster.rpc.v1.Scan.Ordering
	nil,                                             // 209: scalardb.cluster.rpc.v1.Scan.AttributesEntry
	(*Put_PutCondition)(nil),                        // 210: scalardb.cluster.rpc.v1.Put.PutCondition
	nil,                                             // 211: scalardb.cluster.rpc.v1.Put.AttributesEntry
	nil,                                             // 212: scalardb.cluster.rpc.v1.Insert.AttributesEntry
	nil,                                             // 213: scalardb.cluster.rpc.v1.Upsert.AttributesEntry
	(*Update_UpdateCondition)(nil),                  // 214: scalardb.cluster.rpc.v1.Update.UpdateCondition
	nil,                                             // 215: scalardb.cluster.rpc.v1.Update.AttributesEntry
	(*Delete_DeleteCondition)(nil),                  // 216: scalardb.cluster.rpc.v1.Delete.DeleteCondition
	nil,                                             // 217: scalardb.cluster.rpc.v1.Delete.AttributesEntry
	nil,                                             // 218: scalardb.cluster.rpc.v1.TableMetadata.ColumnsEntry
	nil,                                             // 219: scalardb.cluster.rpc.v1.TableMetadata.ClusteringOrdersEntry
	nil,                                             // 220: scalardb.cluster.rpc.v1.CreateNamespaceRequest.OptionsEntry
	nil,                                             // 221: scalardb.cluster.rpc.v1.CreateTableRequest.OptionsEntry
	nil,                                             // 222: scalardb.cluster.rpc.v1.CreateIndexRequest.OptionsEntry
	nil,                                             // 223: scalardb.cluster.rpc.v1.RepairNamespaceRequest.OptionsEntry
	nil,                                             // 224: scalardb.cluster.rpc.v1.RepairTableRequest.OptionsEntry
	nil,                                             // 225: scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest.OptionsEntry
	nil,                                             // 226: scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest.OptionsEntry
	nil,                                             // 227: scalardb.cluster.rpc.v1.ImportTableRequest.OptionsEntry
	nil,                                             // 228: scalardb.cluster.rpc.v1.ImportTableRequest.OverrideColumnsTypeEntry
	nil,                                             // 229: scalardb.cluster.rpc.v1.UpgradeRequest.OptionsEntry
	(*UserTagInfo_LevelInfo)(nil),                   // 230: scalardb.cluster.rpc.v1.UserTagInfo.LevelInfo
	(*UserTagInfo_CompartmentInfo)(nil),             // 231: scalardb.cluster.rpc.v1.UserTagInfo.CompartmentInfo
	(*UserTagInfo_GroupInfo)(nil),                   // 232: scalardb.cluster.rpc.v1.UserTagInfo.GroupInfo
}
var file_proto_scalardb_scalardb_cluster_proto_depIdxs = []int32{
	196, // 0: scalardb.cluster.rpc.v1.Column.boolean_value:type_name -> scalardb.cluster.rpc.v1.Column.BooleanValue
	197, // 1: scalardb.cluster.rpc.v1.Column.int_value:type_name -> scalardb.cluster.rpc.v1.Column.IntValue
	198, // 2: scalardb.cluster.rpc.v1.Column.bigint_value:type_name -> scalardb.cluster.rpc.v1.Column.BigIntValue
	199, // 3: scalardb.cluster.rpc.v1.Column.float_value:type_name -> scalardb.cluster.rpc.v1.Column.FloatValue
	200, // 4: scalardb.cluster.rpc.v1.Column.double_value:type_name -> scalardb.cluster.rpc.v1.Column.DoubleValue
	201, // 5: scalardb.cluster.rpc.v1.Column.text_value:type_name -> scalardb.cluster.rpc.v1.Column.TextValue
	202, // 6: scalardb.cluster.rpc.v1.Column.blob_value:type_name -> scalardb.cluster.rpc.v1.Column.BlobValue
	203, // 7: scalardb.cluster.rpc.v1.Column.date_value:type_name -> scalardb.cluster.rpc.v1.Column.DateValue
	204, // 8: scalardb.cluster.rpc.v1.Column.time_value:type_name -> scalardb.cluster.rpc.v1.Column.TimeValue
	205, // 9: scalardb.cluster.rpc.v1.Column.timestamp_value:type_name -> scalardb.cluster.rpc.v1.Column.TimestampValue
	206, // 10: scalardb.cluster.rpc.v1.Column.timestamptz_value:type_name -> scalardb.cluster.rpc.v1.Column.TimestampTZValue
	13,  // 11: scalardb.cluster.rpc.v1.Key.columns:type_name -> scalardb.cluster.rpc.v1.Column
	18,  // 12: scalardb.cluster.rpc.v1.Conjunction.conditional_expressions:type_name -> scalardb.cluster.rpc.v1.ConditionalExpression
	6,   // 13: scalardb.cluster.rpc.v1.Get.get_type:type_name -> scalardb.cluster.rpc.v1.Get.GetType
	14,  // 14: scalardb.cluster.rpc.v1.Get.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 15: scalardb.cluster.rpc.v1.Get.clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	15,  // 16: scalardb.cluster.rpc.v1.Get.conjunctions:type_name -> scalardb.cluster.rpc.v1.Conjunction
	207, // 17: scalardb.cluster.rpc.v1.Get.attributes:type_name -> scalardb.cluster.rpc.v1.Get.AttributesEntry
	7,   // 18: scalardb.cluster.rpc.v1.Scan.scan_type:type_name -> scalardb.cluster.rpc.v1.Scan.ScanType
	14,  // 19: scalardb.cluster.rpc.v1.Scan.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 20: scalardb.cluster.rpc.v1.Scan.start_clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 21: scalardb.cluster.rpc.v1.Scan.end_clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	208, // 22: scalardb.cluster.rpc.v1.Scan.orderings:type_name -> scalardb.cluster.rpc.v1.Scan.Ordering
	15,  // 23: scalardb.cluster.rpc.v1.Scan.conjunctions:type_name -> scalardb.cluster.rpc.v1.Conjunction
	209, // 24: scalardb.cluster.rpc.v1.Scan.attributes:type_name -> scalardb.cluster.rpc.v1.Scan.AttributesEntry
	13,  // 25: scalardb.cluster.rpc.v1.ConditionalExpression.column:type_name -> scalardb.cluster.rpc.v1.Column
	9,   // 26: scalardb.cluster.rpc.v1.ConditionalExpression.operator:type_name -> scalardb.cluster.rpc.v1.ConditionalExpression.Operator
	14,  // 27: scalardb.cluster.rpc.v1.Put.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 28: scalardb.cluster.rpc.v1.Put.clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	13,  // 29: scalardb.cluster.rpc.v1.Put.columns:type_name -> scalardb.cluster.rpc.v1.Column
	210, // 30: scalardb.cluster.rpc.v1.Put.put_condition:type_name -> scalardb.cluster.rpc.v1.Put.PutCondition
	211, // 31: scalardb.cluster.rpc.v1.Put.attributes:type_name -> scalardb.cluster.rpc.v1.Put.AttributesEntry
	14,  // 32: scalardb.cluster.rpc.v1.Insert.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 33: scalardb.cluster.rpc.v1.Insert.clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	13,  // 34: scalardb.cluster.rpc.v1.Insert.columns:type_name -> scalardb.cluster.rpc.v1.Column
	212, // 35: scalardb.cluster.rpc.v1.Insert.attributes:type_name -> scalardb.cluster.rpc.v1.Insert.AttributesEntry
	14,  // 36: scalardb.cluster.rpc.v1.Upsert.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 37: scalardb.cluster.rpc.v1.Upsert.clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	13,  // 38: scalardb.cluster.rpc.v1.Upsert.columns:type_name -> scalardb.cluster.rpc.v1.Column
	213, // 39: scalardb.cluster.rpc.v1.Upsert.attributes:type_name -> scalardb.cluster.rpc.v1.Upsert.AttributesEntry
	14,  // 40: scalardb.cluster.rpc.v1.Update.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 41: scalardb.cluster.rpc.v1.Update.clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	13,  // 42: scalardb.cluster.rpc.v1.Update.columns:type_name -> scalardb.cluster.rpc.v1.Column
	214, // 43: scalardb.cluster.rpc.v1.Update.update_condition:type_name -> scalardb.cluster.rpc.v1.Update.UpdateCondition
	215, // 44: scalardb.cluster.rpc.v1.Update.attributes:type_name -> scalardb.cluster.rpc.v1.Update.AttributesEntry
	14,  // 45: scalardb.cluster.rpc.v1.Delete.partition_key:type_name -> scalardb.cluster.rpc.v1.Key
	14,  // 46: scalardb.cluster.rpc.v1.Delete.clustering_key:type_name -> scalardb.cluster.rpc.v1.Key
	216, // 47: scalardb.cluster.rpc.v1.Delete.delete_condition:type_name -> scalardb.cluster.rpc.v1.Delete.DeleteCondition
	217, // 48: scalardb.cluster.rpc.v1.Delete.attributes:type_name -> scalardb.cluster.rpc.v1.Delete.AttributesEntry
	19,  // 49: scalardb.cluster.rpc.v1.Mutation.put:type_name -> scalardb.cluster.rpc.v1.Put
	23,  // 50: scalardb.cluster.rpc.v1.Mutation.delete:type_name -> scalardb.cluster.rpc.v1.Delete
	20,  // 51: scalardb.cluster.rpc.v1.Mutation.insert:type_name -> scalardb.cluster.rpc.v1.Insert
	21,  // 52: scalardb.cluster.rpc.v1.Mutation.upsert:type_name -> scalardb.cluster.rpc.v1.Upsert
	22,  // 53: scalardb.cluster.rpc.v1.Mutation.update:type_name -> scalardb.cluster.rpc.v1.Update
	13,  // 54: scalardb.cluster.rpc.v1.Result.columns:type_name -> scalardb.cluster.rpc.v1.Column
	218, // 55: scalardb.cluster.rpc.v1.TableMetadata.columns:type_name -> scalardb.cluster.rpc.v1.TableMetadata.ColumnsEntry
	219, // 56: scalardb.cluster.rpc.v1.TableMetadata.clustering_orders:type_name -> scalardb.cluster.rpc.v1.TableMetadata.ClusteringOrdersEntry
	27,  // 57: scalardb.cluster.rpc.v1.BeginRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 58: scalardb.cluster.rpc.v1.GetRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	16,  // 59: scalardb.cluster.rpc.v1.GetRequest.get:type_name -> scalardb.cluster.rpc.v1.Get
	25,  // 60: scalardb.cluster.rpc.v1.GetResponse.result:type_name -> scalardb.cluster.rpc.v1.Result
	27,  // 61: scalardb.cluster.rpc.v1.ScanRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	17,  // 62: scalardb.cluster.rpc.v1.ScanRequest.scan:type_name -> scalardb.cluster.rpc.v1.Scan
	25,  // 63: scalardb.cluster.rpc.v1.ScanResponse.results:type_name -> scalardb.cluster.rpc.v1.Result
	27,  // 64: scalardb.cluster.rpc.v1.PutRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	19,  // 65: scalardb.cluster.rpc.v1.PutRequest.puts:type_name -> scalardb.cluster.rpc.v1.Put
	27,  // 66: scalardb.cluster.rpc.v1.InsertRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	20,  // 67: scalardb.cluster.rpc.v1.InsertRequest.inserts:type_name -> scalardb.cluster.rpc.v1.Insert
	27,  // 68: scalardb.cluster.rpc.v1.UpsertRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	21,  // 69: scalardb.cluster.rpc.v1.UpsertRequest.upserts:type_name -> scalardb.cluster.rpc.v1.Upsert
	27,  // 70: scalardb.cluster.rpc.v1.UpdateRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	22,  // 71: scalardb.cluster.rpc.v1.UpdateRequest.updates:type_name -> scalardb.cluster.rpc.v1.Update
	27,  // 72: scalardb.cluster.rpc.v1.DeleteRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	23,  // 73: scalardb.cluster.rpc.v1.DeleteRequest.deletes:type_name -> scalardb.cluster.rpc.v1.Delete
	27,  // 74: scalardb.cluster.rpc.v1.MutateRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	24,  // 75: scalardb.cluster.rpc.v1.MutateRequest.mutations:type_name -> scalardb.cluster.rpc.v1.Mutation
	27,  // 76: scalardb.cluster.rpc.v1.CommitRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 77: scalardb.cluster.rpc.v1.RollbackRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 78: scalardb.cluster.rpc.v1.JoinRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 79: scalardb.cluster.rpc.v1.PrepareRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 80: scalardb.cluster.rpc.v1.ValidateRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 81: scalardb.cluster.rpc.v1.CreateNamespaceRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	220, // 82: scalardb.cluster.rpc.v1.CreateNamespaceRequest.options:type_name -> scalardb.cluster.rpc.v1.CreateNamespaceRequest.OptionsEntry
	27,  // 83: scalardb.cluster.rpc.v1.DropNamespaceRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 84: scalardb.cluster.rpc.v1.NamespaceExistsRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 85: scalardb.cluster.rpc.v1.CreateTableRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	26,  // 86: scalardb.cluster.rpc.v1.CreateTableRequest.table_metadata:type_name -> scalardb.cluster.rpc.v1.TableMetadata
	221, // 87: scalardb.cluster.rpc.v1.CreateTableRequest.options:type_name -> scalardb.cluster.rpc.v1.CreateTableRequest.OptionsEntry
	27,  // 88: scalardb.cluster.rpc.v1.DropTableRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 89: scalardb.cluster.rpc.v1.TruncateTableRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 90: scalardb.cluster.rpc.v1.TableExistsRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 91: scalardb.cluster.rpc.v1.CreateIndexRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	222, // 92: scalardb.cluster.rpc.v1.CreateIndexRequest.options:type_name -> scalardb.cluster.rpc.v1.CreateIndexRequest.OptionsEntry
	27,  // 93: scalardb.cluster.rpc.v1.DropIndexRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 94: scalardb.cluster.rpc.v1.IndexExistsRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 95: scalardb.cluster.rpc.v1.RepairNamespaceRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	223, // 96: scalardb.cluster.rpc.v1.RepairNamespaceRequest.options:type_name -> scalardb.cluster.rpc.v1.RepairNamespaceRequest.OptionsEntry
	27,  // 97: scalardb.cluster.rpc.v1.RepairTableRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	26,  // 98: scalardb.cluster.rpc.v1.RepairTableRequest.table_metadata:type_name -> scalardb.cluster.rpc.v1.TableMetadata
	224, // 99: scalardb.cluster.rpc.v1.RepairTableRequest.options:type_name -> scalardb.cluster.rpc.v1.RepairTableRequest.OptionsEntry
	27,  // 100: scalardb.cluster.rpc.v1.AddNewColumnToTableRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	0,   // 101: scalardb.cluster.rpc.v1.AddNewColumnToTableRequest.column_data_type:type_name -> scalardb.cluster.rpc.v1.DataType
	27,  // 102: scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	225, // 103: scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest.options:type_name -> scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest.OptionsEntry
	27,  // 104: scalardb.cluster.rpc.v1.DropCoordinatorTablesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 105: scalardb.cluster.rpc.v1.TruncateCoordinatorTablesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 106: scalardb.cluster.rpc.v1.CoordinatorTablesExistRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 107: scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	226, // 108: scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest.options:type_name -> scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest.OptionsEntry
	27,  // 109: scalardb.cluster.rpc.v1.GetTableMetadataRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	26,  // 110: scalardb.cluster.rpc.v1.GetTableMetadataResponse.table_metadata:type_name -> scalardb.cluster.rpc.v1.TableMetadata
	27,  // 111: scalardb.cluster.rpc.v1.GetNamespaceNamesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 112: scalardb.cluster.rpc.v1.GetNamespaceTableNamesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 113: scalardb.cluster.rpc.v1.ImportTableRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	227, // 114: scalardb.cluster.rpc.v1.ImportTableRequest.options:type_name -> scalardb.cluster.rpc.v1.ImportTableRequest.OptionsEntry
	228, // 115: scalardb.cluster.rpc.v1.ImportTableRequest.override_columns_type:type_name -> scalardb.cluster.rpc.v1.ImportTableRequest.OverrideColumnsTypeEntry
	27,  // 116: scalardb.cluster.rpc.v1.UpgradeRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	229, // 117: scalardb.cluster.rpc.v1.UpgradeRequest.options:type_name -> scalardb.cluster.rpc.v1.UpgradeRequest.OptionsEntry
	27,  // 118: scalardb.cluster.rpc.v1.CreateUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	2,   // 119: scalardb.cluster.rpc.v1.CreateUserRequest.user_options:type_name -> scalardb.cluster.rpc.v1.UserOption
	27,  // 120: scalardb.cluster.rpc.v1.AlterUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	2,   // 121: scalardb.cluster.rpc.v1.AlterUserRequest.user_options:type_name -> scalardb.cluster.rpc.v1.UserOption
	27,  // 122: scalardb.cluster.rpc.v1.DropUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 123: scalardb.cluster.rpc.v1.GrantRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	3,   // 124: scalardb.cluster.rpc.v1.GrantRequest.privileges:type_name -> scalardb.cluster.rpc.v1.Privilege
	27,  // 125: scalardb.cluster.rpc.v1.RevokeRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	3,   // 126: scalardb.cluster.rpc.v1.RevokeRequest.privileges:type_name -> scalardb.cluster.rpc.v1.Privilege
	27,  // 127: scalardb.cluster.rpc.v1.GetUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	112, // 128: scalardb.cluster.rpc.v1.GetUserResponse.user:type_name -> scalardb.cluster.rpc.v1.User
	27,  // 129: scalardb.cluster.rpc.v1.GetUsersRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	112, // 130: scalardb.cluster.rpc.v1.GetUsersResponse.users:type_name -> scalardb.cluster.rpc.v1.User
	27,  // 131: scalardb.cluster.rpc.v1.GetCurrentUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	112, // 132: scalardb.cluster.rpc.v1.GetCurrentUserResponse.user:type_name -> scalardb.cluster.rpc.v1.User
	27,  // 133: scalardb.cluster.rpc.v1.GetPrivilegesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	3,   // 134: scalardb.cluster.rpc.v1.GetPrivilegesResponse.privileges:type_name -> scalardb.cluster.rpc.v1.Privilege
	27,  // 135: scalardb.cluster.rpc.v1.CreatePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 136: scalardb.cluster.rpc.v1.EnablePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 137: scalardb.cluster.rpc.v1.DisablePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 138: scalardb.cluster.rpc.v1.GetPolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	189, // 139: scalardb.cluster.rpc.v1.GetPolicyResponse.policy:type_name -> scalardb.cluster.rpc.v1.Policy
	27,  // 140: scalardb.cluster.rpc.v1.GetPoliciesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	189, // 141: scalardb.cluster.rpc.v1.GetPoliciesResponse.policies:type_name -> scalardb.cluster.rpc.v1.Policy
	27,  // 142: scalardb.cluster.rpc.v1.CreateLevelRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 143: scalardb.cluster.rpc.v1.DropLevelRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 144: scalardb.cluster.rpc.v1.GetLevelRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	190, // 145: scalardb.cluster.rpc.v1.GetLevelResponse.level:type_name -> scalardb.cluster.rpc.v1.Level
	27,  // 146: scalardb.cluster.rpc.v1.GetLevelsRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	190, // 147: scalardb.cluster.rpc.v1.GetLevelsResponse.levels:type_name -> scalardb.cluster.rpc.v1.Level
	27,  // 148: scalardb.cluster.rpc.v1.CreateCompartmentRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 149: scalardb.cluster.rpc.v1.DropCompartmentRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 150: scalardb.cluster.rpc.v1.GetCompartmentRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	191, // 151: scalardb.cluster.rpc.v1.GetCompartmentResponse.compartment:type_name -> scalardb.cluster.rpc.v1.Compartment
	27,  // 152: scalardb.cluster.rpc.v1.GetCompartmentsRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	191, // 153: scalardb.cluster.rpc.v1.GetCompartmentsResponse.compartments:type_name -> scalardb.cluster.rpc.v1.Compartment
	27,  // 154: scalardb.cluster.rpc.v1.CreateGroupRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 155: scalardb.cluster.rpc.v1.DropGroupRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 156: scalardb.cluster.rpc.v1.GetGroupRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	192, // 157: scalardb.cluster.rpc.v1.GetGroupResponse.group:type_name -> scalardb.cluster.rpc.v1.Group
	27,  // 158: scalardb.cluster.rpc.v1.GetGroupsRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	192, // 159: scalardb.cluster.rpc.v1.GetGroupsResponse.groups:type_name -> scalardb.cluster.rpc.v1.Group
	27,  // 160: scalardb.cluster.rpc.v1.SetLevelsToUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 161: scalardb.cluster.rpc.v1.AddCompartmentToUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	5,   // 162: scalardb.cluster.rpc.v1.AddCompartmentToUserRequest.access_mode:type_name -> scalardb.cluster.rpc.v1.AccessMode
	27,  // 163: scalardb.cluster.rpc.v1.RemoveCompartmentFromUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 164: scalardb.cluster.rpc.v1.AddGroupToUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	5,   // 165: scalardb.cluster.rpc.v1.AddGroupToUserRequest.access_mode:type_name -> scalardb.cluster.rpc.v1.AccessMode
	27,  // 166: scalardb.cluster.rpc.v1.RemoveGroupFromUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 167: scalardb.cluster.rpc.v1.DropUserTagInfoFromUserRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 168: scalardb.cluster.rpc.v1.GetUserTagInfoRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	193, // 169: scalardb.cluster.rpc.v1.GetUserTagInfoResponse.user_tag_info:type_name -> scalardb.cluster.rpc.v1.UserTagInfo
	27,  // 170: scalardb.cluster.rpc.v1.CreateNamespacePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 171: scalardb.cluster.rpc.v1.EnableNamespacePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 172: scalardb.cluster.rpc.v1.DisableNamespacePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 173: scalardb.cluster.rpc.v1.GetNamespacePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	194, // 174: scalardb.cluster.rpc.v1.GetNamespacePolicyResponse.namespace_policy:type_name -> scalardb.cluster.rpc.v1.NamespacePolicy
	27,  // 175: scalardb.cluster.rpc.v1.GetNamespacePoliciesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	194, // 176: scalardb.cluster.rpc.v1.GetNamespacePoliciesResponse.namespace_policies:type_name -> scalardb.cluster.rpc.v1.NamespacePolicy
	27,  // 177: scalardb.cluster.rpc.v1.CreateTablePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 178: scalardb.cluster.rpc.v1.EnableTablePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 179: scalardb.cluster.rpc.v1.DisableTablePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	27,  // 180: scalardb.cluster.rpc.v1.GetTablePolicyRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	195, // 181: scalardb.cluster.rpc.v1.GetTablePolicyResponse.table_policy:type_name -> scalardb.cluster.rpc.v1.TablePolicy
	27,  // 182: scalardb.cluster.rpc.v1.GetTablePoliciesRequest.request_header:type_name -> scalardb.cluster.rpc.v1.RequestHeader
	195, // 183: scalardb.cluster.rpc.v1.GetTablePoliciesResponse.table_policies:type_name -> scalardb.cluster.rpc.v1.TablePolicy
	4,   // 184: scalardb.cluster.rpc.v1.Policy.state:type_name -> scalardb.cluster.rpc.v1.PolicyState
	230, // 185: scalardb.cluster.rpc.v1.UserTagInfo.level_info:type_name -> scalardb.cluster.rpc.v1.UserTagInfo.LevelInfo
	231, // 186: scalardb.cluster.rpc.v1.UserTagInfo.compartment_info:type_name -> scalardb.cluster.rpc.v1.UserTagInfo.CompartmentInfo
	232, // 187: scalardb.cluster.rpc.v1.UserTagInfo.group_info:type_name -> scalardb.cluster.rpc.v1.UserTagInfo.GroupInfo
	4,   // 188: scalardb.cluster.rpc.v1.NamespacePolicy.state:type_name -> scalardb.cluster.rpc.v1.PolicyState
	4,   // 189: scalardb.cluster.rpc.v1.TablePolicy.state:type_name -> scalardb.cluster.rpc.v1.PolicyState
	8,   // 190: scalardb.cluster.rpc.v1.Scan.Ordering.order:type_name -> scalardb.cluster.rpc.v1.Scan.Ordering.Order
	10,  // 191: scalardb.cluster.rpc.v1.Put.PutCondition.put_condition_type:type_name -> scalardb.cluster.rpc.v1.Put.PutCondition.PutConditionType
	18,  // 192: scalardb.cluster.rpc.v1.Put.PutCondition.conditional_expressions:type_name -> scalardb.cluster.rpc.v1.ConditionalExpression
	11,  // 193: scalardb.cluster.rpc.v1.Update.UpdateCondition.update_condition_type:type_name -> scalardb.cluster.rpc.v1.Update.UpdateCondition.UpdateConditionType
	18,  // 194: scalardb.cluster.rpc.v1.Update.UpdateCondition.conditional_expressions:type_name -> scalardb.cluster.rpc.v1.ConditionalExpression
	12,  // 195: scalardb.cluster.rpc.v1.Delete.DeleteCondition.delete_condition_type:type_name -> scalardb.cluster.rpc.v1.Delete.DeleteCondition.DeleteConditionType
	18,  // 196: scalardb.cluster.rpc.v1.Delete.DeleteCondition.conditional_expressions:type_name -> scalardb.cluster.rpc.v1.ConditionalExpression
	0,   // 197: scalardb.cluster.rpc.v1.TableMetadata.ColumnsEntry.value:type_name -> scalardb.cluster.rpc.v1.DataType
	1,   // 198: scalardb.cluster.rpc.v1.TableMetadata.ClusteringOrdersEntry.value:type_name -> scalardb.cluster.rpc.v1.ClusteringOrder
	0,   // 199: scalardb.cluster.rpc.v1.ImportTableRequest.OverrideColumnsTypeEntry.value:type_name -> scalardb.cluster.rpc.v1.DataType
	28,  // 200: scalardb.cluster.rpc.v1.DistributedTransaction.Begin:input_type -> scalardb.cluster.rpc.v1.BeginRequest
	30,  // 201: scalardb.cluster.rpc.v1.DistributedTransaction.Get:input_type -> scalardb.cluster.rpc.v1.GetRequest
	32,  // 202: scalardb.cluster.rpc.v1.DistributedTransaction.Scan:input_type -> scalardb.cluster.rpc.v1.ScanRequest
	34,  // 203: scalardb.cluster.rpc.v1.DistributedTransaction.Put:input_type -> scalardb.cluster.rpc.v1.PutRequest
	36,  // 204: scalardb.cluster.rpc.v1.DistributedTransaction.Insert:input_type -> scalardb.cluster.rpc.v1.InsertRequest
	38,  // 205: scalardb.cluster.rpc.v1.DistributedTransaction.Upsert:input_type -> scalardb.cluster.rpc.v1.UpsertRequest
	40,  // 206: scalardb.cluster.rpc.v1.DistributedTransaction.Update:input_type -> scalardb.cluster.rpc.v1.UpdateRequest
	42,  // 207: scalardb.cluster.rpc.v1.DistributedTransaction.Delete:input_type -> scalardb.cluster.rpc.v1.DeleteRequest
	44,  // 208: scalardb.cluster.rpc.v1.DistributedTransaction.Mutate:input_type -> scalardb.cluster.rpc.v1.MutateRequest
	46,  // 209: scalardb.cluster.rpc.v1.DistributedTransaction.Commit:input_type -> scalardb.cluster.rpc.v1.CommitRequest
	48,  // 210: scalardb.cluster.rpc.v1.DistributedTransaction.Rollback:input_type -> scalardb.cluster.rpc.v1.RollbackRequest
	28,  // 211: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Begin:input_type -> scalardb.cluster.rpc.v1.BeginRequest
	50,  // 212: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Join:input_type -> scalardb.cluster.rpc.v1.JoinRequest
	30,  // 213: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Get:input_type -> scalardb.cluster.rpc.v1.GetRequest
	32,  // 214: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Scan:input_type -> scalardb.cluster.rpc.v1.ScanRequest
	34,  // 215: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Put:input_type -> scalardb.cluster.rpc.v1.PutRequest
	36,  // 216: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Insert:input_type -> scalardb.cluster.rpc.v1.InsertRequest
	38,  // 217: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Upsert:input_type -> scalardb.cluster.rpc.v1.UpsertRequest
	40,  // 218: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Update:input_type -> scalardb.cluster.rpc.v1.UpdateRequest
	42,  // 219: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Delete:input_type -> scalardb.cluster.rpc.v1.DeleteRequest
	44,  // 220: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Mutate:input_type -> scalardb.cluster.rpc.v1.MutateRequest
	52,  // 221: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Prepare:input_type -> scalardb.cluster.rpc.v1.PrepareRequest
	54,  // 222: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Validate:input_type -> scalardb.cluster.rpc.v1.ValidateRequest
	46,  // 223: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Commit:input_type -> scalardb.cluster.rpc.v1.CommitRequest
	48,  // 224: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Rollback:input_type -> scalardb.cluster.rpc.v1.RollbackRequest
	56,  // 225: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateNamespace:input_type -> scalardb.cluster.rpc.v1.CreateNamespaceRequest
	58,  // 226: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropNamespace:input_type -> scalardb.cluster.rpc.v1.DropNamespaceRequest
	60,  // 227: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.NamespaceExists:input_type -> scalardb.cluster.rpc.v1.NamespaceExistsRequest
	62,  // 228: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateTable:input_type -> scalardb.cluster.rpc.v1.CreateTableRequest
	64,  // 229: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropTable:input_type -> scalardb.cluster.rpc.v1.DropTableRequest
	66,  // 230: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.TruncateTable:input_type -> scalardb.cluster.rpc.v1.TruncateTableRequest
	68,  // 231: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.TableExists:input_type -> scalardb.cluster.rpc.v1.TableExistsRequest
	70,  // 232: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateIndex:input_type -> scalardb.cluster.rpc.v1.CreateIndexRequest
	72,  // 233: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropIndex:input_type -> scalardb.cluster.rpc.v1.DropIndexRequest
	74,  // 234: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.IndexExists:input_type -> scalardb.cluster.rpc.v1.IndexExistsRequest
	76,  // 235: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RepairNamespace:input_type -> scalardb.cluster.rpc.v1.RepairNamespaceRequest
	78,  // 236: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RepairTable:input_type -> scalardb.cluster.rpc.v1.RepairTableRequest
	80,  // 237: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AddNewColumnToTable:input_type -> scalardb.cluster.rpc.v1.AddNewColumnToTableRequest
	82,  // 238: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateCoordinatorTables:input_type -> scalardb.cluster.rpc.v1.CreateCoordinatorTablesRequest
	84,  // 239: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropCoordinatorTables:input_type -> scalardb.cluster.rpc.v1.DropCoordinatorTablesRequest
	86,  // 240: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.TruncateCoordinatorTables:input_type -> scalardb.cluster.rpc.v1.TruncateCoordinatorTablesRequest
	88,  // 241: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CoordinatorTablesExist:input_type -> scalardb.cluster.rpc.v1.CoordinatorTablesExistRequest
	90,  // 242: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RepairCoordinatorTables:input_type -> scalardb.cluster.rpc.v1.RepairCoordinatorTablesRequest
	92,  // 243: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetTableMetadata:input_type -> scalardb.cluster.rpc.v1.GetTableMetadataRequest
	94,  // 244: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespaceNames:input_type -> scalardb.cluster.rpc.v1.GetNamespaceNamesRequest
	96,  // 245: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespaceTableNames:input_type -> scalardb.cluster.rpc.v1.GetNamespaceTableNamesRequest
	98,  // 246: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.ImportTable:input_type -> scalardb.cluster.rpc.v1.ImportTableRequest
	100, // 247: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.Upgrade:input_type -> scalardb.cluster.rpc.v1.UpgradeRequest
	102, // 248: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateUser:input_type -> scalardb.cluster.rpc.v1.CreateUserRequest
	104, // 249: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AlterUser:input_type -> scalardb.cluster.rpc.v1.AlterUserRequest
	106, // 250: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropUser:input_type -> scalardb.cluster.rpc.v1.DropUserRequest
	108, // 251: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.Grant:input_type -> scalardb.cluster.rpc.v1.GrantRequest
	110, // 252: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.Revoke:input_type -> scalardb.cluster.rpc.v1.RevokeRequest
	113, // 253: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetUser:input_type -> scalardb.cluster.rpc.v1.GetUserRequest
	115, // 254: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetUsers:input_type -> scalardb.cluster.rpc.v1.GetUsersRequest
	117, // 255: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetCurrentUser:input_type -> scalardb.cluster.rpc.v1.GetCurrentUserRequest
	119, // 256: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetPrivileges:input_type -> scalardb.cluster.rpc.v1.GetPrivilegesRequest
	121, // 257: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreatePolicy:input_type -> scalardb.cluster.rpc.v1.CreatePolicyRequest
	123, // 258: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.EnablePolicy:input_type -> scalardb.cluster.rpc.v1.EnablePolicyRequest
	125, // 259: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DisablePolicy:input_type -> scalardb.cluster.rpc.v1.DisablePolicyRequest
	127, // 260: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetPolicy:input_type -> scalardb.cluster.rpc.v1.GetPolicyRequest
	129, // 261: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetPolicies:input_type -> scalardb.cluster.rpc.v1.GetPoliciesRequest
	131, // 262: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateLevel:input_type -> scalardb.cluster.rpc.v1.CreateLevelRequest
	133, // 263: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropLevel:input_type -> scalardb.cluster.rpc.v1.DropLevelRequest
	135, // 264: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetLevel:input_type -> scalardb.cluster.rpc.v1.GetLevelRequest
	137, // 265: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetLevels:input_type -> scalardb.cluster.rpc.v1.GetLevelsRequest
	139, // 266: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateCompartment:input_type -> scalardb.cluster.rpc.v1.CreateCompartmentRequest
	141, // 267: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropCompartment:input_type -> scalardb.cluster.rpc.v1.DropCompartmentRequest
	143, // 268: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetCompartment:input_type -> scalardb.cluster.rpc.v1.GetCompartmentRequest
	145, // 269: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetCompartments:input_type -> scalardb.cluster.rpc.v1.GetCompartmentsRequest
	147, // 270: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateGroup:input_type -> scalardb.cluster.rpc.v1.CreateGroupRequest
	149, // 271: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropGroup:input_type -> scalardb.cluster.rpc.v1.DropGroupRequest
	151, // 272: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetGroup:input_type -> scalardb.cluster.rpc.v1.GetGroupRequest
	153, // 273: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.getGroups:input_type -> scalardb.cluster.rpc.v1.GetGroupsRequest
	155, // 274: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.SetLevelsToUser:input_type -> scalardb.cluster.rpc.v1.SetLevelsToUserRequest
	157, // 275: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AddCompartmentToUser:input_type -> scalardb.cluster.rpc.v1.AddCompartmentToUserRequest
	159, // 276: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RemoveCompartmentFromUser:input_type -> scalardb.cluster.rpc.v1.RemoveCompartmentFromUserRequest
	161, // 277: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AddGroupToUser:input_type -> scalardb.cluster.rpc.v1.AddGroupToUserRequest
	163, // 278: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RemoveGroupFromUser:input_type -> scalardb.cluster.rpc.v1.RemoveGroupFromUserRequest
	165, // 279: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropUserTagInfoFromUser:input_type -> scalardb.cluster.rpc.v1.DropUserTagInfoFromUserRequest
	167, // 280: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetUserTagInfo:input_type -> scalardb.cluster.rpc.v1.GetUserTagInfoRequest
	169, // 281: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateNamespacePolicy:input_type -> scalardb.cluster.rpc.v1.CreateNamespacePolicyRequest
	171, // 282: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.EnableNamespacePolicy:input_type -> scalardb.cluster.rpc.v1.EnableNamespacePolicyRequest
	173, // 283: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DisableNamespacePolicy:input_type -> scalardb.cluster.rpc.v1.DisableNamespacePolicyRequest
	175, // 284: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespacePolicy:input_type -> scalardb.cluster.rpc.v1.GetNamespacePolicyRequest
	177, // 285: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespacePolicies:input_type -> scalardb.cluster.rpc.v1.GetNamespacePoliciesRequest
	179, // 286: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateTablePolicy:input_type -> scalardb.cluster.rpc.v1.CreateTablePolicyRequest
	181, // 287: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.EnableTablePolicy:input_type -> scalardb.cluster.rpc.v1.EnableTablePolicyRequest
	183, // 288: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DisableTablePolicy:input_type -> scalardb.cluster.rpc.v1.DisableTablePolicyRequest
	185, // 289: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetTablePolicy:input_type -> scalardb.cluster.rpc.v1.GetTablePolicyRequest
	187, // 290: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetTablePolicies:input_type -> scalardb.cluster.rpc.v1.GetTablePoliciesRequest
	29,  // 291: scalardb.cluster.rpc.v1.DistributedTransaction.Begin:output_type -> scalardb.cluster.rpc.v1.BeginResponse
	31,  // 292: scalardb.cluster.rpc.v1.DistributedTransaction.Get:output_type -> scalardb.cluster.rpc.v1.GetResponse
	33,  // 293: scalardb.cluster.rpc.v1.DistributedTransaction.Scan:output_type -> scalardb.cluster.rpc.v1.ScanResponse
	35,  // 294: scalardb.cluster.rpc.v1.DistributedTransaction.Put:output_type -> scalardb.cluster.rpc.v1.PutResponse
	37,  // 295: scalardb.cluster.rpc.v1.DistributedTransaction.Insert:output_type -> scalardb.cluster.rpc.v1.InsertResponse
	39,  // 296: scalardb.cluster.rpc.v1.DistributedTransaction.Upsert:output_type -> scalardb.cluster.rpc.v1.UpsertResponse
	41,  // 297: scalardb.cluster.rpc.v1.DistributedTransaction.Update:output_type -> scalardb.cluster.rpc.v1.UpdateResponse
	43,  // 298: scalardb.cluster.rpc.v1.DistributedTransaction.Delete:output_type -> scalardb.cluster.rpc.v1.DeleteResponse
	45,  // 299: scalardb.cluster.rpc.v1.DistributedTransaction.Mutate:output_type -> scalardb.cluster.rpc.v1.MutateResponse
	47,  // 300: scalardb.cluster.rpc.v1.DistributedTransaction.Commit:output_type -> scalardb.cluster.rpc.v1.CommitResponse
	49,  // 301: scalardb.cluster.rpc.v1.DistributedTransaction.Rollback:output_type -> scalardb.cluster.rpc.v1.RollbackResponse
	29,  // 302: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Begin:output_type -> scalardb.cluster.rpc.v1.BeginResponse
	51,  // 303: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Join:output_type -> scalardb.cluster.rpc.v1.JoinResponse
	31,  // 304: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Get:output_type -> scalardb.cluster.rpc.v1.GetResponse
	33,  // 305: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Scan:output_type -> scalardb.cluster.rpc.v1.ScanResponse
	35,  // 306: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Put:output_type -> scalardb.cluster.rpc.v1.PutResponse
	37,  // 307: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Insert:output_type -> scalardb.cluster.rpc.v1.InsertResponse
	39,  // 308: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Upsert:output_type -> scalardb.cluster.rpc.v1.UpsertResponse
	41,  // 309: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Update:output_type -> scalardb.cluster.rpc.v1.UpdateResponse
	43,  // 310: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Delete:output_type -> scalardb.cluster.rpc.v1.DeleteResponse
	45,  // 311: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Mutate:output_type -> scalardb.cluster.rpc.v1.MutateResponse
	53,  // 312: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Prepare:output_type -> scalardb.cluster.rpc.v1.PrepareResponse
	55,  // 313: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Validate:output_type -> scalardb.cluster.rpc.v1.ValidateResponse
	47,  // 314: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Commit:output_type -> scalardb.cluster.rpc.v1.CommitResponse
	49,  // 315: scalardb.cluster.rpc.v1.TwoPhaseCommitTransaction.Rollback:output_type -> scalardb.cluster.rpc.v1.RollbackResponse
	57,  // 316: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateNamespace:output_type -> scalardb.cluster.rpc.v1.CreateNamespaceResponse
	59,  // 317: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropNamespace:output_type -> scalardb.cluster.rpc.v1.DropNamespaceResponse
	61,  // 318: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.NamespaceExists:output_type -> scalardb.cluster.rpc.v1.NamespaceExistsResponse
	63,  // 319: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateTable:output_type -> scalardb.cluster.rpc.v1.CreateTableResponse
	65,  // 320: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropTable:output_type -> scalardb.cluster.rpc.v1.DropTableResponse
	67,  // 321: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.TruncateTable:output_type -> scalardb.cluster.rpc.v1.TruncateTableResponse
	69,  // 322: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.TableExists:output_type -> scalardb.cluster.rpc.v1.TableExistsResponse
	71,  // 323: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateIndex:output_type -> scalardb.cluster.rpc.v1.CreateIndexResponse
	73,  // 324: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropIndex:output_type -> scalardb.cluster.rpc.v1.DropIndexResponse
	75,  // 325: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.IndexExists:output_type -> scalardb.cluster.rpc.v1.IndexExistsResponse
	77,  // 326: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RepairNamespace:output_type -> scalardb.cluster.rpc.v1.RepairNamespaceResponse
	79,  // 327: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RepairTable:output_type -> scalardb.cluster.rpc.v1.RepairTableResponse
	81,  // 328: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AddNewColumnToTable:output_type -> scalardb.cluster.rpc.v1.AddNewColumnToTableResponse
	83,  // 329: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateCoordinatorTables:output_type -> scalardb.cluster.rpc.v1.CreateCoordinatorTablesResponse
	85,  // 330: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropCoordinatorTables:output_type -> scalardb.cluster.rpc.v1.DropCoordinatorTablesResponse
	87,  // 331: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.TruncateCoordinatorTables:output_type -> scalardb.cluster.rpc.v1.TruncateCoordinatorTablesResponse
	89,  // 332: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CoordinatorTablesExist:output_type -> scalardb.cluster.rpc.v1.CoordinatorTablesExistResponse
	91,  // 333: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RepairCoordinatorTables:output_type -> scalardb.cluster.rpc.v1.RepairCoordinatorTablesResponse
	93,  // 334: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetTableMetadata:output_type -> scalardb.cluster.rpc.v1.GetTableMetadataResponse
	95,  // 335: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespaceNames:output_type -> scalardb.cluster.rpc.v1.GetNamespaceNamesResponse
	97,  // 336: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespaceTableNames:output_type -> scalardb.cluster.rpc.v1.GetNamespaceTableNamesResponse
	99,  // 337: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.ImportTable:output_type -> scalardb.cluster.rpc.v1.ImportTableResponse
	101, // 338: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.Upgrade:output_type -> scalardb.cluster.rpc.v1.UpgradeResponse
	103, // 339: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateUser:output_type -> scalardb.cluster.rpc.v1.CreateUserResponse
	105, // 340: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AlterUser:output_type -> scalardb.cluster.rpc.v1.AlterUserResponse
	107, // 341: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropUser:output_type -> scalardb.cluster.rpc.v1.DropUserResponse
	109, // 342: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.Grant:output_type -> scalardb.cluster.rpc.v1.GrantResponse
	111, // 343: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.Revoke:output_type -> scalardb.cluster.rpc.v1.RevokeResponse
	114, // 344: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetUser:output_type -> scalardb.cluster.rpc.v1.GetUserResponse
	116, // 345: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetUsers:output_type -> scalardb.cluster.rpc.v1.GetUsersResponse
	118, // 346: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetCurrentUser:output_type -> scalardb.cluster.rpc.v1.GetCurrentUserResponse
	120, // 347: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetPrivileges:output_type -> scalardb.cluster.rpc.v1.GetPrivilegesResponse
	122, // 348: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreatePolicy:output_type -> scalardb.cluster.rpc.v1.CreatePolicyResponse
	124, // 349: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.EnablePolicy:output_type -> scalardb.cluster.rpc.v1.EnablePolicyResponse
	126, // 350: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DisablePolicy:output_type -> scalardb.cluster.rpc.v1.DisablePolicyResponse
	128, // 351: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetPolicy:output_type -> scalardb.cluster.rpc.v1.GetPolicyResponse
	130, // 352: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetPolicies:output_type -> scalardb.cluster.rpc.v1.GetPoliciesResponse
	132, // 353: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateLevel:output_type -> scalardb.cluster.rpc.v1.CreateLevelResponse
	134, // 354: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropLevel:output_type -> scalardb.cluster.rpc.v1.DropLevelResponse
	136, // 355: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetLevel:output_type -> scalardb.cluster.rpc.v1.GetLevelResponse
	138, // 356: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetLevels:output_type -> scalardb.cluster.rpc.v1.GetLevelsResponse
	140, // 357: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateCompartment:output_type -> scalardb.cluster.rpc.v1.CreateCompartmentResponse
	142, // 358: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropCompartment:output_type -> scalardb.cluster.rpc.v1.DropCompartmentResponse
	144, // 359: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetCompartment:output_type -> scalardb.cluster.rpc.v1.GetCompartmentResponse
	146, // 360: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetCompartments:output_type -> scalardb.cluster.rpc.v1.GetCompartmentsResponse
	148, // 361: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateGroup:output_type -> scalardb.cluster.rpc.v1.CreateGroupResponse
	150, // 362: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropGroup:output_type -> scalardb.cluster.rpc.v1.DropGroupResponse
	152, // 363: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetGroup:output_type -> scalardb.cluster.rpc.v1.GetGroupResponse
	154, // 364: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.getGroups:output_type -> scalardb.cluster.rpc.v1.GetGroupsResponse
	156, // 365: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.SetLevelsToUser:output_type -> scalardb.cluster.rpc.v1.SetLevelsToUserResponse
	158, // 366: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AddCompartmentToUser:output_type -> scalardb.cluster.rpc.v1.AddCompartmentToUserResponse
	160, // 367: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RemoveCompartmentFromUser:output_type -> scalardb.cluster.rpc.v1.RemoveCompartmentFromUserResponse
	162, // 368: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.AddGroupToUser:output_type -> scalardb.cluster.rpc.v1.AddGroupToUserResponse
	164, // 369: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.RemoveGroupFromUser:output_type -> scalardb.cluster.rpc.v1.RemoveGroupFromUserResponse
	166, // 370: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DropUserTagInfoFromUser:output_type -> scalardb.cluster.rpc.v1.DropUserTagInfoFromUserResponse
	168, // 371: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetUserTagInfo:output_type -> scalardb.cluster.rpc.v1.GetUserTagInfoResponse
	170, // 372: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateNamespacePolicy:output_type -> scalardb.cluster.rpc.v1.CreateNamespacePolicyResponse
	172, // 373: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.EnableNamespacePolicy:output_type -> scalardb.cluster.rpc.v1.EnableNamespacePolicyResponse
	174, // 374: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DisableNamespacePolicy:output_type -> scalardb.cluster.rpc.v1.DisableNamespacePolicyResponse
	176, // 375: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespacePolicy:output_type -> scalardb.cluster.rpc.v1.GetNamespacePolicyResponse
	178, // 376: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetNamespacePolicies:output_type -> scalardb.cluster.rpc.v1.GetNamespacePoliciesResponse
	180, // 377: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.CreateTablePolicy:output_type -> scalardb.cluster.rpc.v1.CreateTablePolicyResponse
	182, // 378: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.EnableTablePolicy:output_type -> scalardb.cluster.rpc.v1.EnableTablePolicyResponse
	184, // 379: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.DisableTablePolicy:output_type -> scalardb.cluster.rpc.v1.DisableTablePolicyResponse
	186, // 380: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetTablePolicy:output_type -> scalardb.cluster.rpc.v1.GetTablePolicyResponse
	188, // 381: scalardb.cluster.rpc.v1.DistributedTransactionAdmin.GetTablePolicies:output_type -> scalardb.cluster.rpc.v1.GetTablePoliciesResponse
	291, // [291:382] is the sub-list for method output_type
	200, // [200:291] is the sub-list for method input_type
	200, // [200:200] is the sub-list for extension type_name
	200, // [200:200] is the sub-list for extension extendee
	0,   // [0:200] is the sub-list for field type_name
}

func init() { file_proto_scalardb_scalardb_cluster_proto_init() }
func file_proto_scalardb_scalardb_cluster_proto_init() {
	if File_proto_scalardb_scalardb_cluster_proto != nil {
		return
	}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[0].OneofWrappers = []any{
		(*Column_BooleanValue_)(nil),
		(*Column_IntValue_)(nil),
		(*Column_BigintValue)(nil),
		(*Column_FloatValue_)(nil),
		(*Column_DoubleValue_)(nil),
		(*Column_TextValue_)(nil),
		(*Column_BlobValue_)(nil),
		(*Column_DateValue_)(nil),
		(*Column_TimeValue_)(nil),
		(*Column_TimestampValue_)(nil),
		(*Column_TimestamptzValue)(nil),
	}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[5].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[6].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[7].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[8].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[9].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[11].OneofWrappers = []any{
		(*Mutation_Put)(nil),
		(*Mutation_Delete)(nil),
		(*Mutation_Insert)(nil),
		(*Mutation_Upsert)(nil),
		(*Mutation_Update)(nil),
	}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[14].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[15].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[17].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[18].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[19].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[21].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[23].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[25].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[27].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[29].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[31].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[80].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[89].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[91].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[95].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[97].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[101].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[106].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[108].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[115].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[123].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[131].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[134].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[139].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[142].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[155].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[163].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[173].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[179].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[183].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[184].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[185].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[186].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[187].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[188].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[189].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[190].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[191].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[192].OneofWrappers = []any{}
	file_proto_scalardb_scalardb_cluster_proto_msgTypes[193].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scalardb_scalardb_cluster_proto_rawDesc), len(file_proto_scalardb_scalardb_cluster_proto_rawDesc)),
			NumEnums:      13,
			NumMessages:   220,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_scalardb_scalardb_cluster_proto_goTypes,
		DependencyIndexes: file_proto_scalardb_scalardb_cluster_proto_depIdxs,
		EnumInfos:         file_proto_scalardb_scalardb_cluster_proto_enumTypes,
		MessageInfos:      file_proto_scalardb_scalardb_cluster_proto_msgTypes,
	}.Build()
	File_proto_scalardb_scalardb_cluster_proto = out.File
	file_proto_scalardb_scalardb_cluster_proto_goTypes = nil
	file_proto_scalardb_scalardb_cluster_proto_depIdxs = nil
}
